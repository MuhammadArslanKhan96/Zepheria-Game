{"version":3,"file":"index-legacy-585d47fd.js","sources":["../../src/lib/pwa.ts","../../src/lib/log.ts","../../../../../../../../../@vite-plugin-pwa/virtual:pwa-register","../../src/utils/detect.ts","../../../common/network/opcodes.ts","../../../common/network/modules.ts","../../src/utils/press.ts","../../../common/network/packets.ts","../../src/utils/storage.ts","../../src/entity/animation.ts","../../src/entity/sprite.ts","../../src/utils/util.ts","../../src/app.ts","../../src/controllers/audio.ts","../../src/utils/timer.ts","../../../../node_modules/jquery/dist/jquery.js","../../src/utils/tooltip.ts","../../src/renderer/bubbles/blob.ts","../../src/controllers/bubble.ts","../../src/entity/character/handler.ts","../../src/utils/transition.ts","../../src/entity/entity.ts","../../src/entity/character/character.ts","../../src/entity/character/mob/mob.ts","../../src/entity/npc/npc.ts","../../src/entity/character/player/task.ts","../../src/entity/character/player/skill.ts","../../src/entity/character/player/ability.ts","../../src/entity/character/player/friend.ts","../../src/entity/character/player/equipment/equipment.ts","../../src/entity/character/player/equipment/armour.ts","../../src/entity/character/player/equipment/armourskin.ts","../../src/entity/character/player/equipment/boots.ts","../../src/entity/character/player/equipment/pendant.ts","../../src/entity/character/player/equipment/ring.ts","../../src/entity/character/player/equipment/weapon.ts","../../src/entity/character/player/equipment/weaponskin.ts","../../src/entity/character/player/equipment/arrows.ts","../../src/entity/character/player/player.ts","../../src/entity/objects/chest.ts","../../src/entity/objects/item.ts","../../src/entity/objects/projectile.ts","../../src/renderer/grids.ts","../../src/controllers/entities.ts","../../src/renderer/infos/splat.ts","../../src/controllers/info.ts","../../src/controllers/chat.ts","../../src/controllers/hud.ts","../../src/controllers/input.ts","../../src/menu/menu.ts","../../src/menu/actions.ts","../../src/menu/inventory.ts","../../src/menu/bank.ts","../../src/menu/store.ts","../../src/menu/header.ts","../../src/menu/profile/impl/state.ts","../../src/menu/profile/impl/abilities.ts","../../src/menu/profile/impl/skills.ts","../../src/menu/profile/profile.ts","../../src/menu/enchant.ts","../../src/menu/warp.ts","../../src/menu/notification.ts","../../src/menu/settings.ts","../../src/menu/equipments.ts","../../src/menu/achievements.ts","../../src/menu/quests.ts","../../src/menu/friends.ts","../../src/menu/trade.ts","../../src/menu/interact.ts","../../src/menu/leaderboards.ts","../../src/menu/guilds.ts","../../src/menu/leaderboards-footer.ts","../../src/menu/crafting.ts","../../src/controllers/menu.ts","../../src/renderer/pointers/arrow.ts","../../src/controllers/pointer.ts","../../src/controllers/sprites.ts","../../src/controllers/zoning.ts","../../src/entity/character/player/handler.ts","../../src/map/map.ts","../../../../node_modules/pako/dist/pako.esm.mjs","../../src/network/connection.ts","../../src/network/messages.ts","../../src/network/socket.ts","../../src/renderer/camera.ts","../../src/renderer/minigame.ts","../../src/renderer/overlays.ts","../../src/renderer/webgl/shader.ts","../../src/renderer/webgl/tileset.ts","../../src/renderer/webgl/layer.ts","../../src/renderer/tile.ts","../../../../node_modules/illuminated/dist/illuminated.mjs","../../src/renderer/renderer.ts","../../src/renderer/webgl/webgl.ts","../../src/renderer/canvas.ts","../../src/renderer/updater.ts","../../src/lib/astar.ts","../../src/utils/pathfinder.ts","../../src/game.ts","../../../../node_modules/@sentry/utils/esm/is.js","../../../../node_modules/@sentry/utils/esm/worldwide.js","../../../../node_modules/@sentry/utils/esm/logger.js","../../../../node_modules/@sentry/utils/esm/object.js","../../../../node_modules/@sentry/utils/esm/stacktrace.js","../../../../node_modules/@sentry/utils/esm/supports.js","../../../../node_modules/@sentry/utils/esm/instrument.js","../../../../node_modules/@sentry/utils/esm/syncpromise.js","../../../../node_modules/@sentry/utils/esm/misc.js","../../../../node_modules/@sentry/utils/esm/node.js","../../../../node_modules/@sentry/utils/esm/env.js","../../../../node_modules/@sentry/utils/esm/url.js","../../../../node_modules/@sentry/utils/esm/time.js","../../../../node_modules/@sentry/core/esm/constants.js","../../../../node_modules/@sentry/core/esm/session.js","../../../../node_modules/@sentry/core/esm/scope.js","../../../../node_modules/@sentry/core/esm/hub.js","../../../../node_modules/@sentry/core/esm/tracing/errors.js","../../../../node_modules/@sentry/core/esm/tracing/utils.js","../../../../node_modules/@sentry/core/esm/tracing/span.js","../../../../node_modules/@sentry/core/esm/tracing/transaction.js","../../../../node_modules/@sentry/core/esm/tracing/idletransaction.js","../../../../node_modules/@sentry/core/esm/tracing/hubextensions.js","../../../../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js","../../../../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/utils/node-utils.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/express.js","../../../../node_modules/@sentry/utils/esm/requestdata.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/postgres.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/mysql.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/mongo.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/prisma.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/graphql.js","../../../../node_modules/@sentry-internal/tracing/esm/node/integrations/apollo.js","../../../../node_modules/@sentry-internal/tracing/esm/browser/types.js","../../../../node_modules/@sentry-internal/tracing/esm/browser/request.js","../../../../node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js","../../../../node_modules/@sentry-internal/tracing/esm/browser/router.js","../../../../node_modules/@sentry/tracing/esm/index.js","../../../../node_modules/@sentry-internal/tracing/esm/extensions.js","../../src/main.ts"],"sourcesContent":["import log from './log';\n\nimport { registerSW } from 'virtual:pwa-register';\n\n/**\n * The `BeforeInstallPromptEvent` is fired at the `Window.onbeforeinstallprompt` handler\n * before a user is prompted to \"install\" a web site to a home screen on mobile.\n */\ninterface BeforeInstallPromptEvent extends Event {\n    /**\n     * Returns an array of `DOMString` items containing the platforms on which the event was\n     * dispatched. This is provided for user agents that want to present a choice of versions\n     * to the user such as, for example, \"web\" or \"play\" which would allow the user to chose\n     * between a web version or an Android version.\n     */\n    readonly platforms: string[];\n\n    /**\n     * Returns a `Promise` that resolves to a `DOMString`\n     * containing either \"accepted\" or \"dismissed\".\n     */\n    readonly userChoice: Promise<{\n        outcome: 'accepted' | 'dismissed';\n        platform: string;\n    }>;\n\n    /**\n     * Allows a developer to show the install prompt at a time of their own choosing.\n     * This method returns a Promise.\n     */\n    prompt(): Promise<void>;\n}\ndeclare global {\n    interface WindowEventMap {\n        beforeinstallprompt: BeforeInstallPromptEvent;\n    }\n}\n\nlet deferredPrompt: BeforeInstallPromptEvent | null;\n\nexport default async function install(): Promise<void> {\n    if (!deferredPrompt) return;\n\n    if (localStorage.getItem('prompted') !== 'true')\n        await deferredPrompt.prompt().catch((error: Error) => log.error('[SW ERROR]', error));\n\n    let { outcome } = await deferredPrompt.userChoice;\n\n    localStorage.setItem('prompted', 'true');\n    if (outcome === 'accepted') {\n        // PWA has been installed\n    }\n    // User chose not to install PWA\n    else;\n\n    deferredPrompt = null;\n}\n\nfunction init(): void {\n    window.addEventListener('beforeinstallprompt', (event) => {\n        // Prevent Chrome 67 and earlier from automatically showing the prompt.\n        event.preventDefault();\n\n        deferredPrompt = event;\n    });\n\n    registerSW({ immediate: true });\n}\n\n// Check compatibility for the browser and environment we're running this in.\nif (import.meta.env.PROD && 'serviceWorker' in navigator) init();\n","/**\n * A class that handles logging.\n *\n * @param level The level of logging to perform.\n */\nclass Logger {\n    public constructor(public level: 'debug' | 'info') {}\n\n    public info(...data: unknown[]): void {\n        if (this.level === 'debug' || this.level === 'info') console.info(...data);\n    }\n\n    public debug(...data: unknown[]): void {\n        if (this.level === 'debug') console.debug(...data);\n    }\n\n    public error(...data: unknown[]): void {\n        console.error(...data);\n    }\n}\n\nexport default new Logger(import.meta.env.DEV ? 'debug' : 'info');\n","// src/client/build/register.ts\nvar autoUpdateMode = \"true\";\nvar selfDestroying = \"false\";\nvar auto = autoUpdateMode === \"true\";\nvar autoDestroy = selfDestroying === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisteredSW,\n    onRegisterError\n  } = options;\n  let wb;\n  let registerPromise;\n  let sendSkipWaitingMessage;\n  const updateServiceWorker = async (_reloadPage = true) => {\n    await registerPromise;\n    if (!auto) {\n      await (sendSkipWaitingMessage == null ? void 0 : sendSkipWaitingMessage());\n    }\n  };\n  async function register() {\n    if (\"serviceWorker\" in navigator) {\n      const { Workbox } = await import(\"workbox-window\");\n      wb = new Workbox(\"/sw.js\", { scope: \"/\", type: \"classic\" });\n      sendSkipWaitingMessage = async () => {\n        await (wb == null ? void 0 : wb.messageSkipWaiting());\n      };\n      if (!autoDestroy) {\n        if (auto) {\n          wb.addEventListener(\"activated\", (event) => {\n            if (event.isUpdate || event.isExternal)\n              window.location.reload();\n          });\n          wb.addEventListener(\"installed\", (event) => {\n            if (!event.isUpdate) {\n              onOfflineReady == null ? void 0 : onOfflineReady();\n            }\n          });\n        } else {\n          let onNeedRefreshCalled = false;\n          const showSkipWaitingPrompt = () => {\n            onNeedRefreshCalled = true;\n            wb == null ? void 0 : wb.addEventListener(\"controlling\", (event) => {\n              if (event.isUpdate)\n                window.location.reload();\n            });\n            onNeedRefresh == null ? void 0 : onNeedRefresh();\n          };\n          wb.addEventListener(\"installed\", (event) => {\n            if (typeof event.isUpdate === \"undefined\") {\n              if (typeof event.isExternal !== \"undefined\") {\n                if (event.isExternal)\n                  showSkipWaitingPrompt();\n                else\n                  !onNeedRefreshCalled && (onOfflineReady == null ? void 0 : onOfflineReady());\n              } else {\n                if (event.isExternal)\n                  window.location.reload();\n                else\n                  !onNeedRefreshCalled && (onOfflineReady == null ? void 0 : onOfflineReady());\n              }\n            } else if (!event.isUpdate) {\n              onOfflineReady == null ? void 0 : onOfflineReady();\n            }\n          });\n          wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n          wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n        }\n      }\n      wb.register({ immediate }).then((r) => {\n        if (onRegisteredSW)\n          onRegisteredSW(\"/sw.js\", r);\n        else\n          onRegistered == null ? void 0 : onRegistered(r);\n      }).catch((e) => {\n        onRegisterError == null ? void 0 : onRegisterError(e);\n      });\n    }\n  }\n  registerPromise = register();\n  return updateServiceWorker;\n}\nexport {\n  registerSW\n};\n","export let agent = navigator.userAgent.toLowerCase();\n\nexport let isLargeScreen = (): boolean => window.innerWidth >= 1500;\n\nexport let isIPad = (): boolean => agent.includes('ipad');\n\nexport let isSafari = (): boolean => agent.includes('safari') && !agent.includes('chrome');\n\nexport let isEdge = (): boolean => agent.includes('edge/');\n\nexport function isTablet(): boolean {\n    let isAppleTablet = agent.includes('ipad'),\n        isAndroidTablet = agent.includes('android');\n\n    return (isAppleTablet || isAndroidTablet) && window.innerWidth >= 640;\n}\n\nexport let isMobile = (): boolean => window.innerWidth < 1000;\n\nexport function iOSVersion(): number | undefined {\n    let match = /os (\\d+)_(\\d+)_?(\\d+?)/.exec(agent);\n\n    if (match) {\n        let version = [\n            parseInt(match[1], 10),\n            parseInt(match[2], 10),\n            parseInt(match[3] || '0', 10)\n        ];\n\n        return parseFloat(version.join('.'));\n    }\n}\n\nexport function androidVersion(): number | undefined {\n    let split = agent.split('android');\n\n    if (split.length > 1) return parseFloat(split[1].split(';')[0]);\n}\n\nexport let isAppleDevice = (): boolean => agent.startsWith('ip');\n\n// Older mobile devices will default to non-centred camera mode\nexport function isOldAndroid(): boolean {\n    let version = androidVersion();\n\n    return !!version && version < 6;\n}\n\nexport function isOldApple(): boolean {\n    let version = iOSVersion();\n\n    return !!version && version < 9;\n}\n\nexport let useCenteredCamera = (): boolean => isOldAndroid() || isOldApple() || isIPad();\n","export enum Login {\n    Login,\n    Register,\n    Guest\n}\n\nexport enum List {\n    Spawns,\n    Positions\n}\n\nexport enum Equipment {\n    Batch,\n    Equip,\n    Unequip,\n    Style\n}\n\nexport enum Movement {\n    Request,\n    Started,\n    Step,\n    Stop,\n    Move,\n    Follow,\n    Entity,\n    Speed\n}\n\nexport enum Target {\n    Talk,\n    Attack,\n    None,\n    Object\n}\n\nexport enum Combat {\n    Initiate,\n    Hit,\n    Finish,\n    Sync\n}\n\nexport enum Projectile {\n    Static,\n    Dynamic,\n    Create,\n    Update,\n    Impact\n}\n\nexport enum Network {\n    Ping,\n    Pong\n}\n\nexport enum Container {\n    Batch,\n    Add,\n    Remove,\n    Select,\n    Swap\n}\n\nexport enum Ability {\n    Batch,\n    Add,\n    Update,\n    Use,\n    QuickSlot,\n    Toggle\n}\n\nexport enum Quest {\n    Batch,\n    Progress,\n    Finish\n}\n\nexport enum Achievement {\n    Batch,\n    Progress\n}\n\nexport enum Notification {\n    Ok,\n    YesNo,\n    Text,\n    Popup\n}\n\nexport enum Experience {\n    Sync,\n    Skill\n}\n\nexport enum NPC {\n    Talk,\n    Store,\n    Bank,\n    Enchant,\n    Countdown\n}\n\nexport enum Trade {\n    Request,\n    Add,\n    Remove,\n    Accept,\n    Close,\n    Open\n}\n\nexport enum Enchant {\n    Select,\n    Confirm\n}\n\nexport enum Guild {\n    Create,\n    Login,\n    Logout,\n    Join,\n    Leave,\n    Rank,\n    Update,\n    Experience,\n    Banner,\n    List,\n    Error,\n    Chat\n}\n\nexport enum Pointer {\n    Location, // Pointer on the map\n    Relative, // Pointer relative to the screen\n    Entity, // Pointer following an entity\n    Remove,\n    Button // Pointer for a button\n}\n\nexport enum Store {\n    Open,\n    Close,\n    Buy,\n    Sell,\n    Update,\n    Select\n}\n\nexport enum TeamWar {\n    Score,\n    End,\n    Lobby,\n    Exit\n}\n\nexport enum Overlay {\n    Set,\n    Remove,\n    Lamp,\n    RemoveLamps,\n    Darkness\n}\n\nexport enum Camera {\n    LockX,\n    LockY,\n    FreeFlow,\n    Player\n}\n\nexport enum Command {\n    CtrlClick\n}\n\nexport enum Skill {\n    Batch,\n    Update\n}\n\nexport enum Minigame {\n    TeamWar\n}\n\nexport enum Bubble {\n    Entity,\n    Position\n}\n\nexport enum Effect {\n    Add,\n    Remove\n}\n\nexport enum Friends {\n    List,\n    Add,\n    Remove,\n    Status,\n    Sync\n}\n\nexport enum Player {\n    Login,\n    Logout\n}\n\nexport enum Crafting {\n    Open,\n    Select,\n    Craft\n}\n","/* eslint-disable @typescript-eslint/no-duplicate-enum-values */\n\nimport { Pointer } from './opcodes';\n\nexport let EmptyPointer = {\n    type: Pointer.Remove\n};\n\nexport enum PacketType {\n    Broadcast,\n    Player,\n    Players,\n    Region,\n    Regions,\n    RegionList\n}\n\nexport enum ContainerType {\n    Bank,\n    Inventory,\n    Trade\n}\n\nexport enum Orientation {\n    Up,\n    Down,\n    Left,\n    Right\n}\n\nexport enum EntityType {\n    Player,\n    NPC,\n    Item,\n    Mob,\n    Chest,\n    Projectile,\n    Object,\n    Pet\n}\n\nexport enum AbilityType {\n    Active,\n    Passive\n}\n\nexport type HealTypes = 'passive' | 'hitpoints' | 'mana';\n\n/**\n * Enumeration of special states that an entity could be. For example,\n * an entity could be a quest-based entity and it has special name colour.\n */\n\nexport enum SpecialEntityTypes {\n    Achievement,\n    Quest,\n    Area,\n    Boss,\n    Miniboss\n}\n\nexport enum Actions {\n    Idle,\n    Attack,\n    Walk,\n    Orientate\n}\n\nexport enum MenuActions {\n    DropOne = 'drop-one',\n    DropMany = 'drop-many',\n    Wield = 'wield',\n    Equip = 'equip',\n    Attack = 'attack',\n    Eat = 'eat',\n    Eat2 = 'eat2',\n    Move = 'move',\n    Trade = 'trade',\n    Potion = 'potion',\n    Follow = 'follow',\n    Examine = 'examine',\n    AddFriend = 'addfriend'\n}\n\nexport enum InteractActions {}\n\nexport enum Hits {\n    Normal,\n    Poison,\n    Heal,\n    Mana,\n    Experience,\n    LevelUp,\n    Critical,\n    Stun,\n    Profession,\n    Freezing,\n    Burning,\n    Terror\n}\n\nexport enum Equipment {\n    Armour,\n    Boots,\n    Pendant,\n    Ring,\n    Weapon,\n    Arrows,\n    WeaponSkin,\n    ArmourSkin\n}\n\nexport enum AttackStyle {\n    None,\n\n    // Melee\n    Stab, // Accuracy experience and boosts accuracy\n    Slash, // Strength experience and boosts maximum damage\n    Defensive, // Defense experience and boosts damage absorbed\n    Crush, // Accuracy + Strength experience and boosts accuracy/damage\n    Shared, // Accuracy + Strength + Defense experience and boosts all\n    Hack, // Strength + Defense experience boosts damage and absorbs damage\n    Chop, // Accuracy + Defense experience boosts accuracy and absorbs damage\n\n    // Archery\n    Accurate, // Higher accuracy but slower\n    Fast, // Faster but lower accuracy\n\n    // Magic\n    Focused, // Slower but higher damage/accuracy\n\n    // Archery and Magic\n    LongRange // Increased attack range and less accurate\n}\n\nexport enum Hovering {\n    Colliding,\n    Mob,\n    Player,\n    Item,\n    NPC,\n    Chest,\n    Object\n}\n\nexport enum AudioTypes {\n    Music,\n    SFX\n}\n\nexport enum PoisonTypes {\n    Venom, // When a mob hits you\n    Plague, // When entering a poisoned area.\n    Persistent // Poison that doesn't wear off until it's cured.\n}\n\nexport enum Warps {\n    Mudwich,\n    Aynor,\n    Lakesworld,\n    Patsow,\n    Crullfield,\n    Undersea\n}\n\nexport enum Skills {\n    Lumberjacking,\n    Accuracy,\n    Archery,\n    Health,\n    Magic,\n    Mining,\n    Strength,\n    Defense,\n    Fishing,\n    Cooking,\n    Smithing,\n    Crafting,\n    Fletching,\n    Smelting, // Not a skill, but used to differntiate smithing from smelting in the crafting.\n    Foraging,\n    Eating,\n    Loitering\n}\n\n// It's easier to define and swap order around here.\nexport let SkillsOrder = [\n    Skills.Health,\n    Skills.Accuracy,\n    Skills.Strength,\n    Skills.Defense,\n    Skills.Archery,\n    Skills.Magic,\n    Skills.Lumberjacking,\n    Skills.Mining,\n    Skills.Fishing,\n    Skills.Foraging,\n    Skills.Crafting,\n    Skills.Cooking,\n    Skills.Fletching,\n    Skills.Smithing,\n    Skills.Eating,\n    Skills.Loitering\n];\n\nexport enum Enchantment {\n    Bloodsucking,\n    Critical,\n    Evasion,\n    Thorns,\n    Explosive,\n    Stun,\n    AntiStun,\n    Splash,\n    DoubleEdged\n}\n\nexport enum AoEType {\n    Character,\n    Player,\n    Mob\n}\n\n// Client sided special effects.\nexport enum Effects {\n    None,\n    Critical,\n    Terror, // Initial terror effect.\n    TerrorStatus, // The terror effect that persists\n    Stun,\n    Healing,\n    Fireball,\n    Iceball,\n    Poisonball,\n    Boulder,\n    Running,\n    HotSauce,\n    DualistsMark,\n    ThickSkin,\n    SnowPotion,\n    FirePotion,\n    Burning,\n    Freezing,\n    Invincible\n}\n\nexport enum DamageStyle {\n    None,\n    Crush,\n    Slash,\n    Stab,\n    Magic,\n    Archery\n}\n\nexport enum Medals {\n    None,\n    Silver,\n    Gold,\n    Artist,\n    Tier1,\n    Tier2,\n    Tier3,\n    Tier4,\n    Tier5,\n    Tier6,\n    Tier7\n}\n\nexport enum Ranks {\n    None,\n    Moderator,\n    Admin,\n    Veteran,\n    Patron,\n    Artist,\n    Cheater,\n    TierOne, // Patron tiers\n    TierTwo,\n    TierThree,\n    TierFour,\n    TierFive,\n    TierSix,\n    TierSeven,\n    HollowAdmin\n}\n\nexport let RankColours = {\n    [Ranks.None]: '',\n    [Ranks.Moderator]: '#02f070',\n    [Ranks.Admin]: '#3bbaff',\n    [Ranks.Veteran]: '#d84343',\n    [Ranks.Patron]: '#db753c',\n    [Ranks.Artist]: '#b552f7',\n    [Ranks.Cheater]: '#ffffff',\n    [Ranks.TierOne]: '#db963c',\n    [Ranks.TierTwo]: '#e6c843',\n    [Ranks.TierThree]: '#d6e34b',\n    [Ranks.TierFour]: '#a9e03a',\n    [Ranks.TierFive]: '#7beb65',\n    [Ranks.TierSix]: '#77e691',\n    [Ranks.TierSeven]: '#77e691',\n    [Ranks.HollowAdmin]: '#3bbaff'\n};\n\nexport let RankTitles = {\n    [Ranks.None]: '',\n    [Ranks.Moderator]: 'Mod',\n    [Ranks.Admin]: 'Admin',\n    [Ranks.Veteran]: 'Veteran',\n    [Ranks.Patron]: 'Patron',\n    [Ranks.Artist]: 'Artist',\n    [Ranks.Cheater]: 'Cheater',\n    [Ranks.TierOne]: 'T1 Patron',\n    [Ranks.TierTwo]: 'T2 Patron',\n    [Ranks.TierThree]: 'T3 Patron',\n    [Ranks.TierFour]: 'T4 Patron',\n    [Ranks.TierFive]: 'T5 Patron',\n    [Ranks.TierSix]: 'T6 Patron',\n    [Ranks.TierSeven]: 'T7 Patron',\n    [Ranks.HollowAdmin]: 'Admin'\n};\n\nexport interface Colours {\n    fill: string;\n    stroke: string;\n}\n\nexport let DamageColours = {\n    // Received damage\n    [Hits.Normal]: {\n        fill: 'rgb(255, 50, 50)',\n        stroke: 'rgb(255, 180, 180)',\n        inflicted: {\n            fill: 'white',\n            stroke: '#373737'\n        }\n    },\n\n    [Hits.Critical]: {\n        fill: 'rgb(204, 0, 204)',\n        stroke: 'rgb(255, 180, 180)',\n        inflicted: {\n            fill: 'rgb(255, 153, 204)',\n            stroke: '#373737'\n        }\n    },\n\n    [Hits.Poison]: {\n        fill: 'rgb(66, 183, 77)',\n        stroke: 'rgb(50, 120 , 50)'\n    },\n\n    [Hits.Heal]: {\n        fill: 'rgb(80, 255, 80)',\n        stroke: 'rgb(50, 120, 50)'\n    },\n\n    [Hits.Mana]: {\n        fill: 'rgb(73, 94, 228)',\n        stroke: 'rgb(56, 63, 133)'\n    },\n\n    [Hits.Experience]: {\n        fill: 'rgb(80, 180, 255)',\n        stroke: 'rgb(15, 85, 138)'\n    },\n\n    [Hits.LevelUp]: {\n        fill: 'rgb(80, 180, 255)',\n        stroke: 'rgb(15, 85, 138)'\n    },\n\n    [Hits.Profession]: {\n        fill: 'rgb(204, 0, 153)',\n        stroke: 'rgb(112, 17, 112)'\n    },\n\n    [Hits.Freezing]: {\n        fill: 'rgb(52, 195, 235)',\n        stroke: 'rgb(14, 138, 227)'\n    },\n\n    [Hits.Burning]: {\n        fill: 'rgb(227, 170, 14)',\n        stroke: 'rgb(235, 135, 52)'\n    }\n};\n\nexport let SkillExpColours = {\n    [Skills.Lumberjacking]: {\n        fill: 'rgb(132, 57, 45)',\n        stroke: 'rgb(101, 48, 35)'\n    },\n\n    [Skills.Accuracy]: {\n        fill: 'rgb(6, 191, 188)',\n        stroke: 'rgb(2, 94, 93)'\n    },\n\n    [Skills.Archery]: {\n        fill: 'rgb(34, 214, 130)',\n        stroke: 'rgb(7, 184, 101)'\n    },\n\n    [Skills.Health]: {\n        fill: 'rgb(239, 90, 90)',\n        stroke: 'rgb(255, 0, 0)'\n    },\n\n    [Skills.Magic]: {\n        fill: 'rgb(37, 124, 210)',\n        stroke: 'rgb(12, 55, 208)'\n    },\n\n    [Skills.Mining]: {\n        fill: 'rgb(105, 106, 107)',\n        stroke: 'rgb(45, 45, 46)'\n    },\n\n    [Skills.Strength]: {\n        fill: 'rgb(232, 211, 185)',\n        stroke: 'rgb(189, 172, 151)'\n    },\n\n    [Skills.Defense]: {\n        fill: 'rgb(110, 158, 255)',\n        stroke: 'rgb(7, 63, 176)'\n    },\n\n    [Skills.Fishing]: {\n        fill: 'rgb(0, 255, 255)',\n        stroke: 'rgb(0, 255, 255)'\n    },\n\n    [Skills.Cooking]: {\n        fill: 'rgb(255, 0, 0)',\n        stroke: 'rgb(255, 0, 0)'\n    },\n\n    [Skills.Smithing]: {\n        fill: 'rgb(132, 57, 45)',\n        stroke: 'rgb(101, 48, 35)'\n    },\n\n    [Skills.Crafting]: {\n        fill: 'rgb(255, 255, 0)',\n        stroke: 'rgb(255, 255, 0)'\n    },\n\n    [Skills.Fletching]: {\n        fill: 'rgb(255, 255, 0)',\n        stroke: 'rgb(255, 255, 0)'\n    },\n\n    [Skills.Smelting]: {\n        fill: 'rgb(255, 255, 0)',\n        stroke: 'rgb(255, 255, 0)'\n    },\n\n    [Skills.Eating]: {\n        fill: 'rgb(255, 0, 0)',\n        stroke: 'rgb(255, 0, 0)'\n    },\n\n    [Skills.Loitering]: {\n        fill: 'rgb(255, 0, 0)',\n        stroke: 'rgb(255, 0, 0)'\n    },\n\n    [Skills.Foraging]: {\n        fill: 'rgb(255, 0, 0)',\n        stroke: 'rgb(255, 0, 0)'\n    }\n};\n\nexport let NameColours = {\n    [SpecialEntityTypes.Achievement]: 'rgb(60, 179, 113)',\n    [SpecialEntityTypes.Quest]: 'rgb(106, 90, 205)',\n    [SpecialEntityTypes.Area]: 'rgb(255, 165, 0)',\n    [SpecialEntityTypes.Boss]: 'rgb(150, 0, 51)',\n    [SpecialEntityTypes.Miniboss]: 'rgb(204, 51, 0)'\n};\n\nexport let EntityScale = {\n    [SpecialEntityTypes.Miniboss]: 1.2\n};\n\nexport let PoisonInfo = {\n    [PoisonTypes.Venom]: {\n        name: 'Venom',\n        damage: 5,\n        duration: 30,\n        rate: 2 // every 2 seconds\n    },\n    [PoisonTypes.Plague]: {\n        name: 'Plague',\n        damage: 5,\n        duration: 60,\n        rate: 1\n    },\n    [PoisonTypes.Persistent]: {\n        name: 'Persistent',\n        damage: 2,\n        duration: -1,\n        rate: 1\n    }\n};\n\nexport enum NPCRole {\n    Banker,\n    Enchanter,\n    Clerk\n}\n\nexport enum GuildRank {\n    Fledgling,\n    Emergent,\n    Established,\n    Adept,\n    Veteran,\n    Elite,\n    Master,\n    Landlord\n}\n\nexport enum BannerColour {\n    Green = 'green',\n    Blue = 'blue',\n    Red = 'red',\n    Grey = 'grey',\n    Black = 'black',\n    Tangerine = 'tangerine',\n    Yellow = 'yellow',\n    Purple = 'purple',\n    Pink = 'pink'\n}\n\nexport enum BannerOutline {\n    Green = 'green',\n    Blue = 'blue',\n    Orange = 'orange',\n    White = 'white',\n    Grey = 'grey',\n    Tangerine = 'tangerine',\n    Yellow = 'yellow',\n    Purple = 'purple',\n    Pink = 'pink'\n}\n\nexport enum BannerCrests {\n    None = 'none',\n    Star = 'star',\n    Hawk = 'hawk',\n    Phoenix = 'phoenix'\n}\n\nexport const Constants = {\n    MAX_STACK: 2_147_483_647, // Maximum default stack size for a stackable item.\n    MAX_LEVEL: 135, // Maximum attainable level.\n    INVENTORY_SIZE: 25, // Maximum inventory size\n    BANK_SIZE: 420, // Maximum bank size\n    DROP_PROBABILITY: 10_000, // 1 in 10000\n    MAX_PROFESSION_LEVEL: 99, // Totally not influenced by another game lol\n    HEAL_RATE: 7000, // healing every 7 seconds\n    EFFECT_RATE: 10_000, // effects every 10 seconds\n    STORE_UPDATE_FREQUENCY: 20_000, // update store every 20 seconds\n    MAP_DIVISION_SIZE: 48, // The size of a region the map is split into.\n    SPAWN_POINT: '405,27', // Default starting point outside the tutorial\n    TUTORIAL_QUEST_KEY: 'tutorial', // key of the tutorial quest\n    TUTORIAL_SPAWN_POINT: '579,7', // 'x,y' values\n    RESOURCE_RESPAWN: 30_000,\n    TREE_RESPAWN: 25_000,\n    CHEST_RESPAWN: 50_000, // 50 seconds\n    SKILL_LOOP: 1000, // How often we check the loop of a skill\n    MAX_ACCURACY: 0.45, // Maximum attainable accuracy for a character.\n    EDIBLE_COOLDOWN: 1500, // 1.5 seconds between eating foods to prevent spam.\n    CRAFT_COOLDOWN: 1500, // 1.5 seconds between crafting items to prevent spam.\n    INVALID_MOVEMENT_THRESHOLD: 3, // Amount of invalid movements before ignoring packets.\n    ARCHER_ATTACK_RANGE: 8, // Default attack range for bows if no other range is specified.\n    MAX_CONNECTIONS: 16, // Maximum number of connections per IP address.\n    EXPERIENCE_PER_HIT: 4, // Amount of experinece received per 1 damage dealt.\n    SNOW_POTION_DURATION: 60_000, // 60 seconds\n    FIRE_POTION_DURATION: 60_000, // 60 seconds\n    FREEZING_DURATION: 60_000, // 60 seconds\n    BURNING_DURATION: 60_000, // 60 seconds\n    TERROR_DURATION: 60_000, // 60 seconds\n    LOITERING_THRESHOLD: 90_000, // 90 seconds until loitering activates\n    STUN_DURATION: 10_000, // 10 seconds\n    COLD_EFFECT_DAMAGE: 10,\n    BURNING_EFFECT_DAMAGE: 20,\n    ATTACKER_TIMEOUT: 20_000, // 20 seconds\n    MAX_GUILD_MEMBERS: 40, // Maximum number of members in a guild\n    EVENTS_CHECK_INTERVAL: 3_600_000 // Every 1 hour\n};\n\nexport enum MinigameConstants {\n    TEAM_WAR_COUNTDOWN = 240, // 240 seconds (4 minutes) in the lobby\n    TEAM_WAR_MIN_PLAYERS = 2 // Minimum number of players to start a team war\n}\n\nexport enum APIConstants {\n    UNHANDLED_HTTP_METHOD,\n    NOT_FOUND_ERROR,\n    MALFORMED_PARAMETERS,\n    PLAYER_NOT_ONLINE\n}\n\n// Defaults that apply to all types of entities\nexport enum Defaults {\n    MOVEMENT_SPEED = 250, // 250 milliseconds to traverse one tile\n    ATTACK_RATE = 1000, // every 1 second\n    POISON_CHANCE = 15 // 15 in (235 - level) chance to poison\n}\n\nexport enum ItemDefaults {\n    RESPAWN_DELAY = 30_000, // 30 seconds\n    DESPAWN_DURATION = 34_000, // 34 seconds of blinking before despawning\n    BLINK_DELAY = 30_000 // 40 seconds until item starts blinking.\n}\n\n// Defaults that apply specifically to mobs\nexport enum MobDefaults {\n    AGGRO_RANGE = 2, // Default aggro range of 2 tiles\n    RESPAWN_DELAY = 60_000, // 60 seconds to respawn\n    ROAM_DISTANCE = 7, // 7 tiles away from spawn point\n    ROAM_FREQUENCY = 17_000, // Roam interval every 35 seconds\n    DEFENSE_LEVEL = 1,\n    ATTACK_LEVEL = 1\n}\n\n// Flags used by Tiled to determine tile rotation.\nexport enum MapFlags {\n    DIAGONAL_FLAG = 0x20_00_00_00,\n    VERTICAL_FLAG = 0x40_00_00_00,\n    HORIZONTAL_FLAG = 0x80_00_00_00\n}\n\n// Handles the two states of a resource, default or depleted.\nexport enum ResourceState {\n    Default,\n    Depleted\n}\n","let holdTimeout: number | undefined;\n\n// A touch is considered a hold if it lasts longer than 200ms.\nconst HOLD_TIME = 200;\n\n/**\n * Resets the hold timeout.\n */\n\nfunction resetTimeout() {\n    // Clear the hold timeout if it exists\n    if (holdTimeout !== undefined) {\n        clearTimeout(holdTimeout);\n\n        holdTimeout = undefined;\n    }\n}\n\n/**\n * Registers a secondary press event, which is a right click or a long press.\n * @param element The element to register the event on.\n * @param callback The callback to call when the event is triggered.\n */\n\n// Register event listeners to detect a hold event.\nexport function onSecondaryPress(\n    element: HTMLElement,\n    callback: (position: { x: number; y: number }) => void\n) {\n    // Get the game container element.\n    let gameContainer = document.querySelector<HTMLElement>('#game-container')!;\n\n    element.addEventListener('contextmenu', (event) => {\n        // Prevent the default browser context menu.\n        event.preventDefault();\n\n        // Reset the hold timeout in case the touch is still active.\n        resetTimeout();\n\n        // Call the callback with the touch position.\n        callback({ x: event.clientX, y: event.clientY });\n    });\n\n    // Prevent the default browser context menu on the game container.\n    gameContainer.addEventListener('contextmenu', (event) => event.preventDefault());\n\n    element.addEventListener('touchstart', (event) => {\n        // Get the first touch.\n        let [touch] = event.touches;\n\n        // Set a timeout to call the callback after HOLD_TIME ms.\n        holdTimeout = window.setTimeout(\n            () => callback({ x: touch.clientX, y: touch.clientY }),\n            HOLD_TIME\n        );\n    });\n\n    // Reset the hold timeout in case the touch is still active.\n    gameContainer.addEventListener('touchmove', resetTimeout);\n}\n\n/**\n * Registers a drag and drop event.\n * @param element The element to register the event on.\n * @param dropCallback The callback to call when the element is dropped.\n * @param exception A function that returns true if the drag and drop should be cancelled.\n */\n\nexport function onDragDrop(\n    element: HTMLElement,\n    dropCallback: (clone: HTMLElement, target: HTMLElement) => void,\n    exception?: () => boolean\n) {\n    let isHolding = false,\n        dragClone: HTMLElement | undefined,\n        gameContainer = document.querySelector<HTMLElement>('#game-container')!;\n\n    // Add the event listeners for the mouse events\n    element.addEventListener('mousedown', () => startHold());\n    gameContainer.addEventListener('mousemove', (event) => moveHold(event.clientX, event.clientY));\n    gameContainer.addEventListener('mouseup', (event) => endHold(event.clientX, event.clientY));\n\n    // Add the event listeners for the touch events\n    element.addEventListener('touchstart', () => startHold(HOLD_TIME));\n    gameContainer.addEventListener('touchmove', (event) => {\n        let [touch] = event.touches;\n\n        if (isHolding) event.preventDefault();\n\n        moveHold(touch.clientX, touch.clientY);\n    });\n    gameContainer.addEventListener('touchend', (event) => {\n        let [touch] = event.changedTouches;\n\n        endHold(touch.clientX, touch.clientY);\n    });\n    gameContainer.addEventListener('touchcancel', cancelHold);\n\n    // When the user starts holding the item, start the hold timeout.\n    function startHold(delay?: number) {\n        // The timeout is used to determine if the user is holding the item.\n        // If the timeout is reset, the user is not holding the item.\n        holdTimeout = window.setTimeout(() => {\n            // If the exception function returns true, cancel the hold.\n            if (exception?.()) return;\n\n            cancelHold();\n            // The user is holding the item.\n            isHolding = true;\n\n            // Create a clone of the item element.\n            dragClone = element.cloneNode(true) as HTMLElement;\n\n            dragClone.style.position = 'absolute';\n            dragClone.style.opacity = '0.75';\n            dragClone.style.top = `${-element.clientHeight}px`;\n            dragClone.style.left = `${-element.clientWidth}px`;\n            dragClone.style.pointerEvents = 'none';\n            dragClone.style.touchAction = 'none';\n\n            // Append the clone to the game container.\n            gameContainer?.append(dragClone);\n        }, delay);\n    }\n\n    // When the user moves the item, update the clone's position.\n    function moveHold(x: number, y: number) {\n        // Reset the hold timeout.\n        resetTimeout();\n\n        // If the user is not holding the item or the clone does not exist, cancel the hold.\n        if (!isHolding || !dragClone) return cancelHold();\n\n        // Update the clone's position.\n        dragClone.style.top = `${y - element.clientHeight / 2}px`;\n        dragClone.style.left = `${x - element.clientWidth / 2}px`;\n    }\n\n    // When the user stops holding the item, drop the item.\n    function endHold(x: number, y: number) {\n        // If the user is not holding the item, cancel the hold.\n        if (!isHolding) return;\n\n        // Save the clone element in a variable.\n        let clone = dragClone;\n        cancelHold();\n\n        // Get the element at the specified coordinates.\n        let target = document.elementFromPoint(x, y) as HTMLElement | null;\n\n        // If the target does not exist or the clone does not exist, cancel the hold.\n        if (!target || !clone) return;\n\n        // Call the drop callback with the clone and the target.\n        dropCallback(clone, target);\n    }\n\n    // Cancel the hold.\n    function cancelHold() {\n        // Reset the hold timeout.\n        resetTimeout();\n        isHolding = false;\n\n        // Remove the clone from the game container.\n        dragClone?.remove();\n        dragClone = undefined;\n\n        // Remove the focused class from the item element.\n        element.classList.remove('item-slot-focused');\n    }\n}\n","enum Packets {\n    Handshake,\n    Login,\n    Welcome,\n    Map,\n    Spawn,\n    List,\n    Who,\n    Equipment,\n    Ready,\n    Sync,\n    Movement,\n    Teleport,\n    Despawn,\n    Target,\n    Combat,\n    Animation,\n    Points,\n    Network,\n    Chat,\n    Command,\n    Container,\n    Ability,\n    Quest,\n    Achievement,\n    Notification,\n    Blink,\n    Heal,\n    Experience,\n    Death,\n    Music,\n    NPC,\n    Respawn,\n    Trade,\n    Enchant,\n    Guild,\n    Pointer,\n    PVP,\n    Poison,\n    Warp,\n    Store,\n    Overlay,\n    Camera,\n    Bubble,\n    Skill,\n    Update,\n    Minigame,\n    Effect,\n    Friends,\n    Focus,\n    Rank,\n    Examine,\n    Player,\n    Relay,\n    Crafting\n}\n\nexport default Packets;\n","import { isMobile } from './detect';\n\nimport log from '../lib/log';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { RegionData, RegionTileData } from '@kaetram/common/types/map';\nimport type { CursorTiles } from '../map/map';\n\ninterface PlayerData {\n    username: string;\n    password: string;\n    autoLogin: boolean;\n    rememberMe: boolean;\n    orientation: number;\n    zoom: number;\n}\n\ninterface Settings {\n    musicVolume: number;\n    soundVolume: number;\n    brightness: number;\n    audioEnabled: boolean;\n    lowPowerMode: boolean;\n    debugMode: boolean;\n    showNames: boolean;\n    showLevels: boolean;\n    disableCaching: boolean;\n}\n\ninterface RegionMapData {\n    regionData: RegionData;\n    objects: number[];\n    cursorTiles: CursorTiles;\n}\n\ninterface StorageData {\n    new: boolean;\n    world: number;\n    clientVersion: string;\n    errorMessage: string;\n    player: PlayerData;\n    settings: Settings;\n}\n\nlet storage = window.localStorage,\n    name = 'data';\n\nexport default class Storage {\n    public data: StorageData;\n    public mapData!: IDBDatabase; // Where we store the region caching.\n\n    public newVersion = false;\n\n    public constructor() {\n        this.data = storage.data ? JSON.parse(storage.getItem(name)!) : this.create();\n\n        this.newVersion = this.isNewVersion();\n\n        if (this.newVersion) {\n            this.set(this.create());\n            this.clearIndexedDB();\n        } else this.loadIndexedDB();\n    }\n\n    /**\n     * Creates a new empty template for the storage data.\n     * @returns A StorageData object containing default values.\n     */\n\n    private create(): StorageData {\n        return {\n            new: true,\n            world: window.config.serverId,\n            clientVersion: window.config.version,\n            errorMessage: '',\n\n            player: {\n                username: '',\n                password: '',\n                autoLogin: false,\n                rememberMe: false,\n                orientation: Modules.Orientation.Down,\n                zoom: 3\n            },\n\n            settings: {\n                musicVolume: 100,\n                soundVolume: 100,\n                brightness: 100,\n                audioEnabled: !isMobile(),\n                lowPowerMode: false,\n                debugMode: false,\n                showNames: true,\n                showLevels: true,\n                disableCaching: false\n            }\n        };\n    }\n\n    /**\n     * Handles the creation of the IndexedDB database and population for the first run. This is\n     * where we store all of the map data for the regions.\n     */\n\n    private loadIndexedDB(): void {\n        let request: IDBOpenDBRequest = window.indexedDB?.open('mapCache', this.getDBVersion());\n\n        // If something goes wrong just re-create the database.\n        request.addEventListener('error', () => {\n            this.clearIndexedDB();\n        });\n\n        // Upgrade occurs when we change the version of the database (or a new one is created).\n        request.addEventListener('upgradeneeded', (event: Event) => {\n            let database = (event.target as IDBOpenDBRequest).result;\n\n            if (!database) console.error('Could not open IndexedDB database.');\n\n            // Create the object stores for the map data.\n            database.createObjectStore('regions');\n            database.createObjectStore('objects');\n            database.createObjectStore('cursorTiles');\n\n            log.debug(`IndexedDB created with version ${this.getDBVersion()}.`);\n        });\n\n        // Successfully managed to open the database.\n        request.addEventListener('success', (event: Event) => {\n            this.mapData = (event.target as IDBOpenDBRequest).result;\n\n            log.debug(`Successfully opened IndexedDB with version ${this.getDBVersion()}.`);\n        });\n    }\n\n    /**\n     * Saves the data object in this class' instance\n     * to the local storage.\n     */\n\n    public save(): void {\n        try {\n            if (this.data) storage.setItem(name, JSON.stringify(this.data));\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    /**\n     * Clears the local storage and saves the empty\n     * default parameters.\n     */\n\n    public clear(): void {\n        storage.removeItem(name);\n\n        this.set(this.create());\n\n        this.save();\n    }\n\n    /**\n     * Deletes the IndexedDB database and recreates it.\n     */\n\n    private clearIndexedDB(): void {\n        this.mapData?.close();\n\n        window.indexedDB.deleteDatabase('mapCache');\n\n        this.loadIndexedDB();\n    }\n\n    /**\n     * Sets the data onto the local storage and saves it.\n     * @param data The StorageData object we are writing.\n     */\n\n    public set(data: StorageData): void {\n        this.data = data;\n        this.save();\n    }\n\n    /**\n     * Updates the error message in the storage.\n     * @param error The new error message in the storage.\n     */\n\n    public setError(error: string): boolean {\n        this.data.errorMessage = error;\n        this.save();\n\n        return true;\n    }\n\n    /**\n     * Updates the player data remember me value.\n     * @param rememberMe New value of the remember me toggle switch.\n     */\n\n    public setRemember(rememberMe: boolean): void {\n        this.data.player.rememberMe = rememberMe;\n        this.save();\n    }\n\n    /**\n     * Sets the username and password into the local storage and saves it.\n     * @param username The username string we are setting.\n     * @param password The password string we are updating.\n     */\n\n    public setCredentials(username = '', password = ''): void {\n        this.data.player.username = username;\n        this.data.player.password = password;\n\n        this.save();\n    }\n\n    /**\n     * Updates the music music and stores it into the local storage.\n     * @param volume The new music we are setting the music to.\n     */\n\n    public setMusicVolume(volume = 100): void {\n        this.data.settings.musicVolume = volume;\n\n        this.save();\n    }\n\n    /**\n     * Updates the Sound and stores it into the local storage.\n     * @param volume New music we are setting the Sound to.\n     */\n\n    public setSoundVolume(volume = 100): void {\n        this.data.settings.soundVolume = volume;\n\n        this.save();\n    }\n\n    /**\n     * Sets the brightness value in the storage.\n     * @param brightness New brightness or default to 100 if not specified.\n     */\n\n    public setBrightness(brightness = 100): void {\n        this.data.settings.brightness = brightness;\n\n        this.save();\n    }\n\n    /**\n     * Updates the local storage value for audioEnabled.\n     * @param enabled New value to update variable to.\n     */\n\n    public setAudioEnabled(enabled: boolean): void {\n        this.data.settings.audioEnabled = enabled;\n\n        this.save();\n    }\n\n    /**\n     * Sets the value of the low power mode in the local storage.\n     * @param lowPowerMode New value to update in the local storage.\n     */\n\n    public setLowPowerMode(lowPowerMode: boolean): void {\n        this.data.settings.lowPowerMode = lowPowerMode;\n\n        this.save();\n    }\n\n    /**\n     * Updates the debug value in the local storage.\n     * @param debug New value of the debug.\n     */\n\n    public setDebug(debug: boolean): void {\n        this.data.settings.debugMode = debug;\n\n        this.save();\n    }\n\n    /**\n     * Updates whether or not to show names in the local storage.\n     * @param showNames New value to write to the local storage.\n     */\n\n    public setShowNames(showNames: boolean): void {\n        this.data.settings.showNames = showNames;\n\n        this.save();\n    }\n\n    /**\n     * Updates whether or not to display levels.\n     * @param showLevels New value we are updating in the local storage.\n     */\n\n    public setShowLevels(showLevels: boolean): void {\n        this.data.settings.showLevels = showLevels;\n\n        this.save();\n    }\n\n    /**\n     * Disables or enables region caching. Primarily for debugging.\n     * @param disableCaching The value of the disable caching toggle switch.\n     */\n\n    public setDisableCaching(disableCaching: boolean): void {\n        this.data.settings.disableCaching = disableCaching;\n\n        this.save();\n    }\n\n    /**\n     * Checks if the local storage version of the client\n     * matches the window's config version.\n     * @returns True if client version is the same as config version.\n     */\n\n    private isNewVersion(): boolean {\n        return this.data.clientVersion !== window.config.version;\n    }\n\n    /**\n     * Updates the orientation in the local storage.\n     * @param orientation New orientation we are saving.\n     */\n\n    public setOrientation(orientation: number): void {\n        this.data.player.orientation = orientation;\n\n        this.save();\n    }\n\n    /**\n     * Updates the zoom factor in the local storage.\n     * @param zoom New zoom factor we are saving.\n     */\n\n    public setZoom(zoom: number): void {\n        this.data.player.zoom = zoom;\n\n        this.save();\n    }\n\n    /**\n     * Saves the objects and cursor tiles into the first index of their respective\n     * object store within the IndexedDB database.\n     * @param objects The object tileIds.\n     * @param cursorTiles The cursor tileIds.\n     */\n\n    public setMapData(objects: number[], cursorTiles: CursorTiles): void {\n        if (!this.mapData) return;\n\n        let transaction = this.mapData.transaction(['objects', 'cursorTiles'], 'readwrite'),\n            objectStore = transaction.objectStore('objects'),\n            cursorStore = transaction.objectStore('cursorTiles');\n\n        // Save them at index 0.\n        objectStore.put(objects, 0);\n        cursorStore.put(cursorTiles, 0);\n    }\n\n    /**\n     * Stores the region data at the specified region id as the key within\n     * the IndexedDB database. Each region is stored as an array of RegionTileData.\n     * @param data Contains an array of information about each tile in the region.\n     * @param region The region id we are saving.\n     */\n\n    public setRegionData(data: RegionTileData[], region: number): void {\n        if (!this.mapData) return;\n\n        let objectStore = this.mapData.transaction('regions', 'readwrite').objectStore('regions'),\n            request = objectStore.get(region);\n\n        request.addEventListener('success', () => {\n            if (request.result) return;\n\n            objectStore.put(data, region);\n        });\n    }\n\n    /**\n     * Grabs the error message from local storage\n     * and immediately clears it. Error messages only\n     * get displayed once if they're queued up.\n     * @returns The string of the error message.\n     */\n\n    public getError(): string {\n        let { errorMessage } = this.data;\n\n        this.data.errorMessage = '';\n        this.save();\n\n        return errorMessage;\n    }\n\n    /**\n     * @returns The username string stored in the local storage.\n     */\n\n    public getUsername(): string {\n        return this.data.player.username;\n    }\n\n    /**\n     * @returns The password string (raw text) in the local storage.\n     */\n\n    public getPassword(): string {\n        return this.data.player.password;\n    }\n\n    /**\n     * Converts the game version string into a number.\n     * @returns The current version to be used in the IndexedDB database.\n     */\n\n    public getDBVersion(): number {\n        return parseInt(this.data.clientVersion.replace(/\\D/g, '')) || 1;\n    }\n\n    /**\n     * Whether or not the remember me toggle is on.\n     * @returns Boolean value of the remember me toggle.\n     */\n\n    public hasRemember(): boolean {\n        return this.data.player.rememberMe;\n    }\n\n    /**\n     * @returns Whether or not the new variable is set to true in the storage.\n     */\n\n    public isNew(): boolean {\n        return this.data.new;\n    }\n\n    /**\n     * Grabs the local storage data of the map.\n     * @returns RegionMapData object containing all the data stored so far.\n     */\n\n    public getRegionData(callback: (data: RegionMapData) => void): void {\n        let info: RegionMapData = {\n            regionData: {},\n            objects: [],\n            cursorTiles: {}\n        };\n\n        if (!this.mapData) return callback(info);\n\n        // Create the transaction and begin grabbing data from each object store.\n        let transaction = this.mapData.transaction(\n                ['regions', 'objects', 'cursorTiles'],\n                'readonly'\n            ),\n            regionRequest = transaction.objectStore('regions').openCursor(), // Grab all the indexes and the keys.\n            objectRequest = transaction.objectStore('objects').get(0), // Only need the first index.\n            cursorRequest = transaction.objectStore('cursorTiles').get(0); // Only need the first index.\n\n        transaction.addEventListener('error', () => callback(info));\n\n        regionRequest.addEventListener('success', (event: Event) => {\n            let cursor = (event.target as IDBRequest<IDBCursorWithValue>).result;\n\n            // Cursor is the currently processed index and key.\n            if (cursor) {\n                info.regionData[cursor.primaryKey as number] = cursor.value;\n                cursor.continue();\n            }\n        });\n        objectRequest.addEventListener('success', () => (info.objects = objectRequest.result));\n        cursorRequest.addEventListener('success', () => (info.cursorTiles = cursorRequest.result));\n\n        transaction.addEventListener('complete', () => callback(info));\n    }\n\n    /**\n     * @returns The settings values stored.\n     */\n\n    public getSettings(): Settings {\n        return this.data.settings;\n    }\n\n    /**\n     * @returns The debug value stored in the local storage.\n     */\n\n    public getDebug(): boolean {\n        return this.data.settings.debugMode;\n    }\n}\n","interface Frame {\n    index: number;\n    x: number;\n    y: number;\n}\n\ntype BopCallback = (bopIndex: number) => void;\n\nexport default class Animation {\n    public frame: Frame = { index: 0, x: 0, y: 0 };\n    public count = 1;\n    public bopIndex = 0;\n    public bopCount = 4; // Used for items bopping up and down.\n    public decreaseBop = false;\n\n    private lastTime = Date.now();\n    private speed = 100;\n\n    private bopCallback?: BopCallback;\n    private endCallback?: () => void;\n\n    public constructor(\n        public name: string,\n        public length: number,\n        public row: number,\n        public width: number,\n        public height: number\n    ) {\n        this.reset();\n    }\n\n    /**\n     * Updates the animation frame.\n     * @param time The current game time.\n     */\n\n    public update(time: number): void {\n        if (!this.canAnimate()) return;\n\n        this.lastTime = time;\n\n        // Used for bopping up an item when it is spawned on the ground.\n        if (this.length === 1) {\n            // If we are decreasing the bop index, we are moving the item down.\n            if (this.decreaseBop) this.bopIndex--;\n            else this.bopIndex++;\n\n            // Toggle the bopping direction if we have reached the end of the animation.\n            if (this.bopIndex >= this.bopCount) this.decreaseBop = true;\n            else if (this.bopIndex <= 0) this.decreaseBop = false;\n\n            return this.bopCallback?.(this.bopIndex);\n        }\n\n        // When the animation reaches the end of the frames, we reset it.\n        if (this.frame.index >= this.length - 1) {\n            if (this.count > 0) this.count--;\n\n            // Invoke the callback if we have finished playing the animation.\n            if (this.count <= 0) this.endCallback?.();\n\n            return this.reset();\n        }\n\n        // Otherwise, we progress to the next frame.\n        this.frame.index++;\n\n        // Update the x and y coordinates of the frame.\n        this.frame.x = this.frame.index * this.width;\n        this.frame.y = this.row * this.height;\n    }\n\n    /**\n     * Updates the amount of times we play the animation and sets the\n     * callback handler if provided.\n     * @param count The amount of times we are playing the animation.\n     * @param onEnd The function to call once animation is completed.\n     */\n\n    public setCount(count: number, onEnd: () => void): void {\n        this.count = count;\n\n        this.endCallback = onEnd;\n    }\n\n    /**\n     * Updates the speed of the animation.\n     * @param speed The new speed of the animation.\n     */\n\n    public setSpeed(speed: number) {\n        this.speed = speed;\n    }\n\n    /**\n     * Updates the row of animations.\n     * @param row The new number of rows.\n     */\n\n    public setRow(row: number): void {\n        this.row = row;\n    }\n\n    /**\n     * If we should progress to the next animation frame.\n     * @returns Whether the last update time relative to now\n     * is greater than the animation speed.\n     */\n\n    private canAnimate(): boolean {\n        return Date.now() - this.lastTime > this.speed;\n    }\n\n    /**\n     * Resets the animation to the first frame.\n     */\n\n    public reset(): void {\n        this.lastTime = Date.now();\n\n        this.frame = {\n            index: 0,\n            x: 0,\n            y: this.row * this.height\n        };\n    }\n\n    /**\n     * Callback whenever the bopping index advances or decreases.\n     * @param callback Contains the current bop index.\n     */\n\n    public onBop(callback: BopCallback): void {\n        this.bopCallback = callback;\n    }\n}\n","import Animation from './animation';\n\nimport Utils from '../utils/util';\n\nexport interface AnimationData {\n    [name: string]: {\n        length: number;\n        row: number;\n    };\n}\nexport interface SpriteData {\n    id: string;\n    width?: number;\n    height?: number;\n    idleSpeed?: number;\n    animations?: AnimationData;\n    offsetX?: number;\n    offsetY?: number;\n}\nexport interface Animations {\n    [name: string]: Animation;\n}\n\nexport default class Sprite {\n    public key = '';\n\n    private path = '';\n\n    public width = Utils.tileSize;\n    public height = Utils.tileSize;\n\n    public offsetX = -Utils.tileSize;\n    public offsetY = -Utils.tileSize;\n\n    public idleSpeed = 450;\n\n    public loaded = false;\n    public loading = false;\n    public hasDeathAnimation = false;\n\n    public animations: Animations = {};\n\n    public image!: HTMLImageElement | HTMLCanvasElement;\n\n    public hurtSprite!: Sprite;\n    public silhouetteSprite!: Sprite;\n\n    private loadCallback?(): void;\n\n    public constructor(public data: SpriteData) {\n        this.key = this.data.id;\n\n        this.path = `/img/sprites/${this.key}.png`;\n\n        this.width = this.data.width || this.width;\n        this.height = this.data.height || this.height;\n\n        this.offsetX = this.data.offsetX ?? this.offsetX;\n        this.offsetY = this.data.offsetY ?? this.offsetY;\n\n        this.idleSpeed = this.data.idleSpeed || this.idleSpeed;\n\n        // Have the animations prepared for the sprite.\n        this.loadAnimations();\n    }\n\n    /**\n     * Loads the sprite image information for an entity. The `load` function\n     * is called on a demand basis, instead of initializing all sprites when\n     * we load the client, we initialize it as we find entities throughout the\n     * world. This may be changed in the future.\n     */\n\n    public load(): void {\n        if (this.loading || this.loaded) return;\n\n        this.loading = true;\n\n        this.image = new Image();\n\n        this.image.crossOrigin = 'Anonymous';\n        this.image.src = this.path;\n\n        // Callback for when the image successfully loads.\n        this.image.addEventListener('load', () => {\n            this.loaded = true;\n\n            /**\n             * We ignore small sprites and item sprites when drawing hurt sprites.\n             * The logic we're using is skipping keys that start with `items/*` and\n             * sprites whose width is less than 96 (assumed 4 animations and a small\n             * sprite of 24x24).\n             */\n\n            if (!this.key.startsWith('items/') && this.image.width > 96)\n                this.hurtSprite = Utils.getHurtSprite(this);\n\n            // Load the silhouette sprite for the entity.\n            this.silhouetteSprite = Utils.getSilhouetteSprite(this);\n\n            // Loading only done after the hurt sprite.\n            this.loading = false;\n\n            this.loadCallback?.();\n        });\n    }\n\n    /**\n     * Loads the animations for the said sprite. Parses through all of the animation\n     * objects and creates a new animation instance for each one. We also check if the\n     * sprite has a specific death animation, otherwise the generic one will be used.\n     */\n\n    private loadAnimations(): void {\n        if (!this.data.animations)\n            this.data.animations = Utils.getDefaultAnimations(this.key.startsWith('items/'));\n\n        for (let name in this.data.animations) {\n            let info = this.data.animations[name];\n\n            // Use a specified death animation if it exists, set the flag to true for later use.\n            if (name === 'death') this.hasDeathAnimation = true;\n\n            // Create an animation for the sprite.\n            this.animations[name] = new Animation(\n                name,\n                info.length,\n                info.row,\n                this.width,\n                this.height\n            );\n        }\n    }\n\n    /**\n     * Callback for when the sprite has successfully loaded. Used to load\n     * additional extra information afterwards.\n     */\n\n    public onLoad(callback: () => void): void {\n        this.loadCallback = callback;\n    }\n}\n","import { onSecondaryPress } from './press';\n\nimport Sprite from '../entity/sprite';\n\nimport { Modules, Opcodes } from '@kaetram/common/network';\n\nimport type { AnimationData } from '../entity/sprite';\nimport type { Bonuses, Stats } from '@kaetram/common/types/item';\n\nexport let isInt = (n: number): boolean => n % 1 === 0;\n\nexport default {\n    tileSize: -1,\n    sideLength: -1,\n    thirdTile: -1,\n    tileAndAQuarter: -1,\n\n    /**\n     * Creates a unique ID for a given time.\n     * @param time The time in milliseconds.\n     * @param x Optional parameter to concatenate to the ID.\n     * @param y Optional parameter to concatenate to the ID.\n     * @returns A concatenated string of the time and optional parameters.\n     */\n\n    createId(time: number, x = 0, y = 0): string {\n        return `${time}${x}${y}`;\n    },\n\n    /**\n     * Generates a random integer number using Math library.\n     * @param min Minimum value (inclusive)\n     * @param max Maximum value (inclusive)\n     * @returns Random integer between min and max.\n     */\n\n    randomInt(min: number, max: number): number {\n        return min + Math.floor(Math.random() * (max - min + 1));\n    },\n\n    /**\n     * Creates a new slot element based using the bank-slot class. This creates\n     * an empty skeleton that we can then place items in. A callback event listener\n     * is also created alongside the slot. Whenever a slot is pressed, its type\n     * and index are parameters that are passed to the callback.\n     * @param type The type of slot we are creating (used for callback as well).\n     * @param index Index of the slot we are creating (for identification).\n     * @param primaryCallback The callback function for the primary pressed.\n     * @param secondaryCallback The callback function for the secondary pressed.\n     */\n\n    createSlot(\n        type: Modules.ContainerType,\n        index: number,\n        primaryCallback?: (type: Modules.ContainerType, index: number) => void,\n        secondaryCallback?: (type: Modules.ContainerType, index: number) => void\n    ): HTMLLIElement {\n        let listElement = document.createElement('li'),\n            slot = document.createElement('div'),\n            image = document.createElement('div'),\n            count = document.createElement('div');\n\n        slot.dataset.type = `${type}`;\n        slot.dataset.index = `${index}`;\n\n        // Sets the class of the bank slot.\n        slot.classList.add('item-slot');\n\n        // Sets the class of the image.\n        image.classList.add('item-image');\n\n        // Sets the class of the count.\n        count.classList.add('item-count');\n\n        // Bank item counts are a different colour.\n        if (type === Modules.ContainerType.Bank) count.classList.add('bank-item-count');\n\n        // Appends image and count onto the bank slot.\n        slot.append(image);\n        slot.append(count);\n\n        if (primaryCallback) slot.addEventListener('click', () => primaryCallback(type, index));\n        if (secondaryCallback) onSecondaryPress(slot, () => secondaryCallback(type, index));\n\n        // Appends the bank slot onto the list element.\n        listElement.append(slot);\n\n        return listElement;\n    },\n\n    /**\n     * Converts an item's key into an image URL for the client.\n     * @param key The item's key, defaults to empty string.\n     * @returns The CSS image URL format for the item's key.\n     */\n\n    getImageURL(key = ''): string {\n        if (key === '') return '';\n\n        return `url(\"/img/sprites/items/${key}.png\")`;\n    },\n\n    /**\n     * Takes any name (or string as a matter of fact) and capitalizes\n     * every first letter after a space.\n     * Example: 'tHiS Is a usErName' -> 'This Is A Username'\n     * @param name The raw username string defaulting to '' if not specified.\n     * @param trim The amount of characters to trim the name to.\n     * @returns The formatted name string.\n     */\n\n    formatName(name = '', trim = 0): string {\n        name = name.replace(\n            /\\w\\S*/g,\n            (string) => string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n        );\n\n        // Trim the name if specified.\n        if (trim > 1 && name.length > trim) name = `${name.slice(0, Math.max(0, trim))}...`;\n\n        return name;\n    },\n\n    /**\n     * Converts an integer value into a compact string used\n     * when wanting to display large numbers of stackable items.\n     * For example, 15000 coins get displayed as 15K and\n     * 1200400 coins displayed as 1.2M\n     */\n\n    getCount(count: number): string {\n        // Convert count to string.\n        let string = count.toString();\n\n        // Converts numbers 1 million and above to short-hand format (e.g. 25M)\n        if (count > 999_999) return `${Math.floor(count / 1_000_000)}M`;\n\n        // Convert numbers above 10,000 into kilo format (e.g. 25K)\n        if (count > 9999) return `${Math.floor(count / 1000)}K`;\n\n        // Any number above 1 is displayed as a string.\n        if (count > 1) return string;\n\n        // Do not display counts of 1.\n        return '';\n    },\n\n    /**\n     * Converts a menu action into a container opcode action.\n     * @param menuAction Menu action that we are converting.\n     */\n\n    getContainerAction(menuAction: Modules.MenuActions): Opcodes.Container | undefined {\n        switch (menuAction) {\n            case Modules.MenuActions.Wield:\n            case Modules.MenuActions.Equip:\n            case Modules.MenuActions.Eat:\n            case Modules.MenuActions.Eat2: {\n                return Opcodes.Container.Select;\n            }\n\n            case Modules.MenuActions.DropOne: {\n                return Opcodes.Container.Remove;\n            }\n\n            case Modules.MenuActions.Move: {\n                return Opcodes.Container.Swap;\n            }\n        }\n    },\n\n    /**\n     * Checks the email string against regular expression.\n     * @param email Email string to verify.\n     * @returns Whether or not the email string follows the proper Regex pattern.\n     */\n\n    isEmail(email: string): boolean {\n        return /^(([^\\s\"(),.:;<>@[\\\\\\]]+(\\.[^\\s\"(),.:;<>@[\\\\\\]]+)*)|(\".+\"))@((\\[(?:\\d{1,3}\\.){3}\\d{1,3}])|(([\\dA-Za-z-]+\\.)+[A-Za-z]{2,}))$/.test(\n            email\n        );\n    },\n\n    /**\n     * Calculates the region based on provided coordinates.\n     * @param x The x grid coordinate.\n     * @param y The y grid coordinate.\n     * @returns The region number.\n     */\n\n    getRegion(x: number, y: number): number {\n        let regX = Math.floor(x / Modules.Constants.MAP_DIVISION_SIZE),\n            regY = Math.floor(y / Modules.Constants.MAP_DIVISION_SIZE);\n\n        return regX + regY * this.sideLength;\n    },\n\n    /**\n     * For the purpose of not repeatedly writing the same stats.\n     * @returns Empty stats values.\n     */\n\n    getEmptyStats(): Stats {\n        return {\n            crush: 0,\n            slash: 0,\n            stab: 0,\n            archery: 0,\n            magic: 0\n        };\n    },\n\n    /**\n     * Creates an empty bonuses object.\n     * @returns Empty bonuses object with default values.\n     */\n\n    getEmptyBonuses(): Bonuses {\n        return {\n            accuracy: 0,\n            strength: 0,\n            archery: 0,\n            magic: 0\n        };\n    },\n\n    /**\n     * Given the input of a sprite, we generate a hurt sprite. A hurt sprite\n     * is one that has all non-empty pixels turned a shade of red. We assume that\n     * the sprite is loaded upon calling this function. The hurt sprite is\n     * identical and can be a clone of the original sprite.\n     * @param sprite The sprite that we want to generate a hurt sprite for.\n     */\n\n    getHurtSprite(sprite: Sprite): Sprite {\n        let canvas = document.createElement('canvas'),\n            context = canvas.getContext('2d')!,\n            hurtSprite = new Sprite(sprite.data); // Create a clone to avoid issues.\n\n        canvas.width = sprite.image.width;\n        canvas.height = sprite.image.height;\n\n        // Draw an image of the sprite onto the canvas.\n        context.drawImage(sprite.image, 0, 0, sprite.image.width, sprite.image.height);\n\n        let spriteData = context.getImageData(0, 0, sprite.image.width, sprite.image.height);\n\n        /**\n         * This function iterates through the pixel data. The context data stores pixel information\n         * in a 1D array. Each value represents a colour channel (red, green, blue, alpha). At each\n         * 4 indices, information about a single pixel is stored. For example, the first 4 indices\n         * represent the red, green, blue and alpha values of the first pixel. The next 4 indices\n         * represent the red, green, blue and alpha values of the second pixel and so on.\n         */\n\n        for (let i = 0; i < spriteData.data.length; i += 4) {\n            // Skip transparent pixels.\n            if (spriteData.data[i + 4] === 0) continue;\n\n            // 0 - red, 1 - green, 2 - blue, 3 - alpha\n            spriteData.data[i] = 255;\n            spriteData.data[i + 1] = spriteData.data[i + 2] = 75;\n        }\n\n        // Apply the new image data onto the context\n        context.putImageData(spriteData, 0, 0);\n\n        // Update the image of the hurt sprite.\n        hurtSprite.image = canvas;\n\n        // Toggle as loaded for use\n        hurtSprite.loaded = true;\n\n        return hurtSprite;\n    },\n\n    /**\n     * A silhouette is a yellow hue that is drawn around the sprite. It is used for\n     * highlighting a sprite when hovering over it.\n     */\n\n    getSilhouetteSprite(sprite: Sprite): Sprite {\n        let canvas = document.createElement('canvas'),\n            context = canvas.getContext('2d')!,\n            silhouetteSprite = new Sprite(sprite.data); // Create a clone to avoid issues.\n\n        canvas.width = sprite.image.width;\n        canvas.height = sprite.image.height;\n\n        // Draw an image of the sprite onto the canvas.\n        context.drawImage(sprite.image, 0, 0, sprite.image.width, sprite.image.height);\n\n        let spriteData = context.getImageData(0, 0, sprite.image.width, sprite.image.height),\n            cloneData = context.getImageData(0, 0, sprite.image.width, sprite.image.height);\n\n        /**\n         * We iterate each pixel (4 indices) and look for a pixel that has a zero alpha value\n         * but also has an adjacent pixel that has a non-zero alpha value. If this is the case,\n         * we set the pixel colour to (255, 255, 150) and alpha to 150.\n         */\n\n        for (let i = 0; i < cloneData.data.length; i += 4) {\n            // Non-empty pixels are skipped.\n            if (cloneData.data[i + 3] !== 0) continue;\n\n            // Extract the x and y coordinates of the pixel.\n            let x = (i / 4) % sprite.image.width,\n                y = Math.floor(i / 4 / sprite.image.width);\n\n            // Test edge cases, we don't want to draw a silhouette on the edge of the sprite.\n            if (x === 0 || x === sprite.image.width - 1 || y === 0 || y === sprite.image.height - 1)\n                continue;\n\n            // Verify the up, down, left and right pixels.\n            let adjacentPixels = [\n                cloneData.data[i - 1], // Left\n                cloneData.data[i + 7], // Right\n                cloneData.data[i - cloneData.width * 4 + 3], // Up\n                cloneData.data[i + cloneData.width * 4 + 3] // Down\n            ];\n\n            // If any of the adjacent pixels are non-empty, we set the current pixel to yellow.\n            if (adjacentPixels.some((pixel) => pixel !== 0)) {\n                spriteData.data[i] = spriteData.data[i + 1] = 255;\n                spriteData.data[i + 2] = spriteData.data[i + 3] = 150;\n            }\n        }\n\n        // Apply the new image data onto the context\n        context.putImageData(spriteData, 0, 0);\n\n        // Update the image of the silhouette sprite.\n        silhouetteSprite.image = canvas;\n\n        // Toggle as loaded for use\n        silhouetteSprite.loaded = true;\n\n        return silhouetteSprite;\n    },\n\n    /**\n     * Grabs the default animations for a sprite. We do this to alleviate\n     * the amount of information in the sprites.json file. We account for\n     * two types of sprites: items and characters.\n     * @param item Whether or not we are grabbing the default animations for an item.\n     * @returns The animation data for the sprite.\n     */\n\n    getDefaultAnimations(item = false): AnimationData {\n        // Default animations for an item.\n        if (item)\n            return {\n                idle: {\n                    length: 1,\n                    row: 0\n                }\n            };\n\n        // Default animations for a player/mob character.\n        return {\n            atk_right: {\n                length: 5,\n                row: 0\n            },\n            walk_right: {\n                length: 4,\n                row: 1\n            },\n            idle_right: {\n                length: 2,\n                row: 2\n            },\n            atk_up: {\n                length: 5,\n                row: 3\n            },\n            walk_up: {\n                length: 4,\n                row: 4\n            },\n            idle_up: {\n                length: 2,\n                row: 5\n            },\n            atk_down: {\n                length: 5,\n                row: 6\n            },\n            walk_down: {\n                length: 4,\n                row: 7\n            },\n            idle_down: {\n                length: 2,\n                row: 8\n            }\n        };\n    },\n\n    /**\n     * Fades in an element.\n     * @param element The element to fade in.\n     * @param speed (Optional) The speed at which to fade in.\n     */\n\n    fadeIn(element: HTMLElement, speed = 0.1): void {\n        element.style.opacity ||= '0';\n        element.style.display = 'block';\n\n        let fade = () => {\n            let opacity = parseFloat(element.style.opacity) + speed;\n            element.style.display = 'block';\n\n            if (opacity <= 1) {\n                element.style.opacity = opacity.toString();\n                requestAnimationFrame(fade);\n            }\n        };\n\n        requestAnimationFrame(fade);\n    },\n\n    /**\n     * Fades out an element.\n     * @param element The element to fade out.\n     * @param speed (Optional) The speed at which to fade out.\n     */\n\n    fadeOut(element: HTMLElement, speed = 0.2): void {\n        element.style.opacity ||= '1';\n\n        let fade = () => {\n            let opacity = parseFloat(element.style.opacity) - speed;\n\n            if (opacity >= 0) {\n                element.style.opacity = opacity.toString();\n                requestAnimationFrame(fade);\n            } else element.style.display = 'none';\n        };\n\n        requestAnimationFrame(fade);\n    }\n};\n","import install from './lib/pwa';\nimport { isMobile } from './utils/detect';\nimport Storage from './utils/storage';\nimport Util from './utils/util';\nimport { onSecondaryPress } from './utils/press';\n\nimport Updates from '@kaetram/common/text/en/updates.json';\n\nimport type { SerializedServer } from '@kaetram/common/types/api';\n\ntype EmptyCallback = () => void;\ntype KeyDownCallback = (e: KeyboardEvent) => void;\ntype KeyUpCallback = (e: KeyboardEvent) => void;\ntype LoginCallback = (server?: SerializedServer) => void;\ntype LeftClickCallback = (e: MouseEvent) => void;\ntype RightClickCallback = (position: { x: number; y: number }) => void;\ntype MouseMoveCallback = (e: MouseEvent) => void;\n\ntype ValidationType = 'status' | 'validation-error' | 'validation-warning';\n\nexport default class App {\n    public config = window.config;\n\n    public storage: Storage = new Storage();\n\n    public body: HTMLElement = document.querySelector('body')!;\n\n    private parchment: HTMLElement = document.querySelector('#parchment')!;\n\n    public canvas: HTMLElement = document.querySelector('#canvas')!;\n\n    private loginForm: HTMLElement = document.querySelector('#load-character form')!;\n    private registerForm: HTMLElement = document.querySelector('#create-character form')!;\n\n    private worldsList: HTMLOListElement = document.querySelector('#worlds')!;\n\n    private passwordConfirmation: HTMLInputElement = document.querySelector(\n        '#register-password-confirmation-input'\n    )!;\n    private emailField: HTMLInputElement = document.querySelector('#register-email-input')!;\n\n    private loginButton: HTMLButtonElement = document.querySelector('#login')!;\n    private registerButton: HTMLButtonElement = document.querySelector('#new-account')!;\n    private cancelRegister: HTMLButtonElement = document.querySelector('#cancel-register')!;\n    private cancelWorlds: HTMLButtonElement = document.querySelector('#cancel-worlds')!;\n    private continueWorlds: HTMLButtonElement = document.querySelector('#continue-worlds')!;\n\n    private respawn: HTMLButtonElement = document.querySelector('#respawn')!;\n\n    private rememberMe: HTMLInputElement = document.querySelector('#remember-me input')!;\n    private guest: HTMLInputElement = document.querySelector('#guest input')!;\n\n    private about: HTMLElement = document.querySelector('#toggle-about')!;\n\n    private validation: NodeListOf<HTMLElement> = document.querySelectorAll('.validation-summary')!;\n    private loading: HTMLElement = document.querySelector('.loader')!;\n    private worldSelectButton: HTMLElement = document.querySelector('#world-select-button')!;\n    private gameVersion: HTMLElement = document.querySelector('#game-version')!;\n\n    private currentScroll = 'load-character';\n    private parchmentAnimating = false;\n    private loggingIn = false; // Used to prevent interactions when trying to log in.\n    private menuHidden = false; // Used to reroute key input to the callback.\n\n    public statusMessage = '';\n\n    private selectedServer?: SerializedServer;\n\n    public keyDownCallback?: KeyDownCallback;\n    public keyUpCallback?: KeyUpCallback;\n    public loginCallback?: LoginCallback;\n    public leftClickCallback?: LeftClickCallback;\n    public rightClickCallback?: RightClickCallback;\n    public mouseMoveCallback?: MouseMoveCallback;\n    public resizeCallback?: EmptyCallback;\n    public respawnCallback?: EmptyCallback;\n    public focusCallback?: EmptyCallback;\n\n    public constructor() {\n        this.sendStatus('Initializing the game client');\n\n        this.load();\n    }\n\n    /**\n     * Loads all the callbacks responsible\n     * for interactions. Things such as mouse clicks,\n     * keyboard presses, interaction with main menu\n     * elements, etc.\n     */\n\n    private load(): void {\n        this.loginForm.addEventListener('submit', this.login.bind(this));\n        this.registerForm.addEventListener('submit', this.login.bind(this));\n\n        this.registerButton.addEventListener('click', () => this.openScroll('create-character'));\n        this.cancelRegister.addEventListener('click', () => this.openScroll('load-character'));\n\n        this.cancelWorlds.addEventListener('click', () => this.openScroll('load-character'));\n        this.continueWorlds.addEventListener('click', () => this.openScroll('load-character'));\n\n        this.about.addEventListener('click', () => this.openScroll('about'));\n\n        this.respawn.addEventListener('click', () => this.respawnCallback?.());\n\n        this.parchment.addEventListener('click', () => {\n            if (this.hasFooterOpen()) this.openScroll('load-character');\n            if (this.body.classList.contains('news')) this.body.classList.remove('news');\n        });\n\n        this.worldSelectButton.addEventListener('click', () => this.openScroll('world-select'));\n\n        this.gameVersion.textContent = `${this.config.version}${this.config.minor}`;\n\n        // Document callbacks such as clicks and keystrokes.\n        document.addEventListener('keydown', (e: KeyboardEvent) => e.key !== 'Enter');\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\n        document.addEventListener('keyup', (e: KeyboardEvent) => this.keyUpCallback?.(e));\n        document.addEventListener('mousemove', (e: MouseEvent) => this.mouseMoveCallback?.(e));\n\n        // Canvas callbacks\n        this.canvas.addEventListener('click', (e: MouseEvent) => this.leftClickCallback?.(e));\n\n        // Window callbacks\n        window.addEventListener('resize', () => this.resizeCallback?.());\n\n        window.addEventListener('focus', () => this.focusCallback?.());\n\n        // Body callbacks\n        onSecondaryPress(document.querySelector('#canvas')!, (position) =>\n            this.rightClickCallback?.(position)\n        );\n    }\n\n    /**\n     * Loads the local storage values for the username,\n     * password, and remember me checkmark. If there is an\n     * error in the storage, it will be displayed and immediately\n     * removed when the function to get is is called.\n     */\n\n    private loadLogin(): void {\n        // Grab and erase the error message.\n        let errorMessage = this.storage.getError();\n\n        // Display the error message if present.\n        if (errorMessage) this.sendError(errorMessage);\n\n        // No need to load anything if the remember me isn't toggled.\n        if (!this.storage.hasRemember()) return;\n\n        // Update the input fields with the stored values.\n        this.getUsernameField().value = this.storage.getUsername();\n        this.getPasswordField().value = this.storage.getPassword();\n\n        // Set the checkmark for remember me to true.\n        this.rememberMe.checked = true;\n    }\n\n    /**\n     * Handler for key down input event. When the menu is hidden,\n     * that is, the game has started, we redirect all input to the\n     * callback function.\n     * @param e Event containing key data.\n     */\n\n    public handleKeyDown(e: KeyboardEvent): void {\n        if (this.isMenuHidden()) return this.keyDownCallback?.(e);\n\n        if (e.key === 'Enter') this.login();\n    }\n\n    /**\n     * Clears all the status messages and allows the\n     * login button to be pressed. This function generally\n     * gets called once the map has finished loading.\n     */\n\n    public ready(): void {\n        this.sendStatus();\n\n        this.loginButton.disabled = false;\n\n        this.loadLogin();\n        this.loadWorlds();\n\n        if (!('indexedDB' in window))\n            this.setValidation(\n                'validation-warning',\n                'Your browser does not support IndexedDB. Regions will not be cached.'\n            );\n    }\n\n    /**\n     * Attempts to log in by checking all the necessary fields and creating\n     * a callback should all checks pass.\n     */\n\n    private login(): void {\n        if (this.loggingIn || this.statusMessage || !this.verifyForm()) return;\n\n        this.clearErrors();\n        this.toggleLogin(true);\n\n        // Creates a callback with all the fields.\n        this.loginCallback?.(this.selectedServer);\n\n        // Installs the PWA.\n        install();\n    }\n\n    /**\n     * Checks if the remember me checkbox is toggled and\n     * saves the username and password to local storage.\n     */\n\n    private saveLogin(): void {\n        // Always save the state of the remember me button.\n        this.storage.setRemember(this.isRememberMe());\n\n        // Reset the credentials each successful login.\n        this.storage.setCredentials();\n\n        // Stop here if the checkmark isn't toggled.\n        if (!this.isRememberMe()) return;\n\n        // Save the username and password.\n        this.storage.setCredentials(this.getUsername(), this.getPassword());\n    }\n\n    /**\n     * Shows all the elements regarding the main\n     * menu and hides the game element.\n     */\n\n    public showMenu(): void {\n        this.body.className = 'intro';\n\n        this.menuHidden = false;\n        this.worldSelectButton.hidden = false;\n        this.gameVersion.hidden = false;\n    }\n\n    /**\n     * Clears the loader and begins showing\n     * the game after a 500 millisecond timeout.\n     */\n\n    public fadeMenu(): void {\n        if (this.menuHidden) return;\n\n        this.body.className = 'game';\n\n        this.menuHidden = true;\n        this.worldSelectButton.hidden = true;\n        this.gameVersion.hidden = true;\n\n        this.updateLoader();\n        this.saveLogin();\n\n        setTimeout(() => this.displayNews(), 1000);\n    }\n\n    /**\n     * Opens a scroll by changing to the destination. Clears\n     * errors from the current scroll, and checks if to animate\n     * or not depending on if the dimensions match that of a mobile.\n     * @param destination The new scroll we are setting to.\n     */\n\n    public openScroll(destination: string): void {\n        if (this.loggingIn || this.parchmentAnimating) return;\n\n        // Clears all errors that may have been displayed.\n        this.clearErrors();\n\n        this.changeScroll(destination, !isMobile());\n    }\n\n    /**\n     * Changes a scroll with or without an animation. It updates the current scroll\n     * variable in the class as well.\n     * @param destination The destination of the scroll we're changing to.\n     * @param withAnimation Whether or not to use animation when changing scrolls.\n     */\n\n    public changeScroll(destination: string, withAnimation = false): void {\n        if (withAnimation) {\n            this.parchmentAnimating = true;\n\n            // Toggle animation and remove the current scroll class from parchment.\n            this.parchment.classList.toggle('animate');\n            this.parchment.classList.remove(this.currentScroll);\n\n            // Set a timeout for the animation before displaying data.\n            window.setTimeout(() => {\n                // Toggle so that we can allow changing scrolls again.\n                this.parchmentAnimating = false;\n\n                // Animate again and add the new destination scroll.\n                this.parchment.classList.toggle('animate');\n                this.parchment.classList.add(destination);\n\n                // Focus on the first text field in the new scroll.\n                document.querySelector<HTMLInputElement>(`#${destination} input`)?.focus();\n            }, 1000);\n        } else {\n            this.parchment.classList.remove(this.currentScroll);\n            this.parchment.classList.add(destination);\n        }\n\n        // Update the current scroll we're on to the destination.\n        this.currentScroll = destination;\n    }\n\n    /**\n     * Verifies the form inputs. Checks that the username, password,\n     * and email (if registering) are valid. It also checks against\n     * whether the password confirmation matches the password inputted.\n     * @returns True if all the checks pass, false otherwise.\n     */\n\n    private verifyForm(): boolean {\n        // Guest users don't need to input anything.\n        if (this.isGuest()) return true;\n\n        // Check the username is not empty.\n        if (!this.getUsername())\n            return this.sendError('Please enter a username.', this.getUsernameField());\n\n        // Check if the password is not empty.\n        if (!this.getPassword())\n            return this.sendError('Please enter a password.', this.getPasswordField());\n\n        // Handle registration page.\n        if (this.isRegistering()) {\n            // Password must be at least 3 characters long.\n            if (this.getPassword().length < 3)\n                return this.sendError(\n                    'Password must be at least 3 characters long.',\n                    this.getPasswordField()\n                );\n\n            // Check that the password matches the password confirmation.\n            if (this.getPassword() !== this.getPasswordConfirmation())\n                return this.sendError('Passwords do not match.', this.passwordConfirmation);\n\n            // Verify email against regex.\n            if (this.getEmail() !== '' && !Util.isEmail(this.getEmail()))\n                return this.sendError(`The email you've entered is not valid.`, this.emailField);\n        }\n\n        return true;\n    }\n\n    /**\n     * A status is a form of message used during the loading\n     * of the client. It is the blue text shown when we are\n     * initializing the map, renderer, etc.\n     * @param message Status string message to display.\n     */\n\n    public sendStatus(message = ''): void {\n        this.clearErrors();\n\n        this.statusMessage = message;\n\n        if (!message) return;\n\n        this.setValidation('status', message);\n\n        let status = document.querySelector('.status')!;\n\n        if (status) status.innerHTML = message + this.getLoaderDots();\n    }\n\n    /**\n     * A loader functions as a status update which is displayed\n     * during the connection process. It shows black letters followed\n     * by the loader dots.\n     * @param message The message to display.\n     */\n\n    public updateLoader(message = ''): void {\n        this.loading.innerHTML = message ? message + this.getLoaderDots() : '';\n    }\n\n    /**\n     * When a new player or an update to the game has occurred we send a scroll\n     * notification. In the case of a new player we welcome them to the game,\n     * in the case of an update, we show the update changelog using the JSON in `common`.\n     */\n\n    public displayNews(): void {\n        let title = document.querySelector('#news-title')!,\n            content = document.querySelector('#news-content')!;\n\n        if (!title || !content) return;\n\n        // Show the default welcome screen when there is a new player.\n        if (this.storage.isNew()) return this.body.classList.add('news');\n\n        // Display new version changelogs.\n        if (this.storage.newVersion) {\n            title.textContent = `Kaetram ${this.config.version} Changelog`;\n\n            let changes = Updates[this.config.version as keyof typeof Updates];\n\n            if (!changes) return;\n\n            content.textContent = '';\n\n            for (let cc of changes.content) content.innerHTML += `${cc}<br>`;\n\n            this.body.classList.add('news');\n        }\n    }\n\n    /**\n     * An error is a red message displayed on the login\n     * or registration page. This is generally when something\n     * goes wrong, like an invalid input, server responding\n     * with an error, or a malfunction in the client.\n     * @param field A field can be specified to point out an error.\n     * @param error An error message is specified to be displayed.\n     * @returns Defaults to returning false so that it can be used\n     * during the form validation as a return statement for cleanliness.\n     */\n\n    public sendError(error: string, field?: HTMLElement): boolean {\n        if (this.isMenuHidden()) return this.storage.setError(error);\n\n        // Clear existing errors.\n        this.clearErrors();\n\n        // Appends an error component to the validation summary.\n        this.setValidation('validation-error', error);\n\n        // Stop here if no field is specified.\n        if (!field) return false;\n\n        // Circles a field with a red border.\n        field.classList.add('field-error');\n        field.focus();\n\n        let keyEvent = () => {\n            // Clear the event listener.\n            field.removeEventListener('keypress', keyEvent, false);\n\n            field.classList.remove('field-error');\n            document.querySelector('.validation-error')?.remove();\n        };\n\n        field.addEventListener('keypress', keyEvent);\n\n        return false;\n    }\n\n    /**\n     * Clears all the errors that may have been displayed.\n     * This goes through all the fields as well as erasing\n     * the messages displayed.\n     */\n\n    public clearErrors(): void {\n        document.querySelector('.status')?.remove();\n\n        this.clearValidation();\n\n        this.getUsernameField().classList.remove('field-error');\n        this.getPasswordField().classList.remove('field-error');\n\n        this.passwordConfirmation.classList.remove('field-error');\n        this.emailField.classList.remove('field-error');\n    }\n\n    /**\n     * Prepares the main menu for the login status. We disable\n     * ability to change between scrolls, the login/register\n     * buttons, as well as hide certain elements.\n     */\n\n    public toggleLogin(toggle: boolean): void {\n        this.updateLoader('Connecting');\n\n        this.toggleTyping(toggle);\n\n        this.loggingIn = toggle;\n\n        this.loading.hidden = !toggle;\n\n        this.loginButton.disabled = toggle;\n        this.registerButton.disabled = toggle;\n        const logo = document.getElementById('logo');\n        if (logo) {\n            logo.style.display = 'none'\n        }\n    }\n\n    /**\n     * Toggles the readonly state of the input fields.\n     * @param state Boolean value to set the readonly state to.\n     */\n\n    private toggleTyping(state: boolean): void {\n        this.getUsernameField().readOnly = state;\n        this.getPasswordField().readOnly = state;\n\n        this.passwordConfirmation.readOnly = state;\n        this.emailField.readOnly = state;\n    }\n\n    private hasFooterOpen(): boolean {\n        return this.parchment.classList.contains('about');\n    }\n\n    /**\n     * @returns Whether or not the guest toggle is checked.\n     */\n\n    public isGuest(): boolean {\n        return this.guest.checked;\n    }\n\n    /**\n     * Checks if the remember me checkbox is checked.\n     * @returns Whether the remember me has the checked attribute.\n     */\n\n    public isRememberMe(): boolean {\n        return this.rememberMe.checked;\n    }\n\n    /**\n     * Checks whether or not the current activity in the main\n     * menu is the register screen.\n     * @returns Whether or not the current scroll is the `create-character` scroll.\n     */\n\n    public isRegistering(): boolean {\n        return this.currentScroll === 'create-character';\n    }\n\n    /**\n     * Checks if the main menu is currently hidden (game has started).\n     * @returns Whether the menuHidden attribute is set to true.\n     */\n\n    public isMenuHidden(): boolean {\n        return this.menuHidden;\n    }\n\n    /**\n     * @returns The jQuery HTML element of the username field\n     * depending on the currently open scroll.\n     */\n\n    private getUsernameField(): HTMLInputElement {\n        return document.querySelector(\n            this.isRegistering() ? '#register-name-input' : '#login-name-input'\n        )!;\n    }\n\n    /**\n     * Grabs the username field value from either the login screen or the register\n     * screen depending on the status of the current scroll open.\n     * @returns String value of the input field.\n     */\n\n    public getUsername(): string {\n        return this.getUsernameField().value;\n    }\n\n    /**\n     * @returns The JQuery HTML element of the password field\n     * depending on the currently open scroll.\n     */\n\n    private getPasswordField(): HTMLInputElement {\n        return document.querySelector(\n            this.isRegistering() ? '#register-password-input' : '#login-password-input'\n        )!;\n    }\n\n    /**\n     * Grabs the password value from the field. Acts the same as `getUsername` in that\n     * it selects the adequate field depending on the currently open scroll.\n     * @returns Raw string value of the password field.\n     */\n\n    public getPassword(): string {\n        return this.getPasswordField().value;\n    }\n\n    /**\n     * @returns The password confirmation field input string.\n     */\n\n    private getPasswordConfirmation(): string {\n        return this.passwordConfirmation.value;\n    }\n\n    /**\n     * Grabs the email field input from the register screen. If we are\n     * not on the registering screen, we return an empty string.\n     * @returns String value of the email field or an empty string if\n     * we are not on the register screen.\n     */\n\n    public getEmail(): string {\n        if (!this.isRegistering()) return '';\n\n        return this.emailField.value;\n    }\n\n    /**\n     * Returns a static string for the loader dots. We're\n     * essentially creating a `span` HTML element that\n     * we can just pull when needed.\n     * @returns A string containing the loader dots HTML.\n     */\n\n    public getLoaderDots(): string {\n        return '<span class=\"loader-dot\">.</span><span class=\"loader-dot\">.</span><span class=\"loader-dot\">.</span>';\n    }\n\n    /**\n     * Iterates through all the validations and clears them.\n     */\n\n    private clearValidation(): void {\n        for (let validation of this.validation) validation.innerHTML = '';\n    }\n\n    /**\n     * Iterates through the validation summaries (on the login and register)\n     * page and sets their status messages to the provided parameters.\n     * @param type What type of validation we're setting the message for.\n     * @param message The message we are setting for the validation.\n     */\n\n    private setValidation(type: ValidationType, message = ''): void {\n        this.clearValidation();\n\n        // Create a validation message based on type and string message.\n        for (let validation of this.validation)\n            validation.append(this.createValidation(type, message));\n    }\n\n    /**\n     * Creates a new <span></span> DOM element with the provided type\n     * and message contents.\n     * @param type Validation type, status is blue, error is red.\n     * @param message What to display in the message.\n     */\n\n    private createValidation(type: ValidationType, message = ''): HTMLSpanElement {\n        let spanElement = document.createElement('span');\n\n        // Type of element we are creating (status is blue, error is red).\n        spanElement.classList.add(type);\n        spanElement.classList.add('blink');\n\n        // Add the message onto the span element.\n        spanElement.textContent = message;\n\n        return spanElement;\n    }\n\n    /**\n     * Selects the server to connect to and displays its player count on the button.\n     *\n     * @param server The server to connect to.\n     */\n\n    private selectServer(server: SerializedServer): void {\n        this.selectedServer = server;\n\n        let name = this.worldSelectButton.querySelector('strong')!;\n        name.textContent = `${server.name} ${server.id}`;\n\n        let players = this.worldSelectButton.querySelector('span')!;\n        players.textContent = `(${server.players}/${server.maxPlayers} players)`;\n    }\n\n    /**\n     * Loads the list of worlds from the hub and adds them to the world select.\n     * The first world in the list is automatically selected.\n     */\n\n    private async loadWorlds(): Promise<void> {\n        if (!this.config.hub) return;\n\n        // Fetch a list of servers from the hub\n        let res = await fetch(`${this.config.hub}/all`).catch(() => null);\n\n        if (!res) return this.setValidation('validation-error', 'Unable to load world list.');\n\n        let servers: SerializedServer[] = await res.json(),\n            [firstServer] = servers;\n\n        // Check if there are no servers\n        if (!firstServer)\n            // Display an error message.\n            return this.setValidation('validation-error', 'No servers are currently available.');\n\n        // Select the first server\n        this.selectServer(firstServer);\n\n        // If there is only one server, then hide the world select button\n        if (servers.length < 2) return;\n\n        this.worldSelectButton.hidden = false;\n\n        for (let i in servers) {\n            let server = servers[i],\n                // Create a new <li> element for each server\n                li = document.createElement('li'),\n                name = document.createElement('strong'),\n                players = document.createElement('span');\n\n            // If this is the first server in the list, select it and mark it as active\n            if (parseInt(i) === 0) li.classList.add('active');\n\n            name.textContent = `${server.name} ${server.id}`;\n\n            players.textContent = `${server.players}/${server.maxPlayers} players`;\n\n            li.append(name);\n            li.append(players);\n\n            // When the <li> element is clicked, select the server and update the active class\n            li.addEventListener('click', () => {\n                this.selectServer(server);\n\n                this.worldsList.querySelector('li.active')?.classList.remove('active');\n                li.classList.add('active');\n            });\n\n            // Add the <li> element to the list of worlds\n            this.worldsList.append(li);\n        }\n    }\n\n    /**\n     * Handles the event of a key being initially pressed down.\n     * @param callback Contains event data about the key pressed.\n     */\n\n    public onKeyDown(callback: KeyDownCallback): void {\n        this.keyDownCallback = callback;\n    }\n\n    /**\n     * Handles the event of a key being released.\n     * @param callback Contains event data about the key released.\n     */\n\n    public onKeyUp(callback: KeyUpCallback): void {\n        this.keyUpCallback = callback;\n    }\n\n    /**\n     * Handles when an attempt to log in is made.\n     * @param callback Data contains username, password, and email\n     * if the user is registering.\n     */\n\n    public onLogin(callback: LoginCallback): void {\n        this.loginCallback = callback;\n    }\n\n    /**\n     * Callback for when left mouse click occurs.\n     * @param callback Event data about the left mouse click.\n     */\n\n    public onLeftClick(callback: LeftClickCallback): void {\n        this.leftClickCallback = callback;\n    }\n\n    /**\n     * Callback about context menu activation. Also known\n     * as right click in the browser.\n     * @param callback Callback containing ContextMenuData.\n     */\n\n    public onRightClick(callback: RightClickCallback): void {\n        this.rightClickCallback = callback;\n    }\n\n    /**\n     * Callback for whenever the mouse moves.\n     * @param callback Contains mouse movement event data.\n     */\n\n    public onMouseMove(callback: MouseMoveCallback): void {\n        this.mouseMoveCallback = callback;\n    }\n\n    /**\n     * An empty callback signal containing a signal\n     * for the renderer and various other elements\n     * to undergo resizing.\n     */\n\n    public onResize(callback: EmptyCallback): void {\n        this.resizeCallback = callback;\n    }\n\n    /**\n     * Callback for when the respawn button is pressed.\n     */\n\n    public onRespawn(callback: EmptyCallback): void {\n        this.respawnCallback = callback;\n    }\n\n    /**\n     * Callback for when the window comes back in focus. (e.g. tab is switched)\n     */\n\n    public onFocus(callback: EmptyCallback): void {\n        this.focusCallback = callback;\n    }\n}\n","import Util from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Entity from '../entity/entity';\nimport type Game from '../game';\n\nexport default class AudioController {\n    /** Duration for background music to fade in and out. */\n    private readonly musicCrossfadeDuration = 3; // Crossfade for 3 seconds.\n\n    /** Minimum gain for background music. */\n    private readonly musicMinGain = 0.01;\n    /** Maximum gain for background music. */\n    private readonly musicMaxGain = 0.5;\n\n    /** Save audio buffers. */\n    private buffers: { [url: string]: Promise<AudioBuffer> } = {};\n\n    /** The main audio context. */\n    private context!: AudioContext;\n\n    /** Gain node used to fade in/out the background music */\n    private musicGainNode!: GainNode;\n\n    /** Make sure there's only one gain node for music. */\n    private isMusicConnected = false;\n\n    public constructor(private game: Game) {}\n\n    /**\n     * Creates an audio context (generally when player first interacts with the website).\n     */\n\n    public createContext(): void {\n        this.context = new AudioContext();\n    }\n\n    /**\n     * Plays a new sound.\n     * @param sound - The sound to play.\n     * @param target - The target to play the sound from.\n     * If not specified, the sound will be played nonspatially.\n     */\n\n    public async playSound(sound: string, target?: Entity) {\n        if (!this.isAudioEnabled()) return;\n\n        let source = await this.bufferSource(`/audio/sounds/${sound}.mp3`),\n            soundVolume = this.getSoundVolume(),\n            node = source.connect(new GainNode(this.context, { gain: soundVolume }));\n\n        if (target && !this.getSettings().lowPowerMode) {\n            let { tileSize } = this.game.map;\n\n            // Create and connect a panner node for spatial sounds\n            node = node.connect(\n                new PannerNode(this.context, {\n                    positionX: target.x,\n                    positionY: target.y,\n                    distanceModel: 'linear',\n                    refDistance: tileSize,\n                    maxDistance: tileSize * 10 // Maximum of 10 tiles.\n                })\n            );\n        }\n\n        node.connect(this.context.destination);\n\n        let { gain } = this.musicGainNode;\n\n        // Make sure the music stays dampened with multiple concurrent sounds.\n        gain.cancelScheduledValues(this.context.currentTime);\n\n        // Dampen the music by the sound volume.\n        this.rampGain(gain, gain.value - (soundVolume * this.musicMaxGain) / 2);\n\n        source.addEventListener('ended', () => {\n            this.rampGain(gain, this.getMusicVolume(), 0.5);\n        });\n\n        source.start();\n    }\n\n    /**\n     * Plays background music, replacing any currently playing music.\n     * @param music - The music to play. If not specified, it will stop the current music.\n     */\n\n    public async playMusic(music?: string) {\n        if (!music) return this.stopMusic();\n\n        let source = await this.bufferSource(`/audio/music/${music}.mp3`);\n        source.loop = true;\n\n        this.stopMusic();\n        source.connect(this.musicGainNode);\n\n        if (this.isAudioEnabled()) this.musicGainNode.connect(this.context.destination);\n\n        this.rampGain(this.musicGainNode.gain, this.getMusicVolume(), this.musicCrossfadeDuration);\n        source.start();\n    }\n\n    /**\n     * Loads and saves the buffer of an audio source.\n     * @param url - The url of the audio to buffer.\n     * @returns The audio buffer source node.\n     */\n\n    private async bufferSource(url: string) {\n        this.updateVolume();\n\n        this.buffers[url] ??= this.loadAudio(url);\n\n        return new AudioBufferSourceNode(this.context, {\n            buffer: await this.buffers[url]\n        });\n    }\n\n    /**\n     * Loads and decodes an audio source into a buffer.\n     * @param url - The url of the audio to load.\n     * @returns The decoded audio source.\n     */\n\n    private async loadAudio(url: string) {\n        let audio = await fetch(url),\n            arrayBuffer = await audio.arrayBuffer(),\n            audioBuffer = await this.context.decodeAudioData(arrayBuffer);\n\n        return audioBuffer;\n    }\n\n    /**\n     * Updates the volume of the music.\n     * This is also where the audio context is initialized.\n     */\n\n    public updateVolume() {\n        if (!this.musicGainNode) this.initMusicNode();\n\n        let musicVolume = this.getMusicVolume();\n\n        if (musicVolume <= 0 || !this.isAudioEnabled()) {\n            if (this.isMusicConnected) {\n                this.musicGainNode.disconnect(this.context.destination);\n                this.isMusicConnected = false;\n            }\n        } else {\n            let { gain } = this.musicGainNode;\n\n            gain.cancelScheduledValues(this.context.currentTime);\n\n            if (this.isMusicConnected) this.rampGain(gain, musicVolume);\n            else {\n                this.musicGainNode.connect(this.context.destination);\n                this.isMusicConnected = true;\n\n                this.rampGain(gain, this.musicMinGain);\n                this.rampGain(gain, musicVolume, this.musicCrossfadeDuration);\n            }\n        }\n    }\n\n    /**\n     * Updates the current audio context listener with the position and orientation of the player.\n     */\n\n    public updatePlayerListener() {\n        if (!this.context || !this.isAudioEnabled() || this.getSettings().lowPowerMode) return;\n\n        let { player } = this.game,\n            { positionX, positionY, forwardX, forwardY } = this.context.listener;\n\n        if (!positionX || !positionY || !forwardX || !forwardY) {\n            this.context.listener.setPosition(player.x, player.y, 0);\n\n            return;\n        }\n\n        positionX.value = player.x;\n        positionY.value = player.y;\n\n        switch (player.orientation) {\n            case Modules.Orientation.Up: {\n                forwardX.value = 0;\n                forwardY.value = 1;\n                break;\n            }\n\n            case Modules.Orientation.Down: {\n                forwardX.value = 0;\n                forwardY.value = -1;\n                break;\n            }\n\n            case Modules.Orientation.Left: {\n                forwardX.value = -1;\n                forwardY.value = 0;\n                break;\n            }\n\n            case Modules.Orientation.Right: {\n                forwardX.value = 1;\n                forwardY.value = 0;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Stops any currently playing music, and initializes a new one.\n     */\n\n    public stopMusic() {\n        let gainNode = this.musicGainNode;\n\n        // Replace the current music node.\n        this.initMusicNode();\n\n        // Return if there's no music to stop.\n        if (!gainNode) return;\n\n        let { gain } = gainNode;\n\n        gain.cancelScheduledValues(this.context.currentTime);\n        this.rampGain(gain, this.musicMinGain, this.musicCrossfadeDuration);\n\n        setTimeout(() => gainNode.disconnect(), this.musicCrossfadeDuration * 1000);\n    }\n\n    /**\n     * (Re)initialize a new music node.\n     */\n\n    private initMusicNode() {\n        this.musicGainNode = new GainNode(this.context, { gain: this.musicMinGain });\n    }\n\n    /**\n     * Transitions the audio gain following a linear ramp.\n     * @param gain - The audio parameter to ramp.\n     * @param volume - The volume to ramp to. If less or equal to zero, the volume won't change.\n     * @param duration - The duration to ramp by. If not specified, the ramp will be instant.\n     */\n\n    private rampGain(gain: AudioParam, volume: number, duration = 0) {\n        if (volume > 0) gain.linearRampToValueAtTime(volume, this.context.currentTime + duration);\n    }\n\n    /**\n     * Gets the sound volume from the settings.\n     * @returns The sound volume.\n     */\n\n    private getSoundVolume(): number {\n        return this.getSettings().soundVolume / 100;\n    }\n\n    /**\n     * Gets the music volume from the settings.\n     * @returns The music volume.\n     */\n\n    private getMusicVolume(): number {\n        return (this.getSettings().musicVolume / 100) * this.musicMaxGain * 2;\n    }\n\n    /**\n     * Gets whether or not the audio is enabled.\n     * @returns `true` if the audio is enabled.\n     */\n\n    private isAudioEnabled() {\n        return this.getSettings().audioEnabled;\n    }\n\n    /**\n     * Gets the settings object from the game storage.\n     * @returns The settings object.\n     */\n\n    private getSettings() {\n        return this.game.storage.data.settings;\n    }\n\n    /**\n     * Picks between the two possible hit sound effects\n     * and plays one of them randomly.\n     */\n\n    public playHitSound(target: Entity): void {\n        this.playSound(`hit${Util.randomInt(1, 2)}`, target);\n    }\n\n    /**\n     * Plays one of the kill sound effects randomly.\n     */\n\n    public playKillSound(target: Entity): void {\n        this.playSound(`kill${Util.randomInt(1, 2)}`, target);\n    }\n}\n","export default class Timer {\n    public constructor(public time: number, public duration: number) {}\n\n    /**\n     * Checks if the timer has expired, that is,\n     * the current time is greater than the time\n     * the timer was greated by duration amount.\n     * @param time The current game time.\n     * @returns Whether or not the timer has expired.\n     */\n\n    public isOver(time: number): boolean {\n        return time - this.time > this.duration;\n    }\n}\n","/*!\n * jQuery JavaScript Library v3.6.3\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2022-12-20T21:28Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket trac-14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.3\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.9\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2022-12-19\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// `qSA` may not throw for unrecognized parts using forgiving parsing:\n\t\t\t\t\t// https://drafts.csswg.org/selectors/#forgiving-selector\n\t\t\t\t\t// like the `:has()` pseudo-class:\n\t\t\t\t\t// https://drafts.csswg.org/selectors/#relational\n\t\t\t\t\t// `CSS.supports` is still expected to return `false` then:\n\t\t\t\t\t// https://drafts.csswg.org/css-conditional-4/#typedef-supports-selector-fn\n\t\t\t\t\t// https://drafts.csswg.org/css-conditional-4/#dfn-support-selector\n\t\t\t\t\tif ( support.cssSupportsSelector &&\n\n\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t!CSS.supports( \"selector(:is(\" + newSelector + \"))\" ) ) {\n\n\t\t\t\t\t\t// Support: IE 11+\n\t\t\t\t\t\t// Throw to get to the same code path as an error directly in qSA.\n\t\t\t\t\t\t// Note: once we only support browser supporting\n\t\t\t\t\t\t// `CSS.supports('selector(...)')`, we can most likely drop\n\t\t\t\t\t\t// the `try-catch`. IE doesn't implement the API.\n\t\t\t\t\t\tthrow new Error();\n\t\t\t\t\t}\n\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t// Support: Chrome 105+, Firefox 104+, Safari 15.4+\n\t// Make sure forgiving mode is not used in `CSS.supports( \"selector(...)\" )`.\n\t//\n\t// `:is()` uses a forgiving selector list as an argument and is widely\n\t// implemented, so it's a good one to test against.\n\tsupport.cssSupportsSelector = assert( function() {\n\t\t/* eslint-disable no-undef */\n\n\t\treturn CSS.supports( \"selector(*)\" ) &&\n\n\t\t\t// Support: Firefox 78-81 only\n\t\t\t// In old Firefox, `:is()` didn't use forgiving parsing. In that case,\n\t\t\t// fail this test as there's no selector to test against that.\n\t\t\t// `CSS.supports` uses unforgiving parsing\n\t\t\tdocument.querySelectorAll( \":is(:jqfake)\" ) &&\n\n\t\t\t// `*` is needed as Safari & newer Chrome implemented something in between\n\t\t\t// for `:has()` - it throws in `qSA` if it only contains an unsupported\n\t\t\t// argument but multiple ones, one of which is supported, are fine.\n\t\t\t// We want to play safe in case `:is()` gets the same treatment.\n\t\t\t!CSS.supports( \"selector(:is(*,:jqfake))\" );\n\n\t\t/* eslint-enable */\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\tif ( !support.cssSupportsSelector ) {\n\n\t\t// Support: Chrome 105+, Safari 15.4+\n\t\t// `:has()` uses a forgiving selector list as an argument so our regular\n\t\t// `try-catch` mechanism fails to catch `:has()` with arguments not supported\n\t\t// natively like `:has(:contains(\"Foo\"))`. Where supported & spec-compliant,\n\t\t// we now use `CSS.supports(\"selector(:is(SELECTOR_TO_BE_TESTED))\")`, but\n\t\t// outside that we mark `:has` as buggy.\n\t\trbuggyQSA.push( \":has\" );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\n\t\t\t// Support: IE <9 only\n\t\t\t// IE doesn't have `contains` on `document` so we need to check for\n\t\t\t// `documentElement` presence.\n\t\t\t// We need to fall back to `a` when `documentElement` is missing\n\t\t\t// as `ownerDocument` of elements within `<template/>` may have\n\t\t\t// a null one - a default behavior of all modern browsers.\n\t\t\tvar adown = a.nodeType === 9 && a.documentElement || a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE <10 only\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\n\t// Strict HTML recognition (trac-11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See trac-6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (trac-9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see trac-8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (trac-14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (trac-11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (trac-14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (trac-13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (trac-12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (trac-13208)\n\t\t\t\t// Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (trac-13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (trac-504, trac-13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur if we're currently inside\n\t\t// a leveraged native-event stack\n\t\t_default: function( event ) {\n\t\t\treturn dataPriv.get( event.target, type );\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\n\trcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (trac-8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Unwrap a CDATA section containing script contents. This shouldn't be\n\t\t\t\t\t\t\t// needed as in XML documents they're already not visible when\n\t\t\t\t\t\t\t// inspecting element contents and in HTML documents they have no\n\t\t\t\t\t\t\t// meaning but we're preserving that logic for backwards compatibility.\n\t\t\t\t\t\t\t// This will be removed completely in 4.0. See gh-4904.\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar rcustomProp = /^--/;\n\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\nvar whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n\n\nvar rtrimCSS = new RegExp(\n\t\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\",\n\t\"g\"\n);\n\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (trac-8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tisCustomProp = rcustomProp.test( name ),\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, trac-12537)\n\t//   .css('--customProperty) (gh-3144)\n\tif ( computed ) {\n\n\t\t// Support: IE <=9 - 11+\n\t\t// IE only supports `\"float\"` in `getPropertyValue`; in computed styles\n\t\t// it's only available as `\"cssFloat\"`. We no longer modify properties\n\t\t// sent to `.css()` apart from camelCasing, so we need to check both.\n\t\t// Normally, this would create difference in behavior: if\n\t\t// `getPropertyValue` returns an empty string, the value returned\n\t\t// by `.css()` would be `undefined`. This is usually the case for\n\t\t// disconnected elements. However, in IE even disconnected elements\n\t\t// with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( isCustomProp && ret ) {\n\n\t\t\t// Support: Firefox 105+, Chrome <=105+\n\t\t\t// Spec requires trimming whitespace for custom properties (gh-4926).\n\t\t\t// Firefox only trims leading whitespace. Chrome just collapses\n\t\t\t// both leading & trailing whitespace to a single space.\n\t\t\t//\n\t\t\t// Fall back to `undefined` if empty string returned.\n\t\t\t// This collapses a missing definition with property defined\n\t\t\t// and set to an empty string but there's no standard API\n\t\t\t// allowing us to differentiate them without a performance penalty\n\t\t\t// and returning `undefined` aligns with older jQuery.\n\t\t\t//\n\t\t\t// rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\n\t\t\t// as whitespace while CSS does not, but this is not a problem\n\t\t\t// because CSS preprocessing replaces them with U+000A LINE FEED\n\t\t\t// (which *is* CSS whitespace)\n\t\t\t// https://www.w3.org/TR/css-syntax-3/#input-preprocessing\n\t\t\tret = ret.replace( rtrimCSS, \"$1\" ) || undefined;\n\t\t}\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug trac-9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (trac-7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// Use proper attribute retrieval (trac-12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + className + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += className + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classNames, cur, curValue, className, i, finalValue;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\tif ( classNames.length ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tcurValue = getClass( this );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = this.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + className + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + className + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\tthis.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar classNames, className, i, self,\n\t\t\ttype = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tclassNames = classesToArray( value );\n\n\t\treturn this.each( function() {\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\tself = jQuery( this );\n\n\t\t\t\tfor ( i = 0; i < classNames.length; i++ ) {\n\t\t\t\t\tclassName = classNames[ i ];\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (trac-14686, trac-14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (trac-2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (trac-9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (trac-6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// trac-7653, trac-8125, trac-8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes trac-9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (trac-10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket trac-12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// trac-9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (trac-11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// trac-1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see trac-8605, trac-14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// trac-14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\n// Require that the \"whitespace run\" starts from a non-whitespace\n// to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"$1\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (trac-13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","let tooltip!: HTMLElement;\n\n/**\n * Creates a tooltip and shows it on the given element.\n * @param element The element to attach the tooltip to.\n * @param text The text to display in the tooltip.\n */\nfunction showTooltip(element: HTMLElement, text: string) {\n    // If the tooltip already exists, don't create a new one\n    tooltip ??= document.createElement('div');\n\n    // Get the element's bounding rectangle\n    let rect = element.getBoundingClientRect();\n\n    tooltip.classList.add('bubble');\n    tooltip.textContent = text;\n\n    // Add the tooltip to the DOM\n    document.querySelector('#bubbles')!.append(tooltip);\n\n    // Set the style of the tooltip\n    tooltip.style.padding = '5px 10px';\n    tooltip.style.left = `${rect.left + rect.width / 2 - tooltip.offsetWidth / 2}px`;\n    tooltip.style.top = `${rect.top - tooltip.offsetHeight}px`;\n\n    // Mouse events\n\n    element.addEventListener('blur', () => tooltip.remove());\n    element.addEventListener('mouseout', () => tooltip.remove());\n    element.addEventListener('mouseleave', () => tooltip.remove());\n\n    // Touch events\n\n    element.addEventListener('touchend', (event) => {\n        if (event.target !== element) tooltip.remove();\n    });\n    element.addEventListener('touchcancel', (event) => {\n        if (event.target !== element) tooltip.remove();\n    });\n\n    document.addEventListener('touchend', (event) => {\n        if (event.target !== element) tooltip.remove();\n    });\n    document.addEventListener('touchcancel', (event) => {\n        if (event.target !== element) tooltip.remove();\n    });\n}\n\n/**\n * Listens for events on the given element and shows a tooltip when the event is triggered.\n * @param element The element to attach the tooltip to.\n * @param text The text to display in the tooltip.\n */\nexport function attachTooltip(element: HTMLElement, text: string): void {\n    element.addEventListener('focus', () => showTooltip(element, text));\n    element.addEventListener('mouseover', () => showTooltip(element, text));\n    element.addEventListener('mouseenter', () => showTooltip(element, text));\n    element.addEventListener('touchstart', () => showTooltip(element, text));\n}\n","import Timer from '../../utils/timer';\n\nimport $ from 'jquery';\n\nexport default class Blob {\n    public element: JQuery;\n    public duration = 5000;\n\n    private timer: Timer;\n    public static = false;\n\n    public constructor(\n        public instance: string,\n        message: string,\n        duration = 5000,\n        public position?: Position\n    ) {\n        this.timer = new Timer(Date.now(), duration);\n\n        this.element = this.createBlob(instance, message);\n\n        // Automatically static if we provied an absolute position.\n        this.static = !!this.position;\n    }\n\n    /**\n     * Updates a blob with the new text and resets the timer.\n     * @param text The new string text we are displaying.\n     * @param time The current game time.\n     */\n\n    public update(text: string, time: number): void {\n        // Reset timer\n        this.timer.time = time;\n\n        $(this.element).find('p').html(text);\n    }\n\n    /**\n     * Has the timer reached the end of the bubble's duration?\n     * @param time The current game time from the updater.\n     * @returns Whether or not the timer has reached the end of the bubble's duration.\n     */\n\n    public isOver(time: number): boolean {\n        return this.timer.isOver(time);\n    }\n\n    /**\n     * Removes the JQuery element from the DOM.\n     */\n\n    public destroy(): void {\n        $(this.element).remove();\n    }\n\n    /**\n     * Creates a JQuery HTML element of the bubble with the specified\n     * id and message contents.\n     * @param instance Bubble's identifier, generally the entity's instance.\n     * @param message Message that we are displaying in the bubble.\n     * @returns A JQuery element that is appended to the container.\n     */\n\n    public createBlob(instance: string, message: string): JQuery {\n        return $(\n            `<div id=\"${instance}\" class=\"bubble\"><p>${message}</p><div class=\"bubble-tip\"></div></div>`\n        );\n    }\n}\n","import Blob from '../renderer/bubbles/blob';\n\nimport $ from 'jquery';\n\nimport type Game from '../game';\n\nexport default class BubbleController {\n    private container: JQuery = $('#bubbles');\n\n    // Each entity's instance is associated with a bubble for the duration of a bubble.\n    private bubbles: { [instance: string]: Blob } = {};\n\n    public constructor(private game: Game) {}\n\n    /**\n     * This creates the blob that will be used to display text. The bubble\n     * is created above an entity (or static object if specified), and for the\n     * duration of its existence, is updated if another `create` is called.\n     *\n     * @param instance - An identifier for the bubble we are creating.\n     * @param message - A string of the text we are displaying.\n     * @param duration - How long the bubble will display for.\n     * @param position - Position containing x and y coordinates. Uses those and marks the bubble as static.\n     */\n    public create(instance: string, message: string, duration = 5000, position?: Position): void {\n        let bubble = this.bubbles[instance];\n\n        // Just update the bubble if it already exists.\n        if (bubble) return bubble.update(message, Date.now());\n\n        // Create a new bubble.\n        this.bubbles[instance] = new Blob(instance, message, duration, position);\n\n        // Add the newly created bubble element to the container of bubbles.\n        this.bubbles[instance].element.appendTo(this.container);\n    }\n\n    /**\n     * Sets a bubble to an instance and the position associated\n     * with it. The instance is any entity's instance, and\n     * the x and y are absolute values in pixels.\n     * @param instance The instance to store the bubble as.\n     * @param x The x position of the bubble.\n     * @param y The y position of the bubble.\n     */\n\n    public setTo(instance: string, x: number, y: number): void {\n        let bubble = this.bubbles[instance],\n            { zoomFactor } = this.game.camera,\n            tileSize = this.game.renderer.tileSize * zoomFactor,\n            width = parseInt(bubble.element.css('width')) + 24,\n            offset = width / 2 - tileSize / 2,\n            offsetY = -20;\n\n        x = (x - this.game.camera.x) * zoomFactor;\n        y = (y - this.game.camera.y) * zoomFactor - tileSize * 2 - offsetY;\n\n        bubble.element.css({ left: `${x - offset + 3}px`, top: `${y}px` });\n    }\n\n    /**\n     * Update function for the bubbles. Iterates through all the bubbles\n     * and updates their positioning relative to the screen. This gets called\n     * every frame so that the bubbles are following the entity adequately\n     * as it moves or the camera moves.\n     * @param time The current game time.\n     */\n\n    public update(time: number): void {\n        for (let bubble of Object.values(this.bubbles)) {\n            let entity = this.game.entities.get(bubble.instance);\n\n            // If there is an entity, we set the bubble to its position.\n            if (entity) this.setTo(entity.instance, entity.x, entity.y);\n\n            // If the bubble is static its position is always the specified one.\n            if (bubble.static) this.setTo(bubble.instance, bubble.position!.x, bubble.position!.y);\n\n            // Destroy once the timer runs out.\n            if (bubble.isOver(time)) this.destroy(bubble);\n        }\n    }\n\n    /**\n     * Removes a bubble based on its instance. Checks if it exists\n     * first then calls the destroy command with the bubble.\n     * @param instance The instance of the bubble we are checking.\n     */\n\n    public clear(instance: string): void {\n        if (this.bubbles[instance]) this.destroy(this.bubbles[instance]);\n    }\n\n    /**\n     * Destroys the bubble and removes it from our dictionary.\n     * @param bubble The bubble we are unloading.\n     */\n\n    public destroy(bubble: Blob): void {\n        bubble.destroy();\n        delete this.bubbles[bubble.instance];\n    }\n\n    /**\n     * Clears all the bubbles from the screen.\n     */\n\n    public clean(): void {\n        for (let bubble of Object.values(this.bubbles)) bubble.destroy();\n\n        this.bubbles = {};\n    }\n}\n","import { Opcodes, Packets } from '@kaetram/common/network';\n\nimport type Character from './character';\nimport type Game from '../../game';\nimport type EntitiesController from '../../controllers/entities';\n\nexport default class Handler {\n    protected game: Game;\n    protected entities: EntitiesController;\n\n    /**\n     * The handler is responsible for handling the character's movement and synchronizing\n     * that with the rest of the client. It also sends packets when appropriate.\n     */\n\n    public constructor(protected character: Character) {\n        this.game = character.game;\n        this.entities = this.game.entities;\n\n        // Callbacks for movements.\n        this.character.onRequestPath(this.handleRequestPath.bind(this));\n        this.character.onStartPathing(this.handleStartPathing.bind(this));\n        this.character.onBeforeStep(this.handleBeforeStep.bind(this));\n        this.character.onStep(this.handleStep.bind(this));\n        this.character.onSecondStep(this.handleSecondStep.bind(this));\n        this.character.onStopPathing(this.handleStopPathing.bind(this));\n        this.character.onMove(this.handleMove.bind(this));\n        this.character.onFallback(this.handleFallback.bind(this));\n    }\n\n    /**\n     * Callback that handles when the player clicks on a new tile. We must\n     * calculate the path to the new tile and begin moving the player.\n     * @param x The x grid coordinate of the tile the player clicked on.\n     * @param y The y grid coordinate of the tile the player clicked on.\n     * @returns The path to the new tile in a 2D array.\n     */\n\n    protected handleRequestPath(x: number, y: number): number[][] {\n        // Prevent any calculations from being made if the player clicked on the tile they are already on.\n        if (this.character.gridX === x && this.character.gridY === y) return [];\n\n        // Prevent calculating paths if the tile is colliding.\n        if (this.game.map.isColliding(x, y)) return [];\n\n        return this.game.findPath(this.character, x, y);\n    }\n\n    /**\n     * Empty implementation for when the character begins pathing. This is handled specifically\n     * by the player handler subclass.\n     * @param path The path in a 2D array containing the x and y coordinates of each tile.\n     */\n\n    protected handleStartPathing(_path: number[][]): void {\n        // log.info('Unimplemented handleStartPathing');\n    }\n\n    /**\n     * Handles the unregistering of the position prior to beginning movement.\n     */\n\n    protected handleBeforeStep(): void {\n        this.entities.unregisterPosition(this.character);\n    }\n\n    /**\n     * Callback for every step the character takes (every time they move to a new tile). We must\n     * update their position to the attackers and followers, as well as send a packet to the\n     * server containing their positions.\n     */\n\n    protected handleStep(): void {\n        this.entities.registerPosition(this.character);\n\n        /**\n         * The following iterates through all the attackers and signals to them\n         * to update their following to the target's latest position (this character).\n         */\n\n        this.character.forEachAttacker((attacker) => {\n            // Clear the attackers if their target doesn't match this character (or it doesn't exist).\n            if (!attacker.target || attacker.target.instance !== this.character.instance)\n                return this.character.removeAttacker(attacker);\n\n            // If the attacker is too far away from the target, make them follow their target.\n            if (!attacker.canAttackTarget()) attacker.follow(this.character);\n        });\n\n        // Essentially the same as the above, but for followers.\n        this.character.forEachFollower((follower: Character) => {\n            if (!follower.target || follower.target.instance !== this.character.instance)\n                return this.character.removeFollower(follower);\n\n            follower.follow(this.character);\n        });\n\n        /**\n         * We temporarily rely on a consensus between multiple clients to establish\n         * the position of a character (the server is only involved in telling the mob where to go).\n         */\n\n        if (this.character.hasTarget() || this.character.hasAttackers())\n            this.game.socket.send(Packets.Movement, {\n                opcode: Opcodes.Movement.Entity,\n                targetInstance: this.character.instance,\n                requestX: this.character.gridX,\n                requestY: this.character.gridY\n            });\n\n        /**\n         * This handles attacking using ranged projectiles. If the character has a target\n         * and it's within attack range distance we stop the movement.\n         */\n\n        if (this.character.canAttackTarget()) this.character.stop(true);\n    }\n\n    /**\n     * Second step is called every... second step the character takes. This is implemented\n     * in the player handler subclass.\n     */\n\n    protected handleSecondStep(): void {\n        // log.info('Unimplemented handleSecondStep');\n    }\n\n    /**\n     * Unimplemented base function for when the character stops pathing. This is used\n     * by the player handler implementation to send a packet to the server and update\n     * camera information and other things.\n     * @param _x The x grid coordinate of the tile the player stopped on.\n     * @param _y The y grid coordinate of the tile the player stopped on.\n     */\n\n    protected handleStopPathing(_x: number, _y: number): void {\n        // log.info('Unimplemented handleStopPathing');\n    }\n\n    /**\n     * Unimplemented base function that gets called for every pixel that the character moves.\n     */\n\n    protected handleMove(): void {\n        // log.info('Unimplemented handleMove');\n    }\n\n    /**\n     * Because the server is not yet calculating pathfinding, we use a fallback\n     * to teleport a character that the server moved to a tile to which pathfinding\n     * is not possible. This will be removed once the server does pathfinding.\n     * @param x The requested x grid coordinate.\n     * @param y The requested y grid coordinate.\n     */\n\n    protected handleFallback(x: number, y: number): void {\n        this.game.teleport(this.character, x, y);\n    }\n}\n","export default class Transition {\n    private startValue = 0;\n    public endValue = 0;\n    private duration = 0;\n    public inProgress = false;\n    private startTime!: number;\n\n    private updateCallback?: (value: number) => void;\n    private stopCallback?: () => void;\n\n    /**\n     * Starts a transition instance with the given parameters.\n     * @param currentTime The current game time tick in milliseconds.\n     * @param startValue Starting value of the transition.\n     * @param endValue Ending value determining when transition ends.\n     * @param duration How long the transition should be in milliseconds.\n     * @param updateCallback A callback for every increment of the transition between start and end value.\n     * @param stopCallback Callback for when transition finishes.\n     */\n\n    public start(\n        currentTime: number,\n        startValue: number,\n        endValue: number,\n        duration: number,\n        updateCallback: (value: number) => void,\n        stopCallback: () => void\n    ): void {\n        this.startTime = currentTime;\n        this.startValue = startValue;\n        this.endValue = endValue;\n        this.duration = duration;\n        this.updateCallback = updateCallback;\n        this.stopCallback = stopCallback;\n\n        this.inProgress = true;\n    }\n\n    /**\n     * Function responsible for incrementing an update into the transition.\n     * Say we start with a start value of 1, an end value of 16, and a duration of 100.\n     * We are essentially updating the step function every 10 milliseconds until\n     * we reach the end value. We continuously update until we reach the end value.\n     * Once we do so, we end the transition.\n     * @param currentTime The current game time tick.\n     */\n\n    public step(currentTime: number): void {\n        if (!this.inProgress) return;\n\n        // Current game tick minus the start time of the transition action.\n        let elapsed = currentTime - this.startTime;\n\n        // Max out if elapsed time is greater than duration of the transition.\n        if (elapsed > this.duration) elapsed = this.duration;\n\n        let diff = this.endValue - this.startValue,\n            interval = Math.round(this.startValue + (diff / this.duration) * elapsed);\n\n        if (elapsed === this.duration || interval === this.endValue) {\n            this.inProgress = false;\n\n            this.stopCallback?.();\n        } else this.updateCallback?.(interval);\n    }\n}\n","import Animation from './animation';\n\nimport Utils from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Sprite from './sprite';\n\nexport default abstract class Entity {\n    public x = 0;\n    public y = 0;\n    public gridX = 0;\n    public gridY = 0;\n    public nextGridX = -1;\n    public nextGridY = -1;\n\n    public movementSpeed = -1;\n    public attackRange = -1;\n    public frozen = false;\n    public dead = false;\n\n    public name = '';\n\n    public region = -1;\n\n    public healthBarVisible = false;\n\n    public sprite!: Sprite;\n\n    public spriteFlipX = false;\n    public spriteFlipY = false;\n\n    public animation!: Animation | null;\n\n    public shadowOffsetY = 0;\n    public hidden = false;\n\n    private visible = true;\n\n    public fading = false;\n\n    public angle = 0;\n    public angled = false;\n\n    public hasCounter = false;\n\n    public counter = 0;\n    public countdownTime = 0;\n    public fadingDuration = 1000;\n\n    public orientation: Modules.Orientation = Modules.Orientation.Down;\n\n    public fadingTime!: number;\n    private blinking!: number;\n\n    public normalSprite!: Sprite;\n    public hurtSprite!: Sprite;\n    public silhouetteSprite!: Sprite;\n\n    public ready = false;\n\n    public hitPoints = 0;\n    public maxHitPoints = 0;\n    public mana = 0;\n    public maxMana = 0;\n    public level = 1;\n    public experience = 0;\n    public teleporting = false;\n    public pvp = false;\n    public nameColour!: string;\n    public customScale!: number;\n    public fadingAlpha!: number;\n    public lastUpdate = Date.now();\n\n    public constructor(public instance = '', public type: Modules.EntityType) {}\n\n    /**\n     * Fades in the entity when spawning in.\n     * @param time The duration the fade-in will take.\n     */\n\n    public fadeIn(time: number): void {\n        this.fading = true;\n        this.fadingTime = time;\n    }\n\n    /**\n     * Begins the blinking interval.\n     * @param speed The speed at which the blink occurs.\n     */\n\n    public blink(speed = 150): void {\n        this.blinking = window.setInterval(() => this.toggleVisibility(), speed);\n    }\n\n    /**\n     * Stops teh blinking interval if it's running and updates the visibility.\n     */\n\n    protected stopBlinking(): void {\n        if (this.blinking) clearInterval(this.blinking);\n\n        this.setVisible(true);\n    }\n\n    /**\n     * Unimplemented idle() function.\n     */\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    public idle(): void {}\n\n    /**\n     * Animates the character's death animation and\n     * creates a callback if needed.\n     * @param callback Optional parameter for when the animation finishes.\n     * @param speed Optional parameter for the animation speed.\n     * @param count How many times to repeat the animation.\n     */\n\n    public animateDeath(callback?: () => void, speed = 120, count = 1): void {\n        this.setAnimation('death', speed, count, callback);\n    }\n\n    /**\n     * Updates the entity's silhouette sprite.\n     * @param active Whether or not to show the silhouette.\n     */\n\n    public updateSilhouette(active = false): void {\n        if (!this.silhouetteSprite) return;\n\n        this.sprite = active ? this.silhouetteSprite : this.normalSprite;\n    }\n\n    /**\n     * Updates the sprite of the entity with a new one.\n     * @param sprite The new sprite object (obtained using the sprites controller).\n     */\n\n    public setSprite(sprite: Sprite): void {\n        // Load the sprite if it hasn't been loaded yet.\n        if (!sprite.loaded) {\n            sprite.load();\n\n            // Make sure we're not setting the same sprite.\n            if (this.sprite?.key === sprite.key) return;\n        }\n\n        this.sprite = sprite;\n        this.normalSprite = sprite;\n\n        /**\n         * Attempt to reload the sprite if it's still loading, we do this\n         * because we want all elements of the sprite (hurt sprite, silhouette)\n         * to be fully loaded and then apply them to the entity.\n         */\n\n        if (sprite.loading) {\n            setTimeout(() => this.setSprite(sprite), 100);\n            return;\n        }\n\n        // Load the hurt and silhouette sprites if they exist.\n        if (sprite.hurtSprite) this.hurtSprite = sprite.hurtSprite;\n        if (sprite.silhouetteSprite) this.silhouetteSprite = sprite.silhouetteSprite;\n\n        sprite.onLoad(() => {\n            this.normalSprite = sprite;\n\n            // Load the hurt and silhouette sprites if they exist.\n            if (sprite.hurtSprite) this.hurtSprite = sprite.hurtSprite;\n            if (sprite.silhouetteSprite) this.silhouetteSprite = sprite.silhouetteSprite;\n\n            // Custom scales can be applied to certain entities.\n            if (!this.customScale) return;\n\n            this.sprite.offsetX *= this.customScale;\n            this.sprite.offsetY *= this.customScale;\n        });\n    }\n\n    /**\n     * Sets the animation of the entity.\n     * @param name The name of the animation to play.\n     * @param speed The speed at which the animation takes to play (in ms).\n     * @param count The amount of times the animation should play.\n     * @param onEndCount A function to be called upon animation completion.\n     */\n\n    public setAnimation(\n        name: string,\n        speed = this.sprite.idleSpeed,\n        count = 1,\n        onEndCount?: () => void\n    ): void {\n        // Prevent setting animation if no sprite or it's the same animation.\n        if (this.animation?.name === name) return;\n\n        // Copy the animation data from the sprite.\n        let { length, row, width, height } = this.sprite.animations[name];\n\n        // Create a new animation instance to prevent pointer issues.\n        this.animation = new Animation(name, length, row, width, height);\n\n        // Restart the attack animation if it's already playing.\n        if (name.startsWith('atk')) this.animation.reset();\n\n        this.animation.setSpeed(speed);\n\n        // Run the onEndCount function when the animation finishes or go to idle.\n        this.animation.setCount(count, onEndCount || (() => this.idle()));\n    }\n\n    /**\n     * Sets the absolute pixel coordinate position of the entity.\n     * @param x The new x pixel coordinate.\n     * @param y The new y pixel coordinate.\n     */\n\n    private setPosition(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Updates the grid position of the entity. Grid coordinates are pixel coordinates\n     * divided by the tlesize and floored.\n     * @param gridX The new grid x coordinate.\n     * @param gridY The new grid y coordinate.\n     */\n\n    public setGridPosition(gridX: number, gridY: number): void {\n        this.gridX = gridX;\n        this.gridY = gridY;\n        this.region = Utils.getRegion(gridX, gridY);\n\n        this.setPosition(gridX * Utils.tileSize, gridY * Utils.tileSize);\n    }\n\n    /**\n     * Sets the countdown to a value to start counting down from.\n     * @param count New value for the countdown.\n     */\n\n    public setCountdown(count: number): void {\n        this.counter = count;\n\n        this.countdownTime = Date.now();\n\n        this.hasCounter = true;\n    }\n\n    /**\n     * Sets the visibility of the entity.\n     * @param visible New visibility value.\n     */\n\n    private setVisible(visible: boolean): void {\n        this.visible = visible;\n    }\n\n    /**\n     * Returns the distance between the current entity and another entity.\n     * @param entity The entity we are finding the distance to.\n     * @returns Integer value of the distance (in tiles).\n     */\n\n    public getDistance(entity: Entity): number {\n        let { gridX, gridY } = this;\n\n        return Math.abs(gridX - entity.gridX) + Math.abs(gridY - entity.gridY);\n    }\n\n    /**\n     * Returns the angle of the entity in radians.\n     * @returns Angle number value.\n     */\n\n    public getAngle(): number {\n        return this.angle;\n    }\n\n    /**\n     * Changes the values of the entity visibility.\n     */\n\n    private toggleVisibility(): void {\n        this.setVisible(!this.visible);\n    }\n\n    /**\n     * Whether or not the entity is visible and should be drawn in the renderer.\n     * @returns The visibility status of the entity.\n     */\n\n    public isVisible(): boolean {\n        return this.visible;\n    }\n\n    /**\n     * Default value of whether or not to draw names above the entity. Overriden\n     * in the subclass implementations as needed.\n     * @returns Defaults to true.\n     */\n\n    public drawNames(): boolean {\n        return true;\n    }\n\n    /**\n     * Default value of whether or not the entity has a shadow underneath it. This\n     * gets overriden by subclass implementations as needed.\n     * @returns Defaults to false.\n     */\n\n    public hasShadow(): boolean {\n        return false;\n    }\n\n    /**\n     * Default implementation for medal.\n     * @returns Defaults to false.\n     */\n\n    public hasMedal(): boolean {\n        return false;\n    }\n\n    /**\n     * @returns Whether or not the entity is a player type.\n     */\n\n    public isPlayer(): boolean {\n        return this.type === Modules.EntityType.Player;\n    }\n\n    /**\n     * @returns Whether or not the entity is a player type.\n     */\n\n    public isMob(): boolean {\n        return this.type === Modules.EntityType.Mob;\n    }\n\n    /**\n     * @returns Whether or not the entity is an NPC type.\n     */\n\n    public isNPC(): boolean {\n        return this.type === Modules.EntityType.NPC;\n    }\n\n    /**\n     * @returns Whether or not the entity is an item type.\n     */\n\n    public isItem(): boolean {\n        return this.type === Modules.EntityType.Item;\n    }\n\n    /**\n     * @returns Whether or not the entity is a chest type.\n     */\n\n    public isChest(): boolean {\n        return this.type === Modules.EntityType.Chest;\n    }\n\n    /**\n     * @returns Whether or not the entity is a projectile type.\n     */\n\n    public isProjectile(): boolean {\n        return this.type === Modules.EntityType.Projectile;\n    }\n\n    /**\n     * @returns Whether or not the entity is an object type.\n     */\n\n    public isObject(): boolean {\n        return this.type === Modules.EntityType.Object;\n    }\n\n    /**\n     * Default implementation for `isModerator()`\n     * @returns False by default.\n     */\n\n    public isModerator(): boolean {\n        return false;\n    }\n\n    /**\n     * Default implementation for `isAdmin()`\n     * @returns False by default.\n     */\n\n    public isAdmin(): boolean {\n        return false;\n    }\n}\n","import Handler from './handler';\n\nimport Transition from '../../utils/transition';\nimport Animation from '../animation';\nimport Entity from '../entity';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Game from '../../game';\n\ntype RequestPathingCallback = (x: number, y: number) => number[][];\ntype StartPathingCallback = (path: number[][]) => void;\ntype StopPathingCallback = (gridX: number, gridY: number, forced: boolean) => void;\n\ntype HitPointsCallback = (hitPoints: number, maxHitPoints: number, decrease?: boolean) => void;\ntype FallbackCallback = (x: number, y: number) => void;\n\ninterface EffectInfo {\n    key: string;\n    animation: Animation;\n    perpetual?: boolean; // Animation plays endlessly until effect is manually removed.\n    speed?: number;\n}\n\nexport default class Character extends Entity {\n    public moving = false;\n    public following = false;\n    public stunned = false;\n    public forced = false;\n    public trading = false;\n\n    private interrupted = false;\n\n    public path: number[][] | null = null;\n    public target: Entity | null = null;\n\n    public lastTarget = '';\n\n    // List of active status effects currently applied on the player.\n    public statusEffects: Modules.Effects[] = [];\n\n    private attackers: { [id: string]: Character } = {};\n    private followers: { [id: string]: Character } = {};\n\n    public movement = new Transition();\n    public handler: Handler;\n\n    private readonly attackAnimationSpeed = 50;\n    private readonly walkAnimationSpeed = 120;\n\n    public effect: Modules.Effects = Modules.Effects.None;\n    public destination!: Position | null;\n    private newDestination!: Position | null;\n    private step!: number;\n    private healthBarTimeout!: number | null;\n\n    private effects: { [id: number]: EffectInfo } = {\n        [Modules.Effects.Critical]: {\n            key: 'effect-critical',\n            animation: new Animation('effect', 10, 0, 48, 48)\n        },\n        [Modules.Effects.Terror]: {\n            key: 'effect-terror',\n            animation: new Animation('effect', 8, 0, 64, 64)\n        },\n        [Modules.Effects.TerrorStatus]: {\n            key: 'effect-terror2',\n            animation: new Animation('effect', 5, 0, 32, 32),\n            perpetual: true,\n            speed: 200\n        },\n        [Modules.Effects.Stun]: {\n            key: 'effect-stun',\n            animation: new Animation('effect', 6, 0, 48, 48),\n            perpetual: true\n        },\n        [Modules.Effects.Healing]: {\n            key: 'effect-heal',\n            animation: new Animation('effect', 8, 0, 64, 64)\n        },\n        [Modules.Effects.Fireball]: {\n            key: 'effect-fireball',\n            animation: new Animation('effect', 8, 0, 64, 64)\n        },\n        [Modules.Effects.Iceball]: {\n            key: 'effect-iceball',\n            animation: new Animation('effect', 8, 0, 64, 64)\n        },\n        [Modules.Effects.Burning]: {\n            key: 'effect-burn',\n            animation: new Animation('effect', 5, 0, 32, 32),\n            perpetual: true,\n            speed: 150\n        },\n        [Modules.Effects.Freezing]: {\n            key: 'effect-freeze',\n            animation: new Animation('effect', 6, 0, 32, 32),\n            perpetual: true,\n            speed: 200\n        },\n        [Modules.Effects.Poisonball]: {\n            key: 'effect-poisonball',\n            animation: new Animation('effect', 10, 0, 40, 40),\n            speed: 175\n        },\n        [Modules.Effects.Boulder]: {\n            key: 'effect-boulder',\n            animation: new Animation('effect', 7, 0, 32, 32)\n        }\n    };\n\n    private requestPathCallback?: RequestPathingCallback;\n    private startPathingCallback?: StartPathingCallback;\n    private beforeStepCallback?: () => void;\n    private stepCallback?: () => void;\n    private secondStepCallback?: () => void;\n    private stopPathingCallback?: StopPathingCallback;\n    private moveCallback?: () => void;\n\n    private fallbackCallback?: FallbackCallback;\n    private hitPointsCallback?: HitPointsCallback;\n\n    public constructor(instance: string, type: Modules.EntityType, public game: Game) {\n        super(instance, type);\n\n        this.loadAnimations();\n\n        this.handler = new Handler(this);\n    }\n\n    /**\n     * Loads animations used for special effects.\n     */\n\n    private loadAnimations(): void {\n        // Iterate through all the effects and load default speed and end callback events.\n        for (let key in this.effects) {\n            let effect = this.effects[key],\n                keyValue = parseInt(key);\n\n            // Default speed\n            effect.animation.setSpeed(effect.speed || 50);\n\n            // Remove effect once it has finished playing.\n            effect.animation.setCount(1, () => {\n                if (!effect.perpetual) this.removeEffect(keyValue);\n\n                // Terror effect has a secondary effect that is added to the character.\n                if (keyValue === Modules.Effects.Terror)\n                    this.addEffect(Modules.Effects.TerrorStatus);\n\n                effect.animation.reset();\n                effect.animation.count = 1;\n            });\n        }\n    }\n\n    /**\n     * An override of the superclass function with added functionality and cases\n     * for characters. Since characters have a orientation, we must handle the\n     * 'directionality' of the animation sprite.\n     * @param name The name of the animation to play.\n     * @param speed The speed at which the animation takes to play (in ms).\n     * @param count The amount of times the animation should play.\n     * @param onEndCount A function to be called upon animation completion.\n     */\n\n    public override setAnimation(\n        name: string,\n        speed = 120,\n        count = 0,\n        onEndCount?: () => void\n    ): void {\n        let o = ['atk', 'walk', 'idle'];\n\n        // Do not perform another animation while the death one is playing.\n        if (this.animation?.name === 'death') return;\n\n        this.spriteFlipX = false;\n        this.spriteFlipY = false;\n\n        if (o.includes(name)) {\n            name += `_${\n                this.orientation === Modules.Orientation.Left ? 'right' : this.orientationToString()\n            }`;\n            this.spriteFlipX = this.orientation === Modules.Orientation.Left;\n        }\n\n        super.setAnimation(name, speed, count, onEndCount);\n    }\n\n    /**\n     * Override for the superclass function so that the character's `setAnimation` is called.\n     * @param callback Optional parameter for when the animation finishes.\n     * @param speed Optional parameter for the animation speed.\n     * @param count How many times to repeat the animation.\n     */\n\n    public override animateDeath(callback?: () => void, speed = 120, count = 0): void {\n        this.setAnimation('death', speed, count, callback);\n    }\n\n    /**\n     * Briefly changes the character's sprite with that of the\n     * hurt sprite (a white and red sprite when a character is hurt).\n     */\n\n    public toggleHurt(): void {\n        if (this.dead || this.teleporting || !this.hurtSprite) return;\n\n        this.sprite = this.hurtSprite;\n\n        window.setTimeout(() => (this.sprite = this.normalSprite), 100);\n    }\n\n    /**\n     * Declares the entity dead and stops all pathing.\n     */\n\n    public despawn(): void {\n        this.hitPoints = 0;\n        this.dead = true;\n        this.removeTarget();\n        this.stop();\n\n        this.orientation = Modules.Orientation.Down;\n    }\n\n    /**\n     * Follows the player then requests a trade with them.\n     * @param entity The entity we are trying to trade with.\n     */\n\n    public trade(entity: Entity): void {\n        this.trading = true;\n\n        this.follow(entity);\n    }\n\n    /**\n     * Begins the following process. The character will perpetually\n     * follow a moving target until it reaches its position.\n     * @param entity The entity we are trying to follow.\n     * @param forced Whether or not we start a new path or update current one.\n     */\n\n    public follow(entity: Entity, forced = false): void {\n        this.following = true;\n\n        this.setTarget(entity);\n        this.move(entity.gridX, entity.gridY, forced);\n    }\n\n    /**\n     * Pursues a character. Similar to following except no attacking\n     * is done and the character will not stop following until you\n     * click on something else.\n     * @param character The character we will be pursuing.\n     */\n\n    public pursue(character: Character): void {\n        this.setTarget(character);\n        this.move(character.gridX, character.gridY);\n\n        character.addFollower(this);\n    }\n\n    /**\n     * Not technically a following action, but it is used since\n     * it removes the last step from the path.\n     * @param x The x grid coordinate of the position we are moving towards.\n     * @param y The y grid coordinate of the position we are moving towards.\n     */\n\n    public followPosition(x: number, y: number): void {\n        this.following = true;\n\n        this.move(x, y);\n    }\n\n    /**\n     * Add a status effect to the character if it doesn't already have it.\n     * @param effect The status effect we are trying to add.\n     */\n\n    public addEffect(effect: Modules.Effects): void {\n        if (this.hasEffect(effect)) return;\n\n        this.statusEffects.push(effect);\n    }\n\n    /**\n     * Adds an attacker to the dictionary of attackers.\n     * @param character Character we are adding to the dictionary.\n     */\n\n    public addAttacker(character: Character): void {\n        this.attackers[character.instance] = character;\n    }\n\n    /**\n     * Adds a follower to the dictionary of followers.\n     * @param character Character we are adding to the dictionary.\n     */\n\n    public addFollower(character: Character): void {\n        this.followers[character.instance] = character;\n    }\n\n    /**\n     * Removes a status effect from the character.\n     * @param effect The status effect we are trying to remove.\n     */\n\n    public removeEffect(effect: Modules.Effects): void {\n        // We also want to make sure we remove the terror status effect alongside the terror.\n        if (effect === Modules.Effects.Terror) this.removeEffect(Modules.Effects.TerrorStatus);\n\n        this.statusEffects = this.statusEffects.filter((e) => e !== effect);\n    }\n\n    /**\n     * Clears the list of status effects.\n     */\n\n    public removeAllEffects(): void {\n        this.statusEffects = [];\n    }\n\n    /**\n     * Removes a character from the list of attackers.\n     * @param character The character we are trying to remove.\n     */\n\n    public removeAttacker(character: Character): void {\n        delete this.attackers[character.instance];\n    }\n\n    /**\n     * Removes a follower from the list of followers.\n     * @param character The character we are trying to remove.\n     */\n\n    public removeFollower(character: Character): void {\n        delete this.followers[character.instance];\n    }\n\n    /**\n     * Whether or not the character has a status effect.\n     * @param effect The status effect we are checking for.\n     * @returns If the status effect is included in the array of status effects or not.\n     */\n\n    public hasEffect(effect: Modules.Effects): boolean {\n        return this.statusEffects.includes(effect);\n    }\n\n    /**\n     * Whether or not the character has at least one status effect.\n     * @returns Whether the status effects array is empty or not.\n     */\n\n    public hasActiveEffect(): boolean {\n        return this.statusEffects.length > 0;\n    }\n\n    /**\n     * @returns Whether or not the character has any attackers.\n     */\n\n    public hasAttackers(): boolean {\n        return Object.keys(this.attackers).length > 0;\n    }\n\n    /**\n     * @returns Whether or not the character has any followers.\n     */\n\n    public hasFollowers(): boolean {\n        return Object.keys(this.followers).length > 0;\n    }\n\n    /**\n     * Performs an action and updates the orientation of the character.\n     * @param orientation New orientation we are setting.\n     * @param action The type of action we are performing.\n     */\n\n    public performAction(orientation: Modules.Orientation, action: Modules.Actions): void {\n        this.setOrientation(orientation);\n\n        switch (action) {\n            case Modules.Actions.Idle: {\n                this.setAnimation('idle', this.sprite.idleSpeed);\n                break;\n            }\n\n            case Modules.Actions.Orientate: {\n                this.setAnimation('idle', this.sprite.idleSpeed);\n                break;\n            }\n\n            case Modules.Actions.Attack: {\n                this.setAnimation('atk', this.attackAnimationSpeed, 1);\n                break;\n            }\n\n            case Modules.Actions.Walk: {\n                this.setAnimation('walk', this.walkAnimationSpeed);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Return an entity to the base idle state.\n     * @param o Optional parameter if we want to update the orientation.\n     * @param force Whether or not we force the idle animation.\n     */\n\n    public override idle(o?: Modules.Orientation, force = false): void {\n        // Prevents the idle animation from affecting the walking animation.\n        if (this.hasPath() && !force) return;\n\n        let orientation = o || this.orientation;\n\n        this.performAction(orientation, Modules.Actions.Idle);\n    }\n\n    /**\n     * Converts the current orientation to a string that can\n     * be used in the animations.\n     * @returns String of the current orientation.\n     */\n\n    private orientationToString(): string {\n        switch (this.orientation) {\n            case Modules.Orientation.Left: {\n                return 'left';\n            }\n\n            case Modules.Orientation.Right: {\n                return 'right';\n            }\n\n            case Modules.Orientation.Up: {\n                return 'up';\n            }\n\n            case Modules.Orientation.Down: {\n                return 'down';\n            }\n        }\n    }\n\n    /**\n     * Used for setting the orientation of a character relative to another entity.\n     * @param entity The entity relative to the character.\n     */\n\n    public lookAt(entity: Entity): void {\n        let { gridX, gridY } = this;\n\n        if (entity.gridX > gridX) this.setOrientation(Modules.Orientation.Right);\n        else if (entity.gridX < gridX) this.setOrientation(Modules.Orientation.Left);\n        else if (entity.gridY > gridY) this.setOrientation(Modules.Orientation.Down);\n        else if (entity.gridY < gridY) this.setOrientation(Modules.Orientation.Up);\n\n        this.idle();\n    }\n\n    /**\n     * Begins the movement of the entity to the given position.\n     * @param x The grid x position to move to.\n     * @param y The grid y position to move to.\n     * @param forced Forced movement overrides any other movement.\n     * @param fallback Entities that cannot path correctly are teleported instead.\n     */\n\n    public go(x: number, y: number, forced = false, fallback = false): void {\n        if (this.frozen) return;\n\n        if (this.following) {\n            this.following = false;\n            this.removeTarget();\n        }\n\n        this.move(x, y, forced, fallback);\n    }\n\n    /**\n     * Updates the movement of the entity or starts a new path if needed.\n     * @param x The new grid x coordinate we are trying to move the character to.\n     * @param y The new grid y coordinate we are trying to move the character to.\n     * @param forced Whether or not to update the current pathing or request a new one.\n     * @param fallback Whether or not to teleport the entity if pathing fails.\n     */\n\n    private move(x: number, y: number, forced = false, fallback = false): void {\n        if (this.hasPath() && !forced) this.proceed(x, y);\n        else {\n            let path = this.requestPathfinding(x, y);\n\n            if ((!path || path.length < 2) && fallback) return this.fallbackCallback?.(x, y);\n\n            this.followPath(path);\n        }\n\n        this.destination = { x, y };\n    }\n\n    /**\n     * Soft update to the character's pathing destination.\n     * @param x The new grid x coordinate we are trying to move the character to.\n     * @param y The new grid y coordinate we are trying to move the character to.\n     */\n\n    private proceed(x: number, y: number): void {\n        this.newDestination = {\n            x,\n            y\n        };\n    }\n\n    /**\n     * This code will remain present throughout the alpha. Once we begin moving\n     * the pathfinder to the server-side, a tick-based system will be implemented\n     * to calculate steps and movement there rather than the client.\n     */\n\n    public nextStep(): void {\n        let stop = false,\n            x: number,\n            y: number,\n            path: number[][] | null;\n\n        // Make a callback every two steps the character takes.\n        if (this.step % 2 === 0 && this.secondStepCallback) this.secondStepCallback();\n\n        // Stop if there is no path present.\n        if (!this.hasPath()) return;\n\n        // Callback prior to taking a step.\n        this.beforeStepCallback?.();\n\n        // Set the new position onto the grid.\n        this.updateGridPosition();\n\n        if (!this.interrupted && this.path) {\n            if (this.hasNextStep()) [this.nextGridX, this.nextGridY] = this.path[this.step + 1];\n\n            this.stepCallback?.();\n\n            if (this.changedPath()) {\n                ({ x, y } = this.newDestination!);\n\n                path = this.requestPathfinding(x, y);\n\n                if (!path) return;\n\n                this.newDestination = null;\n\n                if (path.length < 2) stop = true;\n                else {\n                    this.startPathingCallback?.(path);\n                    this.followPath(path);\n                }\n            } else if (this.hasNextStep()) {\n                this.step++;\n                this.updateMovement();\n            } else stop = true;\n        } else {\n            stop = true;\n            this.interrupted = false;\n        }\n\n        if (stop) {\n            this.path = null;\n            this.idle();\n\n            if (this.stopPathingCallback)\n                this.stopPathingCallback(this.gridX, this.gridY, this.forced);\n\n            this.forced = false;\n        }\n    }\n\n    /**\n     * Determines which orientation the entity should be facing\n     * and animates the repsective walking animation.\n     */\n\n    private updateMovement(): void {\n        let { path, step } = this;\n\n        if (!path) return;\n\n        // nextStepX < prevStepX -> walking to the left\n        if (path[step][0] < path[step - 1][0])\n            this.performAction(Modules.Orientation.Left, Modules.Actions.Walk);\n\n        // nextStepX > prevStepX -> walking to the right\n        if (path[step][0] > path[step - 1][0])\n            this.performAction(Modules.Orientation.Right, Modules.Actions.Walk);\n\n        // nextStepY < prevStepY -> walking to the top\n        if (path[step][1] < path[step - 1][1])\n            this.performAction(Modules.Orientation.Up, Modules.Actions.Walk);\n\n        // nextStepY > prevStepY -> walking to the bottom\n        if (path[step][1] > path[step - 1][1])\n            this.performAction(Modules.Orientation.Down, Modules.Actions.Walk);\n    }\n\n    /**\n     * Begins the procedure to follow a path after it has been found.\n     * @param path The path we are following.\n     */\n\n    private followPath(path: number[][] | null): void {\n        /**\n         * This is to ensure the player does not click on\n         * himthis or somehow into another dimension\n         */\n\n        if (!path || path.length < 2) return;\n\n        this.path = path;\n        this.step = 0;\n\n        if (this.following) path.pop();\n\n        if (!this.moving && !this.changedPath()) this.startPathingCallback?.(path);\n\n        this.nextStep();\n    }\n\n    /**\n     * Stops the character's movement and resets the pathing variables.\n     * @param force Whether or not to stop movement without finishing the current step.\n     */\n\n    public stop(force = false): void {\n        if (!force) this.interrupted = true;\n        else if (this.hasPath()) {\n            this.path = null;\n            this.destination = null;\n            this.newDestination = null;\n            this.movement = new Transition();\n            this.performAction(this.orientation, Modules.Actions.Idle);\n            this.nextGridX = this.gridX;\n            this.nextGridY = this.gridY;\n        }\n    }\n\n    /**\n     * Whether or not the player can attack its target given its position.\n     * @returns True if the player is within the attack range of its target.\n     */\n\n    public canAttackTarget(): boolean {\n        if (!this.hasTarget()) return false;\n\n        if (!this.target!.isMob() && !this.target!.isPlayer()) return false;\n\n        if (this.getDistance(this.target!) > this.attackRange - 1) return false;\n\n        return true;\n    }\n\n    /**\n     * Returns an effect object from the effects list.\n     * @param effect The effect we are looking for.\n     * @returns The effect object.\n     */\n\n    public getEffect(effect: Modules.Effects): EffectInfo {\n        return this.effects[effect];\n    }\n\n    /**\n     * TRIGGERED!!!!\n     */\n    public triggerHealthBar(): void {\n        this.healthBarVisible = true;\n\n        if (this.healthBarTimeout) clearTimeout(this.healthBarTimeout);\n\n        this.healthBarTimeout = window.setTimeout(() => {\n            this.healthBarVisible = false;\n        }, 7000);\n    }\n\n    public clearHealthBar(): void {\n        this.healthBarVisible = false;\n        clearTimeout(this.healthBarTimeout!);\n        this.healthBarTimeout = null;\n    }\n\n    private requestPathfinding(x: number, y: number): number[][] | null {\n        return this.requestPathCallback?.(x, y) || null;\n    }\n\n    private updateGridPosition(): void {\n        if (!this.path || this.path.length === 0) return;\n\n        this.setGridPosition(this.path[this.step][0], this.path[this.step][1]);\n    }\n\n    public override hasShadow(): boolean {\n        return true;\n    }\n\n    public hasPath(): boolean {\n        return this.path !== null;\n    }\n\n    public hasNextStep(): boolean | null {\n        return this.path && this.path.length - 1 > this.step;\n    }\n\n    public changedPath(): boolean {\n        return !!this.newDestination;\n    }\n\n    /**\n     * Removes the current target from the character.\n     */\n\n    public removeTarget(): void {\n        this.target = null;\n    }\n\n    public moved(): void {\n        this.moveCallback?.();\n    }\n\n    public setTarget(target: Entity): void {\n        this.target = target;\n\n        this.lastTarget = target.instance;\n    }\n\n    /**\n     * @param target Optional parameter to check if the player has a specific target.\n     * @returns Whether or not the player has a specific target or a target at all.\n     */\n\n    public hasTarget(target?: Entity): boolean {\n        return target ? this.target === target : !!this.target;\n    }\n\n    /**\n     * Mocks a entity-based target function and targets an object instead.\n     * @param position The position of the object we are targeting.\n     */\n\n    public setObjectTarget(position: Coordinate): void {\n        /**\n         * All we are doing is mimicking the `setTarget` entity\n         * parameter. But we are throwing in an extra.\n         */\n\n        let character = new Character(\n            `${position.gridX}-${position.gridY}`,\n            Modules.EntityType.Object,\n            this.game\n        );\n        character.setGridPosition(position.gridX, position.gridY);\n\n        this.setTarget(character);\n        this.followPosition(position.gridX, position.gridY);\n    }\n\n    /**\n     * Sets the hitpoints values onto the character.\n     * @param hitPoints The new hitpoints value we are setting.\n     * @param maxHitPoints Optional parameter if we wish to update the max hitpoints.\n     */\n\n    public setHitPoints(hitPoints: number, maxHitPoints?: number): void {\n        let decrease = false;\n\n        // Clamp the hitpoints to 0.\n        if (hitPoints < 0) hitPoints = 0;\n\n        // Use the decrease value for the callback (used for certain UI special effects).\n        if (hitPoints < this.hitPoints) decrease = true;\n\n        this.hitPoints = hitPoints;\n\n        // Update the max hitPoints if it is specified.\n        if (maxHitPoints) this.maxHitPoints = maxHitPoints;\n\n        // Callback contains the new maxHitPoints if specified, otherwise we use the current one.\n        this.hitPointsCallback?.(this.hitPoints, maxHitPoints || this.maxHitPoints, decrease);\n    }\n\n    /**\n     * Updates the current orientation of the character.\n     */\n\n    public setOrientation(orientation: Modules.Orientation): void {\n        this.orientation = orientation;\n    }\n\n    /**\n     * Iterates through all the attackers in the list and returns them.\n     * @param callback The attacker currently being iterated.\n     */\n\n    public forEachAttacker(callback: (attacker: Character) => void): void {\n        for (let attacker of Object.values(this.attackers)) callback(attacker);\n    }\n\n    /**\n     * Iterates through all the followers in the list and returns them.\n     * @param callback The follower currently being iterated.\n     */\n\n    public forEachFollower(callback: (follower: Character) => void): void {\n        for (let follower of Object.values(this.followers)) callback(follower);\n    }\n\n    /**\n     * Initial action where we request a new position for the character to move to.\n     * @param callback Contains the x and y grid coordinates of the position requested.\n     */\n\n    public onRequestPath(callback: RequestPathingCallback): void {\n        this.requestPathCallback = callback;\n    }\n\n    /**\n     * Starts the pathing process for the character.\n     * @param callback Contains the path to follow.\n     */\n\n    public onStartPathing(callback: StartPathingCallback): void {\n        this.startPathingCallback = callback;\n    }\n\n    /**\n     * Callback for when the pathfinding stops.\n     * @param callback The grid x and y coordinates the player stopped pathing at.\n     */\n\n    public onStopPathing(callback: StopPathingCallback): void {\n        this.stopPathingCallback = callback;\n    }\n\n    /**\n     * Callback done just before the character begins movement to another grid position.\n     */\n\n    public onBeforeStep(callback: () => void): void {\n        this.beforeStepCallback = callback;\n    }\n\n    /**\n     * Callback for when the character moves from one grid position to another.\n     */\n\n    public onStep(callback: () => void): void {\n        this.stepCallback = callback;\n    }\n\n    /**\n     * Callback for every two grid positions the character moves across.\n     */\n\n    public onSecondStep(callback: () => void): void {\n        this.secondStepCallback = callback;\n    }\n\n    /**\n     * Callback for when a character moves one absolute unit (pixel).\n     */\n\n    public onMove(callback: () => void): void {\n        this.moveCallback = callback;\n    }\n\n    /**\n     * Callback for when hitpoints undergo a change.\n     * @param callback Contains the new hitpoints and the max hitpoints.\n     */\n\n    public onHitPoints(callback: HitPointsCallback): void {\n        this.hitPointsCallback = callback;\n    }\n\n    /**\n     * Callback for when we want to perform a fallback for entity movement.\n     * @param callback Contains the x and y coordinates to teleport the entity to.\n     */\n\n    public onFallback(callback: FallbackCallback): void {\n        this.fallbackCallback = callback;\n    }\n}\n","import Character from '../character';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Game from '../../../game';\n\nexport default class Mob extends Character {\n    public hiddenName = false;\n\n    public constructor(instance: string, game: Game) {\n        super(instance, Modules.EntityType.Mob, game);\n    }\n\n    public override hasShadow(): boolean {\n        return !this.hiddenName;\n    }\n\n    public override drawNames(): boolean {\n        return !this.hiddenName;\n    }\n}\n","import Entity from '../entity';\n\nimport { Modules } from '@kaetram/common/network';\n\nexport default class NPC extends Entity {\n    public constructor(instance: string) {\n        super(instance, Modules.EntityType.NPC);\n    }\n\n    /**\n     * Sets the idling state for the NPC.\n     */\n\n    public override idle(): void {\n        this.setAnimation('idle_down', this.sprite.idleSpeed);\n    }\n}\n","/**\n * A task represents a quest or an achievement object. The only difference\n * in serialized client data between those two is that a quest contains\n * a sub stage variable.\n */\n\nexport default class Task {\n    public secret = false; // Whether or not the task is a secret task.\n\n    public constructor(\n        public id: number,\n        public name: string,\n        public description: string,\n        public stage = 1,\n        public stageCount = 1,\n        public subStage?: number,\n        public rewards?: string[]\n    ) {}\n\n    /**\n     * Updates the stage and sub stage data for the task.\n     * @param stage New stage we are setting the task to.\n     * @param subStage New subStage we are setting the task to.\n     * @param name New name we are setting the task to (used for achievements).\n     * @param description New description we are setting the task to (used for hidden achievements).\n     */\n\n    public update(stage: number, subStage?: number, name?: string, description?: string): void {\n        this.stage = stage;\n\n        if (subStage) this.subStage = subStage;\n        if (name) this.name = name; // For achievements when they're discovered.\n        if (description) this.description = description; // For hidden achievements.\n    }\n\n    /**\n     * A task is deemed complete when the current stage\n     * we are on is equal or larger to total amount of stages.\n     * @returns If stage is equal or larger to total amount of stages.\n     */\n\n    public isFinished(): boolean {\n        return this.stage >= this.stageCount;\n    }\n\n    /**\n     * @returns Whether the task's stage is above 0, meaning task\n     * has been started.\n     */\n\n    public isStarted(): boolean {\n        return this.stage > 0;\n    }\n}\n","import { Modules } from '@kaetram/common/network';\n\nexport default class Skill {\n    public name: string;\n    public percentage = 0;\n    public nextExperience = 0;\n\n    public constructor(public type: Modules.Skills, public experience = 0, public level = 1) {\n        this.name = Modules.Skills[type];\n    }\n\n    /**\n     * Updates the current skill's experience and level.\n     * @param experience Experience we are updating to.\n     * @param level Level we are updating to.\n     */\n\n    public update(\n        experience: number,\n        nextExperience: number,\n        level: number,\n        percentage: number\n    ): void {\n        this.experience = experience;\n        this.nextExperience = nextExperience;\n        this.level = level || this.level;\n        this.percentage = percentage || 0;\n    }\n}\n","import type { Modules } from '@kaetram/common/network';\n\nexport default class Ability {\n    public active = false;\n\n    public constructor(\n        public type: Modules.AbilityType,\n        public key: string,\n        public level: number,\n        public quickSlot = -1\n    ) {}\n\n    /**\n     * Updates the ability information.\n     * @param level New level to set the ability to.\n     */\n\n    public update(level: number, quickSlot = this.quickSlot): void {\n        this.level = level;\n        this.quickSlot = quickSlot;\n    }\n\n    /**\n     * Updates the active status of the ability.\n     */\n\n    public toggle(): void {\n        this.active = !this.active;\n    }\n}\n","export default class Friend {\n    public constructor(\n        public id: number,\n        public username: string,\n        public online: boolean,\n        public serverId: number\n    ) {}\n}\n","import Util from '../../../../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { Bonuses, Enchantments, Stats } from '@kaetram/common/types/item';\n\nexport default abstract class Equipment {\n    public attackStats: Stats = Util.getEmptyStats();\n    public defenseStats: Stats = Util.getEmptyStats();\n    public bonuses: Bonuses = Util.getEmptyBonuses();\n\n    public attackStyle: Modules.AttackStyle = Modules.AttackStyle.None;\n    public attackStyles: Modules.AttackStyle[] = [];\n\n    public constructor(\n        public key = '',\n        public name = '',\n        public count = -1,\n        public enchantments: Enchantments = {}\n    ) {}\n\n    /**\n     * An update function that is called when the equipment is equipped.\n     * The function can be called with no parameters when the equipment is unequipped.\n     * @param key The key of the item.\n     * @param name The visual name of the item (the one the player sees).\n     * @param count The amount of items in the equipment (if it is stackable).\n     * @param enchantments The enchantments of the item.\n     * @param ranged Whether or not the item is ranged.\n     * @param attackStats The attack stats of the item.\n     * @param defenseStats The defense stats of the item.\n     * @param bonuses The bonuses of the item.\n     * @param attackStyle The attack style the weapon is using.\n     * @param attackStyles The list of attack styles the weapon is using.\n     */\n\n    public update(\n        key = '',\n        name = '',\n        count = -1,\n        enchantments: Enchantments = {},\n        attackStats?: Stats,\n        defenseStats?: Stats,\n        bonuses?: Bonuses,\n        attackStyle = Modules.AttackStyle.None,\n        attackStyles: Modules.AttackStyle[] = []\n    ): void {\n        this.key = key;\n        this.name = name;\n        this.count = count;\n        this.enchantments = enchantments;\n\n        // Add the stats and bonuses only if they exist.\n        this.attackStats = attackStats || Util.getEmptyStats();\n        this.defenseStats = defenseStats || Util.getEmptyStats();\n        this.bonuses = bonuses || Util.getEmptyBonuses();\n\n        // Attack styles are optional parameters for the weapon.\n        this.attackStyle = attackStyle;\n        this.attackStyles = attackStyles;\n    }\n\n    /**\n     * A check for whether or not the item is equipped.\n     * @returns Whether the key is an empty string or not.\n     */\n\n    public exists(): boolean {\n        return this.key !== '';\n    }\n}\n","import Equipment from './equipment';\n\nimport type { Bonuses, Enchantments, Stats } from '@kaetram/common/types/item';\n\nexport default class Armour extends Equipment {\n    public constructor(\n        key = 'clotharmor',\n        name = 'Cloth Armor',\n        count = -1,\n        enchantments: Enchantments = {}\n    ) {\n        super(key, name, count, enchantments);\n    }\n\n    /**\n     * An override for the superclass where we specify\n     * the default parameters for the key and name of the armour.\n     * This will be removed once the paper-doll system\n     * is improved to use a base character properly.\n     */\n\n    public override update(\n        key = 'clotharmor',\n        name = 'Cloth Armor',\n        count = -1,\n        enchantments: Enchantments = {},\n        attackStats?: Stats,\n        defenseStats?: Stats,\n        bonuses?: Bonuses\n    ): void {\n        super.update(key, name, count, enchantments, attackStats, defenseStats, bonuses);\n    }\n}\n","import Equipment from './equipment';\n\nexport default class ArmourSkin extends Equipment {}\n","import Equipment from './equipment';\n\nexport default class Boots extends Equipment {}\n","import Equipment from './equipment';\n\nexport default class Pendant extends Equipment {}\n","import Equipment from './equipment';\n\nexport default class Ring extends Equipment {}\n","import Equipment from './equipment';\n\nexport default class Weapon extends Equipment {}\n","import Equipment from './equipment';\n\nexport default class WeaponSkin extends Equipment {}\n","import Equipment from './equipment';\n\nexport default class Arrows extends Equipment {}\n","import Task from './task';\nimport Skill from './skill';\nimport Ability from './ability';\nimport Friend from './friend';\nimport Armour from './equipment/armour';\nimport ArmourSkin from './equipment/armourskin';\nimport Boots from './equipment/boots';\nimport Pendant from './equipment/pendant';\nimport Ring from './equipment/ring';\nimport Weapon from './equipment/weapon';\nimport WeaponSkin from './equipment/weaponskin';\nimport Arrows from './equipment/arrows';\n\nimport Character from '../character';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { GuildPacket } from '@kaetram/common/types/messages/outgoing';\nimport type Game from '../../../game';\nimport type { AchievementData } from '@kaetram/common/types/achievement';\nimport type { EquipmentData } from '@kaetram/common/types/equipment';\nimport type { PlayerData } from '@kaetram/common/types/player';\nimport type { SkillData } from '@kaetram/common/types/skills';\nimport type { QuestData } from '@kaetram/common/types/quest';\nimport type { AbilityData } from '@kaetram/common/types/ability';\nimport type { Friend as FriendType } from '@kaetram/common/types/friends';\nimport type { GuildData, Member } from '@kaetram/common/types/guild';\n\ntype AbilityCallback = (key: string, level: number, quickSlot: number) => void;\ntype PoisonCallback = (status: boolean) => void;\ntype ManaCallback = (mana: number, maxMana: number) => void;\n\nexport default class Player extends Character {\n    public rank: Modules.Ranks = Modules.Ranks.None;\n    public wanted = false;\n\n    public serverId = -1;\n\n    public pvpKills = -1;\n    public pvpDeaths = -1;\n\n    public moveLeft = false;\n    public moveRight = false;\n    public moveUp = false;\n    public moveDown = false;\n\n    public poison = false;\n    public disableAction = false;\n\n    public medal: Modules.Medals = Modules.Medals.None;\n\n    public guild!: Partial<GuildData> | undefined;\n\n    public override hitPoints = 0;\n    public override maxHitPoints = 0;\n\n    public override mana = 0;\n    public override maxMana = 0;\n\n    // Mapping of all equipments to their type.\n    public equipments = {\n        [Modules.Equipment.Armour]: new Armour(),\n        [Modules.Equipment.ArmourSkin]: new ArmourSkin(),\n        [Modules.Equipment.Boots]: new Boots(),\n        [Modules.Equipment.Pendant]: new Pendant(),\n        [Modules.Equipment.Ring]: new Ring(),\n        [Modules.Equipment.Weapon]: new Weapon(),\n        [Modules.Equipment.WeaponSkin]: new WeaponSkin(),\n        [Modules.Equipment.Arrows]: new Arrows()\n    };\n\n    public skills: { [key: number]: Skill } = {};\n    public abilities: { [key: string]: Ability } = {};\n    public quests: { [key: string]: Task } = {};\n    public achievements: { [key: string]: Task } = {};\n    public friends: { [key: string]: Friend } = {};\n\n    private syncCallback?: () => void;\n    private poisonCallback?: PoisonCallback;\n    private abilityCallback?: AbilityCallback;\n    private manaCallback?: ManaCallback;\n\n    public constructor(instance: string, game: Game) {\n        super(instance, Modules.EntityType.Player, game);\n    }\n\n    /**\n     * Loads the player based on the serialzied player\n     * data sent from the server.\n     * @param data Player data containing essentials.\n     * @param sync Whether to sync the player.\n     */\n\n    public load(data: PlayerData, sync = false): void {\n        this.instance = data.instance;\n        this.name = data.name;\n        this.level = data.level!;\n        this.movementSpeed = data.movementSpeed!;\n        this.orientation = data.orientation!;\n        this.attackRange = data.attackRange!;\n\n        if (data.displayInfo) this.nameColour = data.displayInfo.colour!;\n\n        this.setRank(data.rank);\n        this.setOrientation(data.orientation);\n\n        if (!sync) this.setGridPosition(data.x, data.y);\n\n        this.setHitPoints(data.hitPoints!, data.maxHitPoints);\n\n        this.setMana(data.mana!, data.maxMana);\n\n        if (data.equipments) for (let equipment of data.equipments) this.equip(equipment);\n    }\n\n    /**\n     * Loads a batch of skills into the player's skill list.\n     * @param skills Contains skill type, experience, and level\n     * for each skill we are loading.\n     */\n\n    public loadSkills(skills: SkillData[]): void {\n        for (let skill of skills) this.setSkill(skill);\n    }\n\n    /**\n     * Loads batch of quest data from the server and inserts\n     * it into the list of quests stored for the player.\n     * @param quests An array of elements each containing quest info.\n     */\n\n    public loadQuests(quests: QuestData[]): void {\n        for (let [i, quest] of quests.entries())\n            this.quests[quest.key] = new Task(\n                i,\n                quest.name!,\n                quest.description!,\n                quest.stage,\n                quest.stageCount!,\n                quest.subStage,\n                quest.rewards\n            );\n    }\n\n    /**\n     * Parses through the array data containing achievement information\n     * and creates an object for each key as well as inserting preliminary data.\n     * @param achievements Array containing information about each achievement.\n     */\n\n    public loadAchievements(achievements: AchievementData[]): void {\n        for (let i in achievements) {\n            let achievement = achievements[i],\n                task = new Task(\n                    parseInt(i),\n                    achievement.name!,\n                    achievement.description!,\n                    achievement.stage,\n                    achievement.stageCount!\n                );\n\n            // Secret tasks are displayed slightly different.\n            if (achievement.secret) task.secret = true;\n\n            this.achievements[achievement.key] = task;\n        }\n    }\n\n    /**\n     * Parses through the serialized ability data and creates a new ability object.\n     * @param abilities List of abilities received from the server.\n     */\n\n    public loadAbilities(abilities: AbilityData[]): void {\n        for (let ability of abilities)\n            this.setAbility(ability.key, ability.level, ability.type, ability.quickSlot);\n    }\n\n    /**\n     * Loads the friend list from the server into the client.\n     * @param friends Contains information about friend usernames and their online status.\n     */\n\n    public loadFriends(friends: FriendType): void {\n        let i = 0;\n\n        for (let username in friends) {\n            let info = friends[username];\n\n            this.friends[username] = new Friend(i, username, info.online, info.serverId);\n\n            i++;\n        }\n    }\n\n    /**\n     * Equips the item based on the equipment type.\n     * @param equipment Contains data about the equipment such as\n     * type, name, count, ability, etc.\n     */\n\n    public equip(equipment: EquipmentData): void {\n        let {\n            type,\n            name,\n            key,\n            count,\n            enchantments,\n            attackRange,\n            attackStats,\n            defenseStats,\n            bonuses,\n            attackStyle,\n            attackStyles\n        } = equipment;\n\n        if (!key) return this.unequip(type);\n\n        this.equipments[type].update(\n            key,\n            name,\n            count,\n            enchantments,\n            attackStats,\n            defenseStats,\n            bonuses\n        );\n\n        // Updates the weapon attack range and attack style.\n        if (type === Modules.Equipment.Weapon) {\n            this.attackRange = attackRange || 1;\n            this.setAttackStyle(attackStyle!, attackStyles!);\n        }\n    }\n\n    /**\n     * Adds a new friend to the list.\n     * @param username The username of the friend.\n     * @param status Whether the friend is online or not.\n     */\n\n    public addFriend(username: string, status: boolean, serverId: number): void {\n        this.friends[username] = new Friend(\n            Object.keys(this.friends).length,\n            username,\n            status,\n            serverId\n        );\n    }\n\n    /**\n     * Calls an empty update() function onto the equipment slot\n     * and resets it.\n     * @param type Which equipment slot we are resetting.\n     * @param count Optional parameter to remove a certain amount of items.\n     */\n\n    public unequip(type: Modules.Equipment, count = -1): void {\n        // Decrement count if provided, otherwise reset the equipment slot.\n        if (count > 0) this.equipments[type].count = count;\n        else this.equipments[type].update();\n    }\n\n    /**\n     * Signals to the callbacks that the player's data (experience, level, equipment)\n     * has undergone a change. This updates the UI essentially.\n     */\n\n    public sync(): void {\n        this.syncCallback?.();\n    }\n\n    /**\n     * @returns The key of the currently equipped armour.\n     */\n\n    public getSpriteName(): string {\n        // Use the armour skin if it exists.\n        if (this.equipments[Modules.Equipment.ArmourSkin].key)\n            return this.equipments[Modules.Equipment.ArmourSkin].key;\n\n        return this.equipments[Modules.Equipment.Armour].key;\n    }\n\n    /**\n     * @returns The key of the currently equipped weapon.\n     */\n\n    public getWeaponSpriteName(): string {\n        // Use the weapon skin if it exists.\n        if (this.equipments[Modules.Equipment.WeaponSkin].key)\n            return this.equipments[Modules.Equipment.WeaponSkin].key;\n\n        return this.equipments[Modules.Equipment.Weapon].key;\n    }\n\n    /**\n     * @returns The armour object of the player.\n     */\n\n    public getArmour(): Armour {\n        return this.equipments[Modules.Equipment.Armour];\n    }\n\n    /**\n     * @returns The armour skin object of the player.\n     */\n\n    public getArmourSkin(): ArmourSkin {\n        return this.equipments[Modules.Equipment.ArmourSkin];\n    }\n\n    /**\n     * @returns The boots object of the player.\n     */\n\n    public getBoots(): Boots {\n        return this.equipments[Modules.Equipment.Boots];\n    }\n\n    /**\n     * @returns The arrows object of the player.\n     */\n\n    public getArrows(): Arrows {\n        return this.equipments[Modules.Equipment.Arrows];\n    }\n\n    /**\n     * @returns The pendant object of the player.\n     */\n\n    public getPendant(): Pendant {\n        return this.equipments[Modules.Equipment.Pendant];\n    }\n\n    /**\n     * @returns The ring object of the player.\n     */\n\n    public getRing(): Ring {\n        return this.equipments[Modules.Equipment.Ring];\n    }\n\n    /**\n     * @returns The weapon object of the player.\n     */\n\n    public getWeapon(): Weapon {\n        return this.equipments[Modules.Equipment.Weapon];\n    }\n\n    /**\n     * @returns The weapon skin object of the player.\n     */\n\n    public getWeaponSkin(): WeaponSkin {\n        return this.equipments[Modules.Equipment.WeaponSkin];\n    }\n\n    /**\n     * @returns Whether the player has the administrator rank.\n     */\n\n    public override isAdmin(): boolean {\n        return this.rank === Modules.Ranks.Admin || this.rank === Modules.Ranks.HollowAdmin;\n    }\n\n    /**\n     * @returns Whether the player has the moderator rank.\n     */\n\n    public override isModerator(): boolean {\n        return this.rank === Modules.Ranks.Moderator;\n    }\n\n    /**\n     * Adds up the experience from every skill and returns the total.\n     * @returns Integer value of the total experience.\n     */\n\n    public getTotalExperience(): number {\n        let total = 0;\n\n        for (let skill of Object.values(this.skills)) total += skill.experience;\n\n        return total;\n    }\n\n    /**\n     * @returns The key of the medal based on the player's medal type.\n     */\n\n    public getMedalKey(): string {\n        switch (this.medal) {\n            case Modules.Medals.Silver: {\n                return 'silvermedal';\n            }\n\n            case Modules.Medals.Gold: {\n                return 'goldmedal';\n            }\n\n            case Modules.Medals.Artist: {\n                return 'crown-artist';\n            }\n\n            case Modules.Medals.Tier1: {\n                return 'crown-tier1';\n            }\n\n            case Modules.Medals.Tier2: {\n                return 'crown-tier2';\n            }\n\n            case Modules.Medals.Tier3: {\n                return 'crown-tier3';\n            }\n\n            case Modules.Medals.Tier4: {\n                return 'crown-tier4';\n            }\n\n            case Modules.Medals.Tier5: {\n                return 'crown-tier5';\n            }\n\n            case Modules.Medals.Tier6: {\n                return 'crown-tier6';\n            }\n\n            case Modules.Medals.Tier7: {\n                return 'crown-tier7';\n            }\n\n            default: {\n                return '';\n            }\n        }\n    }\n\n    /**\n     * Returns a medal based on the player's rank.\n     * @returns The medal type for the player's rank.\n     */\n\n    private getRankMedal(): Modules.Medals {\n        switch (this.rank) {\n            case Modules.Ranks.Artist: {\n                return Modules.Medals.Artist;\n            }\n\n            case Modules.Ranks.TierOne: {\n                return Modules.Medals.Tier1;\n            }\n\n            case Modules.Ranks.TierTwo: {\n                return Modules.Medals.Tier2;\n            }\n\n            case Modules.Ranks.TierThree: {\n                return Modules.Medals.Tier3;\n            }\n\n            case Modules.Ranks.TierFour: {\n                return Modules.Medals.Tier4;\n            }\n\n            case Modules.Ranks.TierFive: {\n                return Modules.Medals.Tier5;\n            }\n\n            case Modules.Ranks.TierSix: {\n                return Modules.Medals.Tier6;\n            }\n\n            case Modules.Ranks.TierSeven: {\n                return Modules.Medals.Tier7;\n            }\n\n            default: {\n                return Modules.Medals.None;\n            }\n        }\n    }\n\n    /**\n     * Updates the mana of the player.\n     * @param mana The current amount of mana.\n     * @param maxMana Optional parameter for the max mana.\n     */\n\n    public setMana(mana: number, maxMana?: number): void {\n        this.mana = mana;\n\n        if (maxMana) this.maxMana = maxMana;\n\n        this.manaCallback?.(this.mana, maxMana || this.maxMana);\n    }\n\n    /**\n     * Updates the experience of the skill or create a new one first if it doesn't exist.\n     * @param arg0 Contains skill data such as type, experience, level, etc.\n     */\n\n    public setSkill({ type, experience, level, percentage, nextExperience }: SkillData): void {\n        if (!this.skills[type]) this.skills[type] = new Skill(type);\n\n        this.skills[type as Modules.Skills].update(\n            experience,\n            nextExperience!,\n            level!,\n            percentage!\n        );\n    }\n\n    /**\n     * Updates data of the quest based on the key provided with the new stage and\n     * substage information.\n     * @param key The key of the quest we are updating.\n     * @param stage The new stage of the quest.\n     * @param subStage The new substage of the quest.\n     */\n\n    public setQuest(key: string, stage: number, subStage: number): void {\n        this.quests[key]?.update(stage, subStage);\n    }\n\n    /**\n     * Updates data about an achievement using the provided key.\n     * @param key The key of the achievement we are updating.\n     * @param stage The new stage of the achievement.\n     * @param name The name of the achievement.\n     * @param description The description of the achievement.\n     */\n\n    public setAchievement(key: string, stage: number, name: string, description: string): void {\n        // Secret achievements that are not loaded initially.\n        if (!(key in this.achievements)) {\n            let task = new Task(Object.keys(this.achievements).length - 1, name, description);\n\n            // Only secret achievements are created this way.\n            task.secret = true;\n\n            this.achievements[key] = task;\n\n            return;\n        }\n\n        this.achievements[key]?.update(stage, undefined, name, description);\n    }\n\n    /**\n     * Updates an ability's key and level.\n     * @param key The key of the ability we are updating.\n     * @param level The level of the ability.\n     * @param type Optional parameter passed when we are creating a new ability.\n     * @param quickSlot The id of the quickslot the ability is in.\n     */\n\n    public setAbility(\n        key: string,\n        level: number,\n        type?: Modules.AbilityType,\n        quickSlot = -1\n    ): void {\n        // This function is used when adding abilities for the first time too.\n        if (key in this.abilities) this.abilities[key]?.update(level, quickSlot);\n        else this.abilities[key] = new Ability(type!, key, level, quickSlot);\n\n        // If any active ability is detected then we create a callback to display the quick slots.\n        if (type === Modules.AbilityType.Active || quickSlot !== -1)\n            this.abilityCallback?.(key, level, quickSlot);\n    }\n\n    /**\n     * Updates the poison status of the player.\n     * @param poison Poison status to update with.\n     */\n\n    public setPoison(poison: boolean): void {\n        this.poison = poison;\n\n        this.poisonCallback?.(poison);\n    }\n\n    /**\n     * Updates the online status of a friend.\n     * @param username The username of the friend we are updating.\n     * @param status The online status of the friend.\n     * @param serverId The server id of the friend.\n     */\n\n    public setFriendStatus(username: string, status: boolean, serverId: number): void {\n        this.friends[username].online = status;\n        this.friends[username].serverId = serverId;\n    }\n\n    /**\n     * Updates the attack styles of the weapon. This occurs when a player already has a weapon\n     * equipped and they change their attack style.\n     * @param style The active attack style of the weapon.\n     * @param styles (Optional) The list of all attack styles of the weapon.\n     */\n\n    public setAttackStyle(style: Modules.AttackStyle, styles?: Modules.AttackStyle[]): void {\n        this.getWeapon().attackStyle = style;\n\n        // May be null when we're swapping attack styles.\n        if (styles) this.getWeapon().attackStyles = styles;\n    }\n\n    /**\n     * Updates the player's rank and synchronizes the medals.\n     * @param rank The new rank of the player.\n     */\n\n    public setRank(rank: Modules.Ranks): void {\n        this.rank = rank;\n        this.medal = this.getRankMedal();\n    }\n\n    /**\n     * Synchronizes the guild connect packet with the player's guild information.\n     * @param packet Contains information about the guild we are updating.\n     */\n\n    public setGuild(packet?: GuildPacket): void {\n        if (!packet) {\n            this.guild = undefined;\n            return;\n        }\n\n        this.guild = {\n            name: packet.name,\n            members: packet.members\n        };\n    }\n\n    /**\n     * Updates the active status of an ability.\n     * @param key The key of the ability we are updating.\n     */\n\n    public toggleAbility(key: string): void {\n        this.abilities[key]?.toggle();\n    }\n\n    /**\n     * @returns If the weapon the player currently wields is a ranged weapon.\n     */\n\n    public isRanged(): boolean {\n        return this.attackRange > 1;\n    }\n\n    /**\n     * @returns Whether or not the player has a ranged-based magic weapon.\n     */\n\n    public isMagic(): boolean {\n        return this.getWeapon().bonuses.magic > 0 && this.isRanged();\n    }\n\n    /**\n     * @returns Whether or not the current weapon's key isn't an empty string.\n     */\n\n    public hasWeapon(): boolean {\n        return this.equipments[Modules.Equipment.Weapon].exists();\n    }\n\n    /**\n     * @returns Whether or not the player has a medal.\n     */\n\n    public override hasMedal(): boolean {\n        return this.medal !== Modules.Medals.None;\n    }\n\n    /**\n     * @returns Checks whether any of the keyboard directional\n     * movement conditionals are true.\n     */\n\n    public hasKeyboardMovement(): boolean {\n        return this.moveLeft || this.moveRight || this.moveUp || this.moveDown;\n    }\n\n    /**\n     * @param username The username of the friend we are checking.\n     * @returns Whether or not the player has a friend with the given username.\n     */\n\n    public hasFriend(username: string): boolean {\n        return username.toLowerCase() in this.friends;\n    }\n\n    /**\n     * Callback for when the poison status undergoes a change.\n     * @param callback Contains information about the current poison status.\n     */\n\n    public onPoison(callback: PoisonCallback): void {\n        this.poisonCallback = callback;\n    }\n\n    /**\n     * Callback for whenever we want to synchronize\n     * the player's data to the UI.\n     */\n\n    public onSync(callback: () => void): void {\n        this.syncCallback = callback;\n    }\n\n    /**\n     * Callback for when an active ability is added and we signal to the\n     * client that we want to display the quick slots menu.\n     */\n\n    public onAbility(callback: AbilityCallback): void {\n        this.abilityCallback = callback;\n    }\n\n    /**\n     * Callback for when the player's mana changes.\n     * @param callback Contains the current mana and max mana.\n     */\n\n    public onMana(callback: ManaCallback): void {\n        this.manaCallback = callback;\n    }\n}\n","import Entity from '../entity';\n\nimport { Modules } from '@kaetram/common/network';\n\nexport default class Chest extends Entity {\n    public constructor(instance: string) {\n        super(instance, Modules.EntityType.Chest);\n    }\n\n    public override idle(): void {\n        this.setAnimation('idle_down', 150);\n    }\n}\n","import Entity from '../entity';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { Enchantments } from '@kaetram/common/types/item';\n\nexport default class Item extends Entity {\n    public dropped = false;\n    public originalY = -1;\n\n    public constructor(\n        instance: string,\n        public count: number = 1,\n        public enchantments: Enchantments = {}\n    ) {\n        super(instance, Modules.EntityType.Item);\n    }\n\n    /**\n     * Override for the `setAnimation` function to handle\n     * bopping up and down when an item is spawned on the ground.\n     */\n\n    public override setAnimation(\n        name: string,\n        speed?: number,\n        count?: number,\n        onEndCount?: (() => void) | undefined\n    ): void {\n        super.setAnimation(name, speed, count, onEndCount);\n\n        if (this.animation!.length > 1) return;\n\n        // Store the original Y offset.\n        this.originalY = this.sprite.offsetY;\n\n        // We use the `onBop` callback to update the sprite's offset.\n        this.animation?.onBop((bopIndex: number) => {\n            this.sprite.offsetY = this.originalY - bopIndex;\n        });\n    }\n\n    public override idle(): void {\n        this.setAnimation('idle', 150);\n    }\n\n    public override hasShadow(): boolean {\n        return true;\n    }\n}\n","import Utils from '../../utils/util';\nimport Entity from '../entity';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Character from '../character/character';\n\nexport default class Projectile extends Entity {\n    public override type = Modules.EntityType.Projectile;\n\n    public speed = 150;\n\n    public override readonly fadingDuration = 100;\n\n    public target!: Character;\n\n    private impactCallback?(): void;\n\n    public constructor(instance: string, public owner: Entity) {\n        super(instance, Modules.EntityType.Projectile);\n    }\n\n    public override idle(): void {\n        this.setAnimation('travel');\n    }\n\n    public impact(): void {\n        this.impactCallback?.();\n    }\n\n    public setStart(x: number, y: number): void {\n        this.setGridPosition(Math.floor(x / Utils.tileSize), Math.floor(y / Utils.tileSize));\n    }\n\n    public setTarget(target: Character): void {\n        this.target = target;\n\n        this.updateAngle();\n    }\n\n    /**\n     * @returns How fast the projectile animation travels between frames (milliseconds)\n     */\n\n    public getAnimationSpeed(): number {\n        return this.sprite.idleSpeed;\n    }\n\n    /**\n     * Used to calculate the projectile's approach towards the target.\n     * @returns Time difference betwene the last update and now.\n     */\n\n    public getTimeDiff(): number {\n        return (Date.now() - this.lastUpdate) / 1000;\n    }\n\n    /**\n     * Impact effect is a special effect that is played when the projectile despawns.\n     * @returns The effect that is played when the projectile impacts the target.\n     */\n\n    public getImpactEffect(): Modules.Effects {\n        switch (this.sprite.key) {\n            case 'projectile-boulder': {\n                return Modules.Effects.Boulder;\n            }\n\n            case 'projectile-poisonball': {\n                return Modules.Effects.Poisonball;\n            }\n\n            case 'projectile-fireball':\n            case 'projectile-gift6': {\n                return Modules.Effects.Fireball;\n            }\n\n            case 'projectile-iceball': {\n                return Modules.Effects.Iceball;\n            }\n\n            case 'projectile-terror': {\n                return Modules.Effects.Terror;\n            }\n        }\n\n        return Modules.Effects.None;\n    }\n\n    /**\n     * Calculates the angle between the projectile and the target.\n     * @returns Angle in radians so that the projectile faces the target.\n     */\n\n    public updateAngle(): void {\n        if (!this.target) return;\n\n        this.angle =\n            Math.atan2(this.target.y - this.y, this.target.x - this.x) * (180 / Math.PI) - 90;\n    }\n\n    public override getAngle(): number {\n        return (this.angle * Math.PI) / 180;\n    }\n\n    /**\n     * Callback for when the projectile impacts the target.\n     */\n\n    public onImpact(callback: () => void): void {\n        this.impactCallback = callback;\n    }\n}\n","import log from '../lib/log';\n\nimport type Entity from '../entity/entity';\nimport type Map from '../map/map';\n\nexport default class Grids {\n    // Grid used for rendering entities.\n    public renderingGrid: { [id: string]: Entity }[][] = [];\n\n    public constructor(private map: Map) {\n        this.load();\n    }\n\n    /**\n     * Loads a rendering grid based on the proportions of the map's\n     * width and height. The rendering grid saves the entities near\n     * the players. We use this grid in order to render them.\n     */\n\n    private load(): void {\n        for (let i = 0; i < this.map.height; i++) {\n            this.renderingGrid[i] = [];\n\n            for (let j = 0; j < this.map.width; j++) this.renderingGrid[i][j] = {};\n        }\n\n        log.debug('Finished generating the rendering grid.');\n    }\n\n    /**\n     * Adds an entity to the rendering grid.\n     * @param entity The entity we are adding to the rendering grid.\n     */\n\n    public addToRenderingGrid(entity: Entity): void {\n        let { instance, gridX: x, gridY: y } = entity;\n\n        // Ensure the position is valid.\n        if (!this.map.isOutOfBounds(x, y)) this.renderingGrid[y][x][instance] = entity;\n    }\n\n    /**\n     * Removes an entity from the rendering grid.\n     * @param entity The entity parameter we are extracting instance, gridX, and gridY from.\n     */\n\n    public removeFromRenderingGrid({ instance, gridX, gridY }: Entity): void {\n        delete this.renderingGrid[gridY][gridX][instance];\n    }\n\n    /**\n     * Looks about a grid coordinate for entities and returns them.\n     * @param gridX The x grid coordinate we are looking around.\n     * @param gridY The y grid coordinate we are looking around.\n     * @param radius How many tiles we are looking around.\n     */\n\n    public getEntitiesAround(gridX: number, gridY: number, radius = 2): Entity[] {\n        let entities: Entity[] = [];\n\n        for (let i = gridY - radius; i < gridY + radius; i++)\n            for (let j = gridX - radius; j < gridX + radius; j++)\n                if (this.map.isOutOfBounds(j, i)) continue;\n                else entities = [...entities, ...Object.values(this.renderingGrid[i][j])];\n\n        return entities;\n    }\n}\n","import Mob from '../entity/character/mob/mob';\nimport NPC from '../entity/npc/npc';\nimport Player from '../entity/character/player/player';\nimport Chest from '../entity/objects/chest';\nimport Item from '../entity/objects/item';\nimport Projectile from '../entity/objects/projectile';\nimport log from '../lib/log';\nimport Grids from '../renderer/grids';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Character from '../entity/character/character';\nimport type { EntityData } from '@kaetram/common/types/entity';\nimport type { PlayerData } from '@kaetram/common/types/player';\nimport type Entity from '../entity/entity';\nimport type Game from '../game';\nimport type SpritesController from './sprites';\n\ninterface EntitiesCollection {\n    [instance: string]: Entity;\n}\n\nexport interface Movable {\n    string: number;\n    characterId: string;\n    targetId: string;\n    attackerId: string;\n    hitType: number;\n}\n\nexport default class EntitiesController {\n    public grids: Grids;\n    public sprites: SpritesController;\n\n    public entities: EntitiesCollection = {};\n    public decrepit: Entity[] = [];\n\n    public constructor(private game: Game) {\n        this.grids = new Grids(game.map);\n        this.sprites = game.sprites;\n\n        game.input.loadCursors();\n    }\n\n    /**\n     * Creates a new entity based on the EntityData object we\n     * received from the server. The entity is created depending\n     * on the type specified. The code following is the base\n     * entity data each entity contains (name, coordinates,\n     * sprite key).\n     * @param info EntityData containing information about an entity.\n     */\n\n    public create(info: EntityData): void {\n        // Don't spawn if we receive our own player data somehow.\n        if (this.isPlayer(info.instance)) return;\n\n        // Entity already exists, don't respawn.\n        if (info.instance in this.entities) return;\n\n        let entity!: Entity;\n\n        switch (info.type) {\n            case Modules.EntityType.Chest: {\n                entity = this.createChest(info.instance);\n                break;\n            }\n\n            case Modules.EntityType.NPC: {\n                entity = this.createNPC(info.instance);\n                break;\n            }\n\n            case Modules.EntityType.Item: {\n                entity = this.createItem(info);\n                break;\n            }\n\n            case Modules.EntityType.Mob: {\n                entity = this.createMob(info);\n                break;\n            }\n\n            case Modules.EntityType.Projectile: {\n                entity = this.createProjectile(info)!;\n                break;\n            }\n\n            case Modules.EntityType.Player: {\n                entity = this.createPlayer(info as PlayerData);\n                break;\n            }\n        }\n\n        // Something went wrong creating the entity.\n        if (!entity) return log.error(`Failed to create entity ${info.instance}`);\n\n        let sprite = this.game.sprites.get(entity.isItem() ? `items/${info.key}` : info.key);\n\n        // Don't add entities that don't have a sprite.\n        if (!sprite) return log.error(`Failed to create sprite for entity ${info.key}.`);\n\n        // The name the player sees for an entity.\n        entity.name = info.name;\n\n        // Server-sided x and y coordinates are the `gridX` and `gridY` client coordinates.\n        entity.setGridPosition(info.x, info.y);\n\n        // Set the sprite and sprite idle speed.\n        entity.setSprite(sprite);\n\n        // Begin the idling animation.\n        entity.idle();\n\n        this.addEntity(entity);\n    }\n\n    /**\n     * Creates a new chest entity with the instance provided.\n     * @param instance The instance of the chest entity.\n     * @returns A new chest object.\n     */\n\n    private createChest(instance: string): Chest {\n        return new Chest(instance);\n    }\n\n    /**\n     * Creates a new NPC object with the instance string provided.\n     * @param instance The instance of the NPC character.\n     * @returns A new NPC object.\n     */\n\n    private createNPC(instance: string): NPC {\n        return new NPC(instance);\n    }\n\n    /**\n     * Creates a new item object with the instance, count, and enchantments.\n     * @param info EntityData object containing item information.\n     * @returns A new item object.\n     */\n\n    private createItem(info: EntityData): Item {\n        return new Item(info.instance, info.count, info.enchantments);\n    }\n\n    /**\n     * Creates a new mob object, sets data such as its health,\n     * attack range, level, etc, and returns that object.\n     * @param info The entity data object containing mob information.\n     * @returns A new mob object.\n     */\n\n    private createMob(info: EntityData): Mob {\n        let mob = new Mob(info.instance, this.game);\n\n        mob.setHitPoints(info.hitPoints!, info.maxHitPoints);\n\n        // Apply the mob-specific properties\n        mob.attackRange = info.attackRange!;\n        mob.level = info.level!;\n        mob.hiddenName = info.hiddenName!;\n        mob.movementSpeed = info.movementSpeed!;\n        mob.orientation = info.orientation!;\n\n        // Set the display info properties directly onto the mob.\n        if (info.displayInfo) {\n            if (info.displayInfo.colour) mob.nameColour = info.displayInfo.colour;\n            if (info.displayInfo.scale) mob.customScale = info.displayInfo.scale;\n        }\n\n        return mob;\n    }\n\n    /**\n     * Creates a projectile based on the provided entity data. The projectile\n     * is a bit special in that it handles callbacks. This function will be further\n     * refactored, and timing for projectile collision will be handled server-sided\n     * instead of relying on the client to detect collision. Client should only\n     * be responsible for rendering. Right now, this could potentially be exploited.\n     * @param info Entity data containing projectile information.\n     * @returns New projectile object.\n     */\n\n    private createProjectile(info: EntityData): Projectile | undefined {\n        let attacker = this.get<Character>(info.ownerInstance!),\n            target = this.get<Character>(info.targetInstance!);\n\n        if (!attacker || !target) return undefined;\n\n        attacker.lookAt(target);\n\n        let projectile = new Projectile(info.instance, attacker);\n\n        projectile.name = info.name;\n\n        projectile.setStart(attacker.x, attacker.y);\n        projectile.setTarget(target);\n\n        projectile.angled = true;\n        projectile.type = info.type;\n\n        /**\n         * Move this into the external overall function\n         */\n\n        projectile.onImpact(() => {\n            /**\n             * Data contained within the projectile is solely for rendering purposes.\n             * The logic is handled in the backend.\n             */\n\n            let impactEffect = projectile.getImpactEffect();\n\n            if (impactEffect !== Modules.Effects.None) target.addEffect(impactEffect);\n\n            this.game.info.create(\n                Modules.Hits.Normal,\n                info.damage!,\n                target.x,\n                target.y,\n                this.isPlayer(target.instance)\n            );\n\n            target.triggerHealthBar();\n\n            this.unregisterPosition(projectile);\n            delete this.entities[projectile.instance];\n        });\n\n        attacker.performAction(attacker.orientation, Modules.Actions.Attack);\n        attacker.triggerHealthBar();\n\n        return projectile;\n    }\n\n    /**\n     * Creates a new player object based on the info provided.\n     * @param info Entity data info to spawn the player.\n     * @returns A new player object.\n     */\n\n    private createPlayer(info: PlayerData): Player {\n        let player = new Player(info.instance, this.game);\n\n        player.load(info);\n\n        player.setSprite(this.game.sprites.get(player.getSpriteName()));\n\n        player.ready = true;\n\n        return player;\n    }\n\n    /**\n     * Checks if the instance provided is the same as the main player.\n     * @param instance The instance we are checking.\n     * @returns If the instance is the same as the main player's instance.\n     */\n\n    private isPlayer(instance: string): boolean {\n        return this.game.player.instance === instance;\n    }\n\n    /**\n     * Gets an entity based on its instance, an entity type\n     * can be specified as long as its a sublcass of Entity.\n     * @param instance The instance of the entity we are looking for.\n     * @returns An entity object or subclass of Entity.\n     */\n\n    public get<E extends Entity>(instance: string): E {\n        return this.entities[instance] as E;\n    }\n\n    /**\n     * Adds an entity to the rendering grid and the list of entities.\n     * We do not render in the fading if the user is on a mobile device.\n     * @param entity The entity object we are adding.\n     */\n\n    public addEntity(entity: Entity): void {\n        this.entities[entity.instance] = entity;\n        this.registerPosition(entity);\n\n        if (!(entity instanceof Item && entity.dropped)) entity.fadeIn(this.game.time);\n    }\n\n    /**\n     * Removes an entity from the rendering grid, and also deletes\n     * it from our entity controller list.\n     * @param entity The entity we are removing.\n     */\n\n    public removeEntity(entity: Entity): void {\n        // Prevent any syncing from happening when the player is removed.\n        if (entity.isPlayer()) entity.ready = false;\n\n        this.unregisterPosition(entity);\n\n        delete this.entities[entity.instance];\n    }\n\n    /**\n     * Removes an item entity from the rendering grid and\n     * deletes it from our controller's list of entities.\n     * @param item The item instance we are removing.\n     */\n\n    public removeItem(item: Entity): void {\n        this.unregisterPosition(item);\n\n        delete this.entities[item.instance];\n    }\n\n    /**\n     * Chests have a special remove method which requires them\n     * to undergo the death animation before being removed.\n     * @param chest Chest we are removing.\n     */\n\n    public removeChest(chest: Chest): void {\n        chest.setSprite(this.game.sprites.getDeath());\n        chest.animateDeath(() => {\n            this.unregisterPosition(chest);\n\n            delete this.entities[chest.instance];\n        });\n    }\n\n    /**\n     * Removes an NPC from the game and plays the death animation.\n     * @param npc The NPC we are removing.\n     */\n\n    public removeNPC(npc: NPC): void {\n        npc.setSprite(this.game.sprites.getDeath());\n        npc.animateDeath(() => {\n            this.unregisterPosition(npc);\n\n            delete this.entities[npc.instance];\n        });\n    }\n\n    /**\n     * Registers an entity's position on the renderin grid.\n     * @param entity The entity we are adding to rendering grid.\n     */\n\n    public registerPosition(entity: Entity): void {\n        this.grids.addToRenderingGrid(entity);\n    }\n\n    /**\n     * Removes an entity from the renderin grid.\n     * @param entity The entity we are removing.\n     */\n\n    public unregisterPosition(entity: Entity): void {\n        this.grids.removeFromRenderingGrid(entity);\n    }\n\n    /**\n     * Decrepit entities are entities that are queued for deletion.\n     * This occurs when we traverse regions and the need to despawn\n     * entities no longer visible becomes necessary.\n     */\n\n    public clean(): void {\n        if (this.decrepit.length === 0) return;\n\n        for (let entity of this.decrepit) {\n            // Prevent cleaning an entity that may have been removed from a different packet.\n            if (!entity) continue;\n\n            this.removeEntity(entity);\n        }\n    }\n\n    /**\n     * Temporary solution (that will probably become permanent because\n     * I have a tendency of forgetting sorry) which removes the name\n     * colour and scaling effect from all entities prior to receiving\n     * new data.\n     */\n\n    public cleanDisplayInfo(): void {\n        for (let entity of Object.values(this.entities)) {\n            entity.nameColour = '';\n            entity.customScale = 0;\n        }\n    }\n\n    /**\n     * Clears all player entities from our list.\n     * @param exception A player type entity that we are excluding from the clear.\n     */\n\n    public clearPlayers(exception: Player): void {\n        for (let entity of Object.values(this.entities))\n            if (entity.isPlayer() && entity.instance !== exception.instance)\n                this.removeEntity(entity);\n    }\n\n    /**\n     * Shortcut for grabbing entity dictionary. Primarily used to increase\n     * readability when accessing the `entities` class. (Prevent .entities.entities)\n     * @returns The entities collection containing all loaded entities.\n     */\n\n    public getAll(): EntitiesCollection {\n        return this.entities;\n    }\n\n    /**\n     * Iterates through all the loaded entities and makes a callback for each one.\n     * @param callback Contains the entity object currently being iterated.\n     */\n\n    public forEachEntity(callback: (entity: Entity) => void): void {\n        for (let entity of Object.values(this.entities)) callback(entity);\n    }\n}\n","import { Modules } from '@kaetram/common/network';\n\ninterface Colour {\n    fill: string;\n    stroke: string;\n    inflicted?: Colour;\n}\n\ninterface Colours {\n    [key: string]: Colour;\n}\n\nexport default class Splat {\n    public opacity = 1;\n\n    private text: string;\n    private prefix: string;\n    private suffix: string;\n    private lastTime: number;\n    private speed: number;\n    private updateY: number;\n    private duration: number;\n    private colour: Colour;\n\n    public fill: string;\n    public stroke: string;\n\n    private destroyCallback?: (id: string) => void;\n\n    public constructor(\n        public id: string,\n        public type: Modules.Hits,\n        public value: number,\n        public x: number,\n        public y: number,\n        isTarget = false,\n        skill = -1\n    ) {\n        this.text = `${value}`;\n        this.prefix = '';\n        this.suffix = '';\n        this.lastTime = 0;\n        this.speed = 100;\n        this.updateY = this.isHeal() ? 2 : 1;\n        this.duration = this.isHeal() ? 400 : 1000;\n        this.colour = (Modules.DamageColours as Colours)[type];\n\n        if (skill > -1) this.colour = (Modules.SkillExpColours as Colours)[skill];\n\n        this.fill = this.colour.fill;\n        this.stroke = this.colour.stroke;\n\n        if (isTarget && this.hasInflicted()) {\n            this.fill = this.colour.inflicted!.fill;\n            this.stroke = this.colour.inflicted!.stroke;\n        }\n\n        // Text gets marked as MISS if this is a damage type and the value is 0.\n        if (this.isDamage() && value < 1) this.text = 'MISS';\n\n        if (this.isPoison() || this.isFreezing()) this.prefix = '--';\n        if (this.isPoints()) this.prefix = '++';\n\n        if (this.isExperience()) {\n            this.prefix = '+';\n            this.suffix = 'EXP';\n        }\n    }\n\n    /**\n     * Updates the current time of the splat.\n     * @param time The game time from the game loop.\n     */\n\n    public update(time: number): void {\n        if (time - this.lastTime > this.speed) {\n            this.y -= this.updateY;\n\n            this.lastTime = time;\n\n            this.opacity -= 70 / this.duration;\n\n            if (this.opacity < 0) this.destroyCallback?.(this.id);\n        }\n    }\n\n    /**\n     * @returns Concatenated text with prefix, text, and suffix.\n     */\n\n    public getText(): string {\n        return `${this.prefix}${this.text} ${this.suffix}`;\n    }\n\n    /**\n     * Checks if the type of the splat is a heal type.\n     * @returns Whether the type equals the enum Heal.\n     */\n\n    private isHeal(): boolean {\n        return this.type === Modules.Hits.Heal;\n    }\n\n    /**\n     * Checks if the splat type is a poison.\n     * @returns Whether the type equals the enum Poison.\n     */\n\n    private isPoison(): boolean {\n        return this.type === Modules.Hits.Poison;\n    }\n\n    /**\n     * Checks whether the hit type is that of cold damage.\n     * @returns Whether or not the splat type is cold.\n     */\n\n    private isFreezing(): boolean {\n        return this.type === Modules.Hits.Freezing;\n    }\n\n    /**\n     * Checks if the splat type is that of experience of profession. We\n     * separate these two since their prefix contains a '+' and suffix a 'EXP';\n     * @returns Whether the type equals the enum Experience or Profession.\n     */\n\n    private isExperience(): boolean {\n        return this.type === Modules.Hits.Experience || this.type === Modules.Hits.Profession;\n    }\n\n    /**\n     * Separate the heal and mana types since their prefix is '++';\n     * @returns Whether the type equals the enum Heal or Mana.\n     */\n\n    private isPoints(): boolean {\n        return this.type === Modules.Hits.Heal || this.type === Modules.Hits.Mana;\n    }\n\n    /**\n     * Damage types are characterized by combat related splats.\n     * When the splat is a damage type, we can replace the text\n     * with `MISS` should the value be undefined or less than 1.\n     * @returns Whether the type of the splat is a damage type.\n     */\n\n    private isDamage(): boolean {\n        return (\n            this.type === Modules.Hits.Normal ||\n            this.type === Modules.Hits.Stun ||\n            this.type === Modules.Hits.Critical\n        );\n    }\n\n    /**\n     * Checks if the current colour hsa a inflicted property.\n     * @returns Whether the inflicted property is defined.\n     */\n\n    private hasInflicted(): boolean {\n        return this.colour.inflicted !== undefined;\n    }\n\n    /**\n     * Callback for when the info is destroyed.\n     * @param callback Callback containing the id of the info.\n     */\n\n    public onDestroy(callback: (id: string) => void): void {\n        this.destroyCallback = callback;\n    }\n}\n","import Splat from '../renderer/infos/splat';\nimport Utils from '../utils/util';\n\nimport type { Modules } from '@kaetram/common/network';\n\nexport default class InfoController {\n    private infos: { [info: string]: Splat } = {};\n\n    /**\n     * Creates a new info splat.\n     * @param type Type of hit we are displaying.\n     * @param amount Number amount we are displaying (e.g. 30 damage).\n     * @param x Absolute x position of the splat.\n     * @param y Absolute y position of the splat.\n     * @param isTarget Whether we are getting hit or we are hitting something.\n     */\n\n    public create(\n        type: Modules.Hits,\n        amount: number,\n        x: number,\n        y: number,\n        isTarget = false,\n        skill = -1,\n        randomize = false\n    ): void {\n        if (randomize) {\n            x += Utils.randomInt(-16, 16);\n            y += Utils.randomInt(-10, 10);\n        }\n\n        let id = Utils.createId(Date.now(), x, y);\n\n        this.addInfo(new Splat(id, type, amount, x, y, isTarget, skill));\n    }\n\n    /**\n     * Adds an info and creates a callback for when\n     * the info is destroyed. When that happens, we\n     * delete the info from our dictionary of infos.\n     * @param info The info we are adding.\n     */\n\n    private addInfo(info: Splat): void {\n        this.infos[info.id] = info;\n\n        info.onDestroy((id) => delete this.infos[id]);\n    }\n\n    /**\n     * @returns True if the number of keys in infos is 0.\n     */\n\n    public isEmpty(): boolean {\n        return Object.keys(this.infos).length === 0;\n    }\n\n    /**\n     * Sends an update to each info object with the current time.\n     * @param time The current game time.\n     */\n\n    public update(time: number): void {\n        this.forEachInfo((info) => info.update(time));\n    }\n\n    /**\n     * Iterates through all the infos in the dictionary.\n     * @param callback Contains the current info being iterated.\n     */\n\n    public forEachInfo(callback: (info: Splat) => void): void {\n        for (let info of Object.values(this.infos)) callback(info);\n    }\n}\n","import Util from '../utils/util';\n\nimport { Packets } from '@kaetram/common/network';\n\nimport type Game from '../game';\n\nexport default class ChatController {\n    private chatBox: HTMLElement = document.querySelector('#chat')!;\n    private log: HTMLElement = document.querySelector('#chat-log')!;\n    private input: HTMLInputElement = document.querySelector('#chat-input')!;\n    private button = document.querySelector('#chat-button')!;\n\n    private readonly fadingDuration = 5000;\n    private fadingTimeout!: number | undefined;\n\n    public constructor(private game: Game) {\n        this.button.addEventListener('click', () => this.toggle());\n\n        this.input.addEventListener('blur', () => this.hide());\n    }\n\n    /**\n     * Handles key input from the handler. Pressing the ENTER\n     * key will trigger the chat input similar to the button.\n     * @param key The key identifier from the JQuery KeyDownEvent.\n     */\n\n    public keyDown(key: string): void {\n        if (key === 'Enter' && this.input.value !== '') return this.send();\n        if (key === 'Escape' || key === 'Enter') this.toggle();\n    }\n\n    /**\n     * Opens the chat box and automatically types the private message command.\n     * This is a temporary solution until we advance the chatbox some more.\n     * @param username The username of the friend we are messaging.\n     */\n\n    public privateMessage(username: string): void {\n        if (this.inputVisible()) return;\n\n        this.toggle();\n\n        this.input.value = `/pm *${username}* `;\n        this.input.focus();\n    }\n\n    /**\n     * Adds an entry to the chat box with the source,\n     * message, and optional colour (defaults to white).\n     * @param source Who is sending the message (username).\n     * @param message The contents of the message being sent.\n     * @param colour Optional parameter for the colour of the message.\n     * @param notify Optional parameter for whether to bold the message.\n     */\n\n    public add(source: string, message: string, colour = '', notify = false): void {\n        let element = this.createElement(source, message);\n\n        element.style.color = colour || 'white';\n        if (notify) element.style.fontWeight = 'bold';\n\n        // Scroll to the bottom of the chat log.\n        this.log.append(element);\n        this.log.scrollTop = this.log.scrollHeight;\n\n        this.displayChatBox();\n\n        // Start the timeout for hiding the chatbox.\n        this.hideChatBox();\n    }\n\n    /**\n     * Creates a chatbox element that we use to append to the chat log.\n     * @param source Who is sending the message, the player's username.\n     * @param message The contents of the message.\n     */\n\n    private createElement(source: string, message: string): HTMLElement {\n        let element = document.createElement('p');\n        element.innerHTML = `${source} » ${message}`;\n\n        return element;\n    }\n\n    /**\n     * Sends a packet to the server with the string\n     * of the chat message in the input field.\n     */\n\n    public send(): void {\n        this.game.socket.send(Packets.Chat, [this.input.value]);\n\n        this.hide();\n    }\n\n    /**\n     * Toggles the chat input and box.\n     * @param text Optional parameter for the text to display in the input field.\n     */\n\n    public toggle(): void {\n        this.clearTimeout();\n\n        if (this.inputVisible()) this.hide();\n        else this.display();\n    }\n\n    /**\n     * Makes the input field for the chat visible.\n     * It also updates the state of the chat button.\n     * @param text Optional parameter for the text to display in the input field.\n     */\n\n    private display(): void {\n        this.button.classList.add('active');\n\n        if (this.inputVisible()) this.input.style.display = 'block';\n        else Util.fadeIn(this.input);\n\n        this.displayChatBox();\n\n        // Fade input in, clear the input field, and focus it.\n        this.input.focus();\n        this.input.value = '';\n\n        this.log.scrollTop = this.log.scrollHeight;\n\n        Util.fadeIn(this.input);\n    }\n\n    /**\n     * Fades in the entire chatbox.\n     */\n\n    private displayChatBox(): void {\n        Util.fadeIn(this.chatBox);\n    }\n\n    /**\n     * Clears the input field and hides it from the view.\n     * It also updates the state of the chat button.\n     */\n\n    private hide(): void {\n        this.button.classList.remove('active');\n\n        this.hideChatBox();\n\n        // Fade input out and clear the input field.\n\n        this.input.blur();\n        this.input.value = '';\n\n        this.log.scrollTop = this.log.scrollHeight;\n\n        Util.fadeOut(this.input);\n    }\n\n    /**\n     * Hides the chatbox after running a timeout for\n     * `fadingDuration` period of time.\n     */\n\n    private hideChatBox(): void {\n        this.clearTimeout();\n\n        this.fadingTimeout = window.setTimeout(() => {\n            if (!this.inputVisible()) Util.fadeOut(this.chatBox);\n        }, this.fadingDuration);\n    }\n\n    /**\n     * Checks if the input element has a visible value.\n     * @returns Whether `:visible` flag is in the HTML element.\n     */\n\n    public inputVisible(): boolean {\n        return this.input.style.display === 'block';\n    }\n\n    /**\n     * Cleans all the chat inputs and hides everything if\n     * the input is visible.\n     */\n\n    public clear(): void {\n        if (this.inputVisible()) this.toggle();\n\n        this.clearTimeout();\n    }\n\n    /**\n     * Clears the fading timeout. The fading timeout represents\n     * the delay before the chat box fades out.\n     */\n\n    public clearTimeout(): void {\n        clearTimeout(this.fadingTimeout);\n        window.clearTimeout(this.fadingTimeout);\n\n        this.fadingTimeout = undefined;\n    }\n}\n","import $ from 'jquery';\n\nimport type Character from '../entity/character/character';\nimport type Entity from '../entity/entity';\nimport type InputController from './input';\n\nexport default class HUDController {\n    private hovering!: Entity | undefined;\n\n    private attackInfo = $('#attack-info');\n\n    private name;\n    private details;\n    private health;\n\n    public updateCallback?: (id: string, data: number) => void;\n\n    public constructor(private input: InputController) {\n        this.name = this.attackInfo.find('.name');\n        this.details = this.attackInfo.find('.details');\n        this.health = this.attackInfo.find('.health');\n\n        this.onUpdate(this.handleUpdate.bind(this));\n    }\n\n    /**\n     * Sets the hovering entity to the entity passed. If no\n     * entity is defined, then we hide the HUD and clear\n     * the hovering entity. If an entity has a health\n     * bar (player or mob) then we display the health bar.\n     */\n\n    public update(entity: Entity | undefined): void {\n        let { name, health, details } = this;\n\n        // Clear the entity and HUD if the entity is undefined.\n        if (!entity || !this.validEntity(entity)) {\n            this.hovering = undefined;\n            return this.hide();\n        }\n\n        // Display if it isn't visible.\n        if (!this.isVisible()) this.display();\n\n        // Sets the hovering entity.\n        this.hovering = entity;\n\n        // Updates the entity name.\n        name.html(entity.name);\n\n        // Check if the entity and set the health bar if it has health.\n        if (this.hasHealth()) this.setHealth((entity as Character).hitPoints);\n        else {\n            health.hide();\n            details.html('');\n        }\n    }\n\n    /**\n     * Checks whether the hovering entity exists and that it\n     * has a health bar. If the instance doesn't match the\n     * current hovering entity, then we don't proceed.\n     * @param instance The instance of the entity we're updating.\n     * @param hitPoints Updates the health bar of the hovering entity.\n     */\n\n    private handleUpdate(instance: string, hitPoints: number): void {\n        if (!this.hasHealth()) return;\n        if (this.hovering!.instance !== instance) return;\n\n        if (hitPoints < 1) this.hide();\n        else this.setHealth(hitPoints);\n    }\n\n    /**\n     * Updates the health bar and the detail info of the HUD.\n     * @param hitPoints The new hitpoints we are updating to.\n     */\n\n    private setHealth(hitPoints: number): void {\n        if (!this.hasHealth()) return;\n\n        this.health.show();\n\n        let { maxHitPoints } = this.hovering as Character;\n\n        this.health.css('width', `${Math.ceil((hitPoints / maxHitPoints) * 100) - 10}%`);\n        this.details.html(`${hitPoints} / ${maxHitPoints}`);\n    }\n\n    /**\n     * Checks whether the entity is valid by ensuring it is not the main\n     * player character or a projectile.\n     * @param entity The entity we are checking.\n     * @returns If the entity is not undefined, its instance isn't the same\n     * as the main player, and that it is not a projectile.\n     */\n\n    private validEntity(entity: Entity): boolean {\n        return entity.instance !== this.input.player.instance && !entity.isProjectile();\n    }\n\n    /**\n     * Checks whether the hovering entity exists. If it does\n     * then it checks if it is a player or a mob entity.\n     * @returns Checks if the hovering entity is a player or mob.\n     */\n\n    private hasHealth(): boolean {\n        if (!this.hovering) return false;\n\n        return this.hovering.isMob() || this.hovering.isPlayer();\n    }\n\n    /**\n     * Displays the HUD.\n     */\n\n    private display(): void {\n        this.attackInfo.fadeIn('fast');\n    }\n\n    /**\n     * Hides the HUD.\n     */\n\n    private hide(): void {\n        this.attackInfo.fadeOut('fast');\n    }\n\n    /**\n     * Checks whether or not the attackInfo is visible.\n     * @returns Whether the `display` property is set to `block`.\n     */\n\n    private isVisible(): boolean {\n        return this.attackInfo.css('display') === 'block';\n    }\n\n    /**\n     * Update to the HUD to update the health bar.\n     * @param callback The instance of the entity and the new data.\n     */\n\n    private onUpdate(callback: (instance: string, data: number) => void): void {\n        this.updateCallback = callback;\n    }\n}\n","import Chat from './chat';\nimport HUDController from './hud';\n\nimport Animation from '../entity/animation';\nimport log from '../lib/log';\nimport { isMobile } from '../utils/detect';\nimport Character from '../entity/character/character';\n\nimport { Modules, Packets, Opcodes } from '@kaetram/common/network';\n\nimport type Interact from '../menu/interact';\nimport type Friends from '../menu/friends';\nimport type Inventory from '../menu/inventory';\nimport type Player from '../entity/character/player/player';\nimport type Entity from '../entity/entity';\nimport type Sprite from '../entity/sprite';\nimport type Game from '../game';\nimport type Camera from '../renderer/camera';\nimport type App from '../app';\nimport type Map from '../map/map';\nimport type Trade from '../menu/trade';\nimport type Leaderboards from '../menu/leaderboards';\nimport type LeaderboardsFooter from '../menu/leaderboards-footer';\nimport type Guilds from '../menu/guilds';\n\ninterface TargetData {\n    sprite: Sprite;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n    dx: number;\n    dy: number;\n    dw: number;\n    dh: number;\n}\n\nexport default class InputController {\n    private app: App;\n    private map: Map;\n    private camera: Camera;\n    public player: Player;\n    private friends: Friends;\n    private interact: Interact;\n    private inventory: Inventory;\n    private trade: Trade;\n    private leaderboards: Leaderboards;\n    private LeaderboardsFooter: LeaderboardsFooter;\n    private guilds: Guilds;\n\n    public selectedCellVisible = false;\n    public keyMovement = false;\n    public targetVisible = true;\n    public selectedX = -1;\n    public selectedY = -1;\n\n    public cursor!: Sprite;\n\n    public targetColour = 'rgba(255, 255, 255, 0.5)';\n\n    private cursors: { [cursor: string]: Sprite } = {};\n    public lastMousePosition: Position = { x: 0, y: 0 };\n\n    public hovering!: Modules.Hovering | null;\n\n    public mouse: Position = { x: 0, y: 0 };\n\n    /**\n     * This is the animation for the target\n     * cell spinner sprite (only on desktop)\n     */\n    public targetAnimation: Animation = new Animation('move', 4, 0, 16, 16);\n    public chatHandler: Chat;\n    public hud: HUDController;\n\n    public entity: Entity | undefined;\n    public interactEntity: Entity | undefined; // Used to store entity while the interact menu is active.\n\n    public constructor(private game: Game) {\n        this.app = game.app;\n        this.map = game.map;\n        this.camera = game.camera;\n        this.player = game.player;\n        this.friends = game.menu.getFriends();\n        this.inventory = game.menu.getInventory();\n        this.interact = game.menu.getInteract();\n        this.trade = game.menu.getTrade();\n        this.leaderboards = game.menu.getLeaderboards();\n        this.LeaderboardsFooter = game.menu.getLeaderboards2()\n        this.guilds = game.menu.getGuilds();\n\n        this.chatHandler = new Chat(game);\n        this.hud = new HUDController(this);\n\n        this.app.onLeftClick(this.handleLeftClick.bind(this));\n        this.app.onRightClick(this.handleRightClick.bind(this));\n\n        this.app.onKeyDown(this.handleKeyDown.bind(this));\n        this.app.onKeyUp(this.handleKeyUp.bind(this));\n\n        //this.app.onKeyDown(this.handle.bind(this));\n        this.app.onMouseMove((event: MouseEvent) => {\n            if (!this.game.started) return;\n\n            this.setCoords(event);\n            this.moveCursor();\n        });\n\n        this.interact.onButton(this.handleInteract.bind(this));\n        this.interact.onClose(() => (this.interactEntity = undefined));\n\n        this.friends.onMessage((username: string) => this.chatHandler.privateMessage(username));\n\n        this.targetAnimation.setSpeed(150);\n    }\n\n    /**\n     * Loads all the cursors one by one and inputs\n     * them in our dictionary of cursors.\n     */\n\n    public loadCursors(): void {\n        this.cursors.hand = this.game.sprites.get('hand');\n        this.cursors.sword = this.game.sprites.get('sword');\n        this.cursors.loot = this.game.sprites.get('loot');\n        this.cursors.target = this.game.sprites.get('target');\n        this.cursors.arrow = this.game.sprites.get('arrow');\n        this.cursors.talk = this.game.sprites.get('talk');\n        this.cursors.spell = this.game.sprites.get('spell');\n        this.cursors.bow = this.game.sprites.get('bow');\n        this.cursors.axe = this.game.sprites.get('axe_cursor');\n        this.cursors.pickaxe = this.game.sprites.get('pickaxe_cursor');\n        this.cursors.cooking = this.game.sprites.get('cooking');\n        this.cursors.fishing = this.game.sprites.get('fishing');\n        this.cursors.smithing = this.game.sprites.get('smithing');\n        this.cursors.crafting = this.game.sprites.get('crafting');\n        this.cursors.foraging = this.game.sprites.get('foraging');\n\n        log.debug('Loaded Cursors!');\n    }\n\n    /**\n     * Handles the input coming from the left click of the mouse.\n     * This is the equivalent to a tap on a mobile device.\n     * @param event DOM event containing click data on the screen.\n     */\n\n    private handleLeftClick(event: MouseEvent): void {\n        this.setCoords(event);\n\n        this.keyMovement = false;\n        this.player.disableAction = false;\n\n        // Admin command for teleporting to a location.\n        if (this.isCtrlKey())\n            return this.game.socket.send(Packets.Command, [\n                Opcodes.Command.CtrlClick,\n                this.getCoords()\n            ]);\n\n        this.move(this.getCoords());\n    }\n\n    /**\n     * A right click is called a ContextMenuEvent. Here we determine\n     * the coordinates of the click, and use that to activate the\n     * action menu at that location.\n     * @param position The position of the press.\n     */\n\n    private handleRightClick(pos: { x: number; y: number }): void {\n        this.setCoords(pos);\n\n        let position = this.getCoords(),\n            entity = this.game.searchForEntityAt(position);\n\n        // Ignore if no entity or the entity is the player.\n        if (!entity || entity.instance === this.player.instance) return this.interact.hide();\n\n        this.interact.show(this.mouse, entity, this.game.pvp);\n\n        this.interactEntity = entity;\n    }\n\n    /**\n     * Input handler for when a key goes down. Note that this only\n     * gets toggled in the event that the key is pressed down, and until\n     * the key is released (key up event) and pressed again, it won't call.\n     * @param event The DOM event containing key information.\n     */\n\n    private handleKeyDown(event: KeyboardEvent): void {\n        if (this.guilds.isVisible()) return this.guilds.keyDown(event.key);\n\n        // Redirect input to the leaderboards handler if the leaderboards are visible.\n        if (this.leaderboards.isVisible()) return this.leaderboards.keyDown(event.key);\n\n        // Redirect input to the leaderboards handler if the leaderboards are visible.\n        if (this.LeaderboardsFooter.isVisible()) return this.LeaderboardsFooter.keyDown(event.key);\n\n        // Redirect input to the trade handler if the trade input is visible.\n        if (this.trade.isInputDialogueVisible()) return this.trade.keyDown(event.key);\n\n        // Redirect input to the inventory handler if the inventory is visible.\n        if (this.inventory.isDropDialogVisible()) return this.inventory.keyDown(event.key);\n\n        // Redirect input to the friends handler if the friends input is visible.\n        if (this.friends.isPopupActive()) return this.friends.keyDown(event.key);\n\n        // Redirect input to the chat handler if the chat input is visible.\n        if (this.chatHandler.inputVisible()) return this.chatHandler.keyDown(event.key);\n\n        let target: Entity;\n\n        switch (event.key) {\n            case 'w':\n            case 'ц':\n            case 'ArrowUp': {\n                this.player.moveUp = true;\n                return;\n            }\n\n            case 'a':\n            case 'ф':\n            case 'ArrowLeft': {\n                this.player.moveLeft = true;\n                return;\n            }\n\n            case 's':\n            case 'ы':\n            case 'ArrowDown': {\n                this.player.moveDown = true;\n                return;\n            }\n\n            case 'd':\n            case 'в':\n            case 'ArrowRight': {\n                this.player.moveRight = true;\n                return;\n            }\n\n            case 'Enter': {\n                this.chatHandler.toggle();\n                return;\n            }\n\n            case 'i': {\n                this.game.menu.getInventory().toggle();\n                return;\n            }\n\n            case 'm': {\n                this.game.menu.getWarp().toggle();\n                return;\n            }\n\n            case 'p': {\n                this.game.menu.getProfile().toggle();\n                return;\n            }\n\n            case 'h': {\n                this.game.menu.getInventory().selectEdible();\n                break;\n            }\n\n            case 't': {\n                target = this.game.entities.get(this.player.lastTarget);\n\n                if (!target) return;\n\n                this.setAttackTarget();\n                this.setPosition(target.gridX, target.gridY);\n\n                this.player.follow(target);\n\n                return;\n            }\n\n            case 'Escape': {\n                this.game.menu.hide();\n\n                if (this.player.moving) this.player.stop();\n                return;\n            }\n\n            case '+':\n            case '=': {\n                return this.game.zoom(0.2);\n            }\n\n            case '-':\n            case '_': {\n                return this.game.zoom(-0.2);\n            }\n\n            case '0':\n            case ')': {\n                this.camera.setZoom();\n\n                return this.game.zoom(0);\n            }\n        }\n    }\n\n    /**\n     * Event handler for when the key is released. This function's\n     * primary purpose is to stop movement when the key is released.\n     * @param event DOM event data containing key information.\n     */\n\n    public handleKeyUp(event: KeyboardEvent): void {\n        switch (event.key) {\n            case 'w':\n            case 'ArrowUp': {\n                this.player.moveUp = false;\n                break;\n            }\n\n            case 'a':\n            case 'ArrowLeft': {\n                this.player.moveLeft = false;\n                break;\n            }\n\n            case 's':\n            case 'ArrowDown': {\n                this.player.moveDown = false;\n                break;\n            }\n\n            case 'd':\n            case 'ArrowRight': {\n                this.player.moveRight = false;\n                break;\n            }\n        }\n\n        this.player.disableAction = false;\n    }\n\n    /**\n     * Receives an interact menu action from the interact handler. We use the entity\n     * in the input to determine the course of action.\n     * @param menuAction Which button in the interact menu was pressed.\n     */\n\n    private handleInteract(menuAction: Modules.MenuActions): void {\n        // No entity to interact with, perhaps this was called with the interact menu closed?\n        if (!this.interactEntity) return;\n\n        switch (menuAction) {\n            case Modules.MenuActions.Attack: {\n                return this.move({\n                    x: this.interactEntity.x,\n                    y: this.interactEntity.y,\n                    gridX: this.interactEntity.gridX,\n                    gridY: this.interactEntity.gridY\n                });\n            }\n\n            case Modules.MenuActions.Trade: {\n                this.game.player.trade(this.interactEntity);\n                break;\n            }\n\n            case Modules.MenuActions.Follow: {\n                if (this.interactEntity instanceof Character)\n                    this.game.player.pursue(this.interactEntity);\n                break;\n            }\n\n            case Modules.MenuActions.Examine: {\n                this.game.socket.send(Packets.Examine, [this.interactEntity.instance]);\n                break;\n            }\n\n            case Modules.MenuActions.AddFriend: {\n                this.game.socket.send(Packets.Friends, {\n                    opcode: Opcodes.Friends.Add,\n                    username: this.interactEntity.name\n                });\n                break;\n            }\n        }\n\n        this.interact.hide();\n    }\n\n    /**\n     * Receives position data from the updater and attempts\n     * to move the player to the specified grid coordinates.\n     * We essentially pass the coordinates through the same\n     * function responsible for targeting movement from a\n     * left click. Note that although the position type is\n     * that of `Position` the x and y values are actually\n     * grid coordinates.\n     * @param position Position object containing player's\n     * requested grid coordinates.\n     */\n\n    public keyMove(position: Coordinate): void {\n        if (this.player.hasPath()) return;\n\n        this.keyMovement = true;\n\n        this.move(position);\n    }\n\n    /**\n     * Function responsible for the movement of the player. If we detect\n     * an entity at the specific position (one that can be targeted or\n     * attacked) we initiate a target action. Otherwise, we just move\n     * the player to the new position and start the pathing.\n     * @param position The grid coordinates of the position we're requesting.\n     */\n\n    private move(position: Coordinate, useSearch = !this.keyMovement): void {\n        if (this.player.stunned || this.player.teleporting) return;\n\n        // Default the target to the passive one.\n        this.setPassiveTarget();\n\n        // Prevent any input when actions are disabled or we are zoning.\n        if (this.player.disableAction || this.game.zoning.direction) return;\n\n        // Prevent input outside map boundaries.\n        if (this.game.map.isOutOfBounds(position.gridX, position.gridY)) return;\n\n        // If chat is open on mobile we automatically toggle it so it gets out of the way.\n        if (isMobile() && this.chatHandler.inputVisible()) this.chatHandler.toggle();\n\n        // Hides all game menus (profile, inventory, warps, etc.)\n        this.game.menu.hide();\n\n        // Handle object interaction.\n        if (this.game.map.isObject(position.gridX, position.gridY))\n            return this.player.setObjectTarget(position);\n\n        // Remove player's targets prior to an action.\n        this.player.removeTarget();\n\n        // Handle NPC interaction.\n        this.entity = this.getEntity(position, useSearch);\n\n        if (this.entity && this.entity.instance !== this.player.instance) {\n            this.setAttackTarget();\n\n            // Set target and follow a targetable entity.\n            if (this.isTargetable(this.entity)) {\n                this.player.follow(this.entity);\n\n                if (this.isAttackable(this.entity))\n                    (this.entity as Character).addAttacker(this.player);\n\n                if (this.player.isRanged())\n                    this.game.socket.send(Packets.Target, [\n                        Opcodes.Target.Attack,\n                        this.entity.instance\n                    ]);\n                return;\n            }\n        }\n\n        // Move the player to the new position.\n        this.player.go(position.gridX, position.gridY);\n    }\n\n    /**\n     * Function every time the cursor moves on the webpage. We essentially\n     * grab the cursor's grid position within the game and check if there\n     * are any entities or objects at that location. We update the cursor\n     * sprite depending on the type of entity or object.\n     */\n\n    public moveCursor(): void {\n        if (isMobile()) return;\n\n        let position = this.getCoords(),\n            entity = this.game.searchForEntityAt(position);\n\n        // Ignore if the entity is our player.\n        if (entity?.instance === this.player.instance) return;\n\n        // The entity we are currently hovering over.\n        this.entity = this.getEntity(position);\n\n        // Update the overlay with entity information.\n        this.hud.update(this.entity);\n\n        if (!this.entity) {\n            /**\n             * Because objects aren't exactly entities, we have a special\n             * case for checking if the hovering coordinates are objects.\n             */\n\n            if (this.map.isObject(position.gridX, position.gridY)) {\n                let cursor = this.map.getTileCursor(position.gridX, position.gridY);\n\n                // Default to the talk if no cursor is specified for the object.\n                this.setCursor(this.cursors[cursor || 'talk']);\n                this.hovering = Modules.Hovering.Object;\n\n                return;\n            }\n\n            // Default to hand cursor when no entities or objects are present.\n            this.setCursor(this.cursors.hand);\n            this.hovering = null;\n\n            return;\n        }\n\n        this.entity.updateSilhouette(true);\n\n        switch (this.entity.type) {\n            case Modules.EntityType.Item:\n            case Modules.EntityType.Chest: {\n                this.setCursor(this.cursors.loot);\n                this.hovering = Modules.Hovering.Item;\n                break;\n            }\n\n            case Modules.EntityType.Mob: {\n                this.setCursor(this.getAttackCursor());\n                this.hovering = Modules.Hovering.Mob;\n                break;\n            }\n\n            case Modules.EntityType.NPC: {\n                this.setCursor(this.cursors.talk);\n                this.hovering = Modules.Hovering.NPC;\n                break;\n            }\n\n            case Modules.EntityType.Player: {\n                if (this.game.pvp) {\n                    this.setCursor(this.getAttackCursor());\n                    this.hovering = Modules.Hovering.Player;\n                }\n                break;\n            }\n        }\n    }\n\n    /**\n     * Handles grabbing the silhouette at the current cursor position.\n     * @param position The position of the cursor.\n     * @param useSearch Whether or not to use the search function.\n     */\n\n    private getEntity(position: Coordinate, useSearch = true): Entity | undefined {\n        let entity = useSearch\n            ? this.game.searchForEntityAt(position)\n            : this.game.getEntityAt(position.gridX, position.gridY);\n\n        // Remove the silhouette from the previous entity.\n        if (this.entity && (!entity || entity.instance !== this.entity.instance))\n            this.entity.updateSilhouette(false);\n\n        return entity;\n    }\n\n    /**\n     * Saves the current mouse position into a position object\n     * to prevent the mouse from rendering if it doesn't move.\n     */\n\n    public saveMouse(): void {\n        this.lastMousePosition.x = this.mouse.x;\n        this.lastMousePosition.y = this.mouse.y;\n    }\n\n    /**\n     * Sets the grid coordinate position of the\n     * currently selected x and y coordinates.\n     * @param x The grid x coordinate.\n     * @param y The grid y coordinate.\n     */\n\n    public setPosition(x: number, y: number): void {\n        this.selectedX = x;\n        this.selectedY = y;\n    }\n\n    /**\n     * Updates the current cursor with the new cursor provided.\n     * @param cursor Sprite of the cursor we are updating our current one with.\n     */\n\n    private setCursor(cursor: Sprite): void {\n        if (cursor) this.cursor = cursor;\n    }\n\n    /**\n     * Sets the animation for the target when requesting a\n     * position to the green spinning square target sprite.\n     */\n\n    public setPassiveTarget(): void {\n        this.targetAnimation.setRow(0);\n    }\n\n    /**\n     * Sets the animation for the target to the red\n     * spinning sprite indicating a target-based\n     * movement is occurring.\n     */\n\n    private setAttackTarget(): void {\n        this.targetAnimation.setRow(1);\n    }\n\n    /**\n     * Updates the mouse's position using the `pageX` and `pageY`\n     * properties contained within the event parameter. Function\n     * also checks if the mouse somehow magically exits the boundaries\n     * of the canvas and binds it to the edge.test\n     * @param event The event object containing the mouse's position.\n     */\n\n    public setCoords(position: { x: number; y: number }): void {\n        let { width, height } = this.game.renderer.background;\n\n        // Set the mouse position to the x and y coordinates within the event.\n        this.mouse.x = position.x;\n        this.mouse.y = position.y;\n\n        // Add horizontal boundaries to the mouse.\n        if (this.mouse.x >= width) this.mouse.x = width - 1;\n        else if (this.mouse.x <= 0) this.mouse.x = 0;\n\n        // Add vertical boundaries to the mouse.\n        if (this.mouse.y >= height) this.mouse.y = height - 1;\n        else if (this.mouse.y <= 0) this.mouse.y = 0;\n    }\n\n    /**\n     * @returns If a player uses a ranged magic weapon we display the spell icon,\n     * if they are using a ranged weapon we display the bow, otherwise a sword.\n     */\n\n    private getAttackCursor(): Sprite {\n        if (this.player.isMagic()) return this.cursors.spell;\n        if (this.player.isRanged()) return this.cursors.bow;\n\n        return this.cursors.sword;\n    }\n\n    /**\n     * Uses the mouse x and y position to calculate the exact grid\n     * coordinate on the screen.\n     * @returns A position object containing the grid coordinates.\n     */\n\n    public getCoords(): Coordinate {\n        let offsetX = this.mouse.x % this.camera.zoomFactor,\n            offsetY = this.mouse.y % this.camera.zoomFactor,\n            x = (this.mouse.x - offsetX) / this.camera.zoomFactor + this.camera.x,\n            y = (this.mouse.y - offsetY) / this.camera.zoomFactor + this.camera.y,\n            gridX = Math.floor(x / this.map.tileSize),\n            gridY = Math.floor(y / this.map.tileSize);\n\n        return { x, y, gridX, gridY };\n    }\n\n    /**\n     * Prepares the target data for the renderer to use.\n     * Though this function would belong more-so in the\n     * renderer, it is best to have it here since target\n     * data is associated with input information.\n     * @returns A TargetData object ready for the renderer.\n     */\n\n    public getTargetData(): TargetData | undefined {\n        let sprite = this.game.sprites.get('target');\n\n        if (!sprite) return;\n\n        let { frame } = this.targetAnimation,\n            { tileSize } = this.game.map,\n            { zoomFactor } = this.game.camera;\n\n        // Load the sprite if it isn't loaded.\n        if (!sprite.loaded) sprite.load();\n\n        return {\n            sprite,\n            x: frame.x,\n            y: frame.y,\n            width: sprite.width,\n            height: sprite.height,\n            dx: this.selectedX * tileSize * zoomFactor,\n            dy: this.selectedY * tileSize * zoomFactor,\n            dw: sprite.width * zoomFactor,\n            dh: sprite.height * zoomFactor\n        };\n    }\n\n    /**\n     * Checks if the CTRL key is currently being held down. This\n     * is generally used for administrators to teleport.\n     * @returns Whether the CTRL key is active in the window.\n     */\n\n    private isCtrlKey(): boolean {\n        return (window.event as MouseEvent).ctrlKey;\n    }\n\n    /**\n     * Targetable entities are those that can be attacked, NPCs, and chests.\n     * @param entity The entity we're comparing.\n     */\n\n    private isTargetable(entity: Entity): boolean {\n        return this.isAttackable(entity) || entity.isNPC() || entity.isChest();\n    }\n\n    /**\n     * An attackable entity is either a mob or a player in a PVP area.\n     * @param entity The entity we are checking.\n     */\n\n    private isAttackable(entity: Entity): boolean {\n        return entity.isMob() || (entity.isPlayer() && this.game.pvp);\n    }\n\n    /**\n     * Checks if the last mouse position equals to that of the\n     * current mouse position. If it is not, then the mouse must\n     * be rendered to update its position on the screen.\n     * @returns Whether the current mouse position is the same\n     * as the old mouse's position.\n     */\n\n    public isMouseRendered(): boolean {\n        return (\n            this.mouse.x === this.lastMousePosition.x && this.mouse.y === this.lastMousePosition.y\n        );\n    }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport log from '../lib/log';\nimport Util from '../utils/util';\n\nexport default abstract class Menu {\n    public hideOnShow = true;\n\n    protected container: HTMLElement;\n    protected close: HTMLElement;\n    protected button: HTMLElement;\n\n    // Callback sent to the controller to close other menus.\n    private showCallback?: () => void;\n\n    /**\n     * Initializes the menu container using the provided container name string.\n     * This one is used to load the body of the interface.\n     * @param containerName Optional string name passed to the constructor that is\n     * used to load the body of the interface using the querySelector. If this is not\n     * provided, it is then expected that the body is overrided and loaded in the subclass.\n     * @param closeButton Optional parameter passed when we want to load a close button\n     * into the interface and load its respective event listener. This is automatically\n     * linked to the hide() function.\n     * @param toggleButton Optional string parameter for the toggle button. These are buttons\n     * that are displayed in the bottom right corner of the screen and are used to open and\n     * close the user interface.\n     */\n\n    public constructor(\n        private containerName?: string,\n        private closeButton?: string,\n        private toggleButton?: string\n    ) {\n        this.container = document.querySelector(this.containerName!)!;\n        this.close = document.querySelector(this.closeButton!)!;\n        this.button = document.querySelector(this.toggleButton!)!;\n\n        this.close?.addEventListener('click', this.hide.bind(this));\n        this.button?.addEventListener('click', this.toggle.bind(this));\n    }\n\n    /**\n     * Called by subclasses when attempting to load batch\n     * serialized data from the server.\n     * @param _data Can contain array of slots to load.\n     */\n\n    public batch(_data: unknown): void {\n        log.debug(`Unimplemented menu batch() function.`);\n    }\n\n    /**\n     * Used to synchronize data betwene the inventory and the UI.\n     * @param _var1 Optional unknown data that may be passed along.\n     */\n\n    public synchronize(_var1?: unknown): void {\n        //log.debug(`Unimplemented menu synchronize() function.`);\n    }\n\n    /**\n     * Called by subclasses when attempting to add an element.\n     * @param _data Unknown data that may contain information about an item.\n     */\n\n    public add(_data: unknown, _data1: unknown, _data2: unknown, data3: unknown): void {\n        log.debug(`Unimplemented menu add() function.`);\n    }\n\n    /**\n     * Called by subclasses when removing an item from slots.\n     * @param _data Unknown data that may contain information to remove an item.\n     */\n\n    public remove(_data: unknown, _data1?: unknown): void {\n        log.debug(`Unimplemented menu remove() function.`);\n    }\n\n    /**\n     * Called by subclasses when we want to display the interface.\n     * @param _var* Unknown data that may be passed when opening the menu subclass.\n     */\n\n    public show(\n        _var1?: unknown,\n        _var2?: unknown,\n        _var3?: unknown,\n        _var4?: unknown,\n        _var5?: unknown,\n        _var6?: unknown\n    ): void {\n        this.showCallback?.();\n\n        this.button?.classList.add('active');\n\n        Util.fadeIn(this.container);\n    }\n\n    /**\n     * Called by subclasses when we want to hide the interface.\n     */\n\n    public hide(): void {\n        this.button?.classList.remove('active');\n\n        Util.fadeOut(this.container);\n    }\n\n    /**\n     * Toggles the visible of the main body element.\n     * If the UI is visible, it hides it, if it's\n     * not visible, then we display it.\n     */\n\n    public toggle(): void {\n        if (this.isVisible()) this.hide();\n        else this.show();\n    }\n\n    /**\n     * Special call for when we are asking the menu\n     * interface to resize. For example, say a notification\n     * is displayed and the screen is resized, we may need\n     * to call this function to the notification object to\n     * update the `top` style position of the notification.\n     */\n\n    public resize(): void {\n        //log.debug(`Unimplemented menu resize() function.`);\n    }\n\n    /**\n     * @returns Whether or not the body is visible.\n     */\n\n    public isVisible(): boolean {\n        return this.container.style.display === 'block';\n    }\n\n    /**\n     * Creates a callback for when the interface is being shown.\n     */\n\n    public onShow(callback: () => void): void {\n        this.showCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport Util from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { Bonuses, Enchantments, Stats } from '@kaetram/common/types/item';\n\nexport default class Actions extends Menu {\n    private page: HTMLElement = document.querySelector('#action-page')!;\n\n    // Contains the list of actions.\n    private list: HTMLUListElement = document.querySelector('#action-page > ul')!;\n\n    // Info about the current action.\n    private name: HTMLElement = document.querySelector('#action-page > .action-item-name')!;\n    private description: HTMLElement = document.querySelector(\n        '#action-page > .action-item-description'\n    )!;\n\n    // Drop dialog elements\n    public dropDialog: HTMLElement = document.querySelector('#action-drop')!;\n    private dropCount: HTMLInputElement = document.querySelector('#action-drop .dialog-count')!;\n    private dropAccept: HTMLElement = document.querySelector('#action-drop .dialog-accept')!;\n    private dropCancel: HTMLElement = document.querySelector('#action-drop .dialog-cancel')!;\n\n    private buttonCallback?: (menuAction: Modules.MenuActions) => void;\n    private dropCallback?: (count: number) => void;\n\n    public constructor() {\n        super('#action-container');\n\n        this.dropCancel.addEventListener('click', this.hideDropDialog.bind(this));\n        this.dropAccept.addEventListener('click', this.handleDrop.bind(this));\n    }\n\n    /**\n     * Handles the click event for the drop dialog.\n     */\n\n    public handleDrop(): void {\n        let count = this.dropCount.valueAsNumber;\n\n        // Reset the input field value\n        this.dropCount.value = '';\n\n        // Hide the drop dialog.\n        this.hideDropDialog();\n\n        // Exit the actions menu dialog\n        this.hide();\n\n        // Send the callback to the inventory handler.\n        this.dropCallback?.(count);\n    }\n\n    /**\n     * Opens the action menu with a specified array of actions. We first clear\n     * all the previous actions and load the new ones in.\n     * @param actions Array of actions to append to our list prior to displaying.\n     * @param name The name of the item that the actions are being performed on.\n     * @param attackStats The attack stats of the item.\n     * @param defenseStats The defense stats of the item.\n     * @param bonuses The bonuses of the item.\n     */\n\n    public override show(\n        actions: Modules.MenuActions[],\n        name: string,\n        attackStats: Stats,\n        defenseStats: Stats,\n        bonuses: Bonuses,\n        enchantments: Enchantments,\n        itemDescription = ''\n    ): void {\n        this.clear();\n\n        for (let action of actions) this.add(action);\n\n        // Update the name of the selected item.\n        this.name.innerHTML = name;\n\n        // Determine whether the description is for objects or items.\n        if (itemDescription) this.description.innerHTML = itemDescription;\n        else {\n            // Clear the description.\n            this.description.innerHTML = '';\n\n            let attack = document.createElement('div'),\n                defense = document.createElement('div'),\n                bonusesDiv = document.createElement('div'),\n                enchantmentsDiv = document.createElement('div');\n\n            // Set the id's of the divs.\n            attack.id = 'action-description-attack';\n            defense.id = 'action-description-defense';\n            bonusesDiv.id = 'action-description-bonuses';\n            enchantmentsDiv.id = 'action-description-enchantments';\n\n            // Apply the attack stats to the attack div.\n            attack.innerHTML = `<u>Attack Stats:</u> <br>\n                Crush: ${attackStats.crush} <br>\n                Slash: ${attackStats.slash} <br>\n                Stab: ${attackStats.stab} <br>\n                Archery: ${attackStats.archery} <br>\n                Magic: ${attackStats.magic} <br>`;\n\n            // Apply the defense stats to the defense div.\n            defense.innerHTML = `<u>Defense Stats:</u> <br>\n                Crush: ${defenseStats.crush} <br>\n                Slash: ${defenseStats.slash} <br>\n                Stab: ${defenseStats.stab} <br>\n                Archery: ${defenseStats.archery} <br>\n                Magic: ${defenseStats.magic} <br>`;\n\n            // Apply the bonuses to the bonuses div.\n            bonusesDiv.innerHTML = `<u>Bonuses:</u> <br>\n                Accuracy: ${bonuses.accuracy} <br>\n                Strength: ${bonuses.strength} <br>\n                Archery: ${bonuses.archery} <br>\n                Magic: ${bonuses.magic} <br>`;\n\n            // If the item has enchantments, apply them to the enchantments div.\n            if (Object.keys(enchantments).length > 0) {\n                // Apply the enchantments to the enchantments div.\n                enchantmentsDiv.innerHTML = `<u>Enchantments:</u> <br>`;\n\n                for (let key in enchantments) {\n                    let enchantment = Modules.Enchantment[key];\n\n                    enchantmentsDiv.innerHTML += `${enchantment}: ${enchantments[key].level} <br>`;\n                }\n            }\n\n            this.description.append(attack, defense, bonusesDiv, enchantmentsDiv);\n        }\n\n        super.show();\n    }\n\n    /**\n     * Implementation of the `hide` superclass where we also hide the\n     * drop dialog upon exiting the actions menu.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        // Hide the drop dialog.\n        this.hideDropDialog();\n    }\n\n    /**\n     * Appends an action element to the list of actions.\n     * @param menuAction Enumeration containing the string text of the action.\n     */\n\n    public override add(menuAction: Modules.MenuActions): void {\n        let element = document.querySelector(`.action-${menuAction}`);\n\n        if (!element) {\n            element = document.createElement('li');\n\n            // Set the type of action to the button element\n            element.classList.add('action-button', `action-${menuAction}`);\n\n            this.list.append(element);\n        }\n\n        // Assign an action when the element is clicked.\n        element.addEventListener('click', (e) => {\n            e.preventDefault();\n\n            this.buttonCallback?.(menuAction);\n        });\n    }\n\n    /**\n     * Hides the description and shows the drop dialog. Also\n     * focuses on the input field for the drop dialog.\n     */\n\n    public showDropDialog(): void {\n        Util.fadeIn(this.dropDialog);\n        Util.fadeOut(this.description);\n\n        this.page.classList.add('dimmed');\n\n        this.dropCount.value = '1';\n        this.dropCount.focus();\n    }\n\n    /**\n     * Hides the drop dialog and brings back the description info.\n     */\n\n    public hideDropDialog(): void {\n        Util.fadeOut(this.dropDialog);\n        Util.fadeIn(this.description);\n\n        this.page.classList.remove('dimmed');\n    }\n\n    /**\n     * Removes all the `div` action elements from the list.\n     */\n\n    private clear(): void {\n        this.list.innerHTML = '';\n    }\n\n    /**\n     * Callback handler for when an action button has been pressed.\n     * @param callback Contains the action that was pressed.\n     */\n\n    public onButton(callback: (menuAction: Modules.MenuActions) => void): void {\n        this.buttonCallback = callback;\n    }\n\n    /**\n     * Callback handler for when the drop dialog has been accepted.\n     * @param callback Contains the number of items to be dropped.\n     */\n\n    public onDrop(callback: (count: number) => void): void {\n        this.dropCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport log from '../lib/log';\nimport Util from '../utils/util';\nimport { onDragDrop } from '../utils/press';\n\nimport { Modules, Opcodes } from '@kaetram/common/network';\n\nimport type Actions from './actions';\nimport type { SlotData } from '@kaetram/common/types/slot';\nimport type { Bonuses, Enchantments, Stats } from '@kaetram/common/types/item';\n\ntype SelectCallback = (index: number, action: Opcodes.Container, value?: number) => void;\ntype BatchCallback = () => void;\n\ninterface SlotElement extends HTMLElement {\n    edible?: boolean;\n    interactable?: boolean;\n    equippable?: boolean;\n\n    name?: string;\n    count?: number;\n    description?: string;\n    attackStats?: Stats;\n    defenseStats?: Stats;\n    bonuses?: Bonuses;\n    enchantments?: Enchantments;\n}\n\nexport default class Inventory extends Menu {\n    private list: HTMLUListElement = document.querySelector('#inventory-container > ul')!;\n\n    // Used for when we open the action menu interface.\n    private selectedSlot = -1;\n\n    private selectCallback?: SelectCallback;\n    private batchCallback?: BatchCallback;\n\n    public constructor(private actions: Actions) {\n        super('#inventory', undefined, '#inventory-button');\n\n        this.load();\n\n        this.actions.onButton((action: Modules.MenuActions) => this.handleAction(action));\n        this.actions.onDrop((count: number) => this.handleDrop(count));\n    }\n\n    /**\n     * Creates an empty inventory of the size defined in the\n     * constants. This may get adapted in the future for potential\n     * dynamic inventory sizes, though it has yet to be decided.\n     */\n\n    public load(): void {\n        if (!this.list) return log.error(`Could not create the skeleton for the inventory.`);\n\n        // Create slots based on the constants.\n        for (let i = 0; i < Modules.Constants.INVENTORY_SIZE; i++)\n            this.list.append(this.createSlot(i));\n    }\n\n    /**\n     * Handles pressing down a key while the dialogue is open. We redirect any keys\n     * from the keyboard into this class when the dialogue is open.\n     * @param key The key that was pressed.\n     */\n\n    public keyDown(key: string): void {\n        switch (key) {\n            case 'Escape': {\n                return this.actions.hideDropDialog();\n            }\n\n            case 'Enter': {\n                return this.actions.handleDrop();\n            }\n        }\n    }\n\n    /**\n     * Creates a select callback using the action parameter specified.\n     * @param menuAction Which type of action is being performed.\n     */\n\n    private handleAction(menuAction: Modules.MenuActions): void {\n        if (menuAction === Modules.MenuActions.DropMany) return this.actions.showDropDialog();\n\n        this.selectCallback?.(Util.getContainerAction(menuAction)!, this.selectedSlot, 1);\n\n        this.actions.hide();\n    }\n\n    /**\n     * Drops an item from the inventory based on the count specified.\n     * @param count The amount of items we are dropping.\n     */\n\n    private handleDrop(count: number): void {\n        return this.selectCallback?.(Opcodes.Container.Remove, this.selectedSlot, count);\n    }\n\n    /**\n     * Loads the batch data into the inventory from the server. Each\n     * slot is selected from the list element.\n     * @param slots Serialized slots received from the server. We take\n     * the index contained within these slots and attribute them\n     * to the index within our slot list.\n     */\n\n    public override batch(slots: SlotData[]): void {\n        for (let slot of slots) {\n            if (!slot.key) continue;\n\n            this.setSlot(slot);\n        }\n\n        this.batchCallback?.();\n    }\n\n    /**\n     * Uses the slot's index to add an item into our inventory UI.\n     * @param slot Contains data about the item we are adding.\n     */\n\n    public override add(slot: SlotData): void {\n        this.setSlot(slot);\n    }\n\n    /**\n     * Removes an item from our inventory and resets the slot to\n     * its default state.\n     * @param slot Contains index of the slot we are removing.\n     */\n\n    public override remove(slot: SlotData): void {\n        this.setSlot(slot);\n    }\n\n    /**\n     * Used for updating the currently selected slot while\n     * the action menu is open.\n     * @param index Index of the slot we are currently selected.\n     */\n\n    private select(index: number, doubleClick = false): void {\n        let element = this.getElement(index);\n\n        // If the slot is empty, we do not want to select it.\n        if (this.isEmpty(element)) return this.actions.hide();\n\n        // Update the currently selected slot.\n        this.selectedSlot = index;\n\n        /**\n         * When we double click, we only determine if the item is edible or\n         * equippable. If any of those properties are true, we skip having\n         * to display the action menu and send the packet.\n         */\n\n        if (doubleClick) {\n            if (element.edible) this.handleAction(Modules.MenuActions.Eat);\n            else if (element.equippable || element.interactable)\n                this.handleAction(Modules.MenuActions.Equip);\n\n            this.actions.hide();\n\n            return;\n        }\n\n        /**\n         * Here we create a list of all the actions pertaining to the slot\n         * based on the equippable and edible properties. This list can always\n         * be expanded as more item properties are added.\n         */\n\n        let actions: Modules.MenuActions[] = [];\n\n        if (element.edible) actions.push(Modules.MenuActions.Eat);\n        if (element.interactable) actions.push(Modules.MenuActions.Eat2);\n        if (element.equippable) actions.push(Modules.MenuActions.Equip);\n\n        // Push drop option as the last one.\n        actions.push(Modules.MenuActions.DropOne);\n\n        if (element.count! > 1) actions.push(Modules.MenuActions.DropMany);\n\n        this.actions.show(\n            actions,\n            element.name!,\n            element.attackStats!,\n            element.defenseStats!,\n            element.bonuses!,\n            element.enchantments!,\n            element.description\n        );\n    }\n\n    /**\n     * Selects the first edible item in the inventory then mimics the\n     * select function as if the player is clicking it. Used for hotkey\n     * functions to quickly heal when in combat.\n     */\n\n    public selectEdible(): void {\n        let index = this.getFirstEdible();\n\n        // No edible items found.\n        if (index === -1) return;\n\n        this.selectedSlot = index;\n\n        this.handleAction(Modules.MenuActions.Eat);\n    }\n\n    /**\n     * Swaps the currently selected slot with the target slot.\n     * @param fromIndex Index of the slot we are swapping from.\n     * @param toIndex Index of the slot we are swapping to.\n     */\n\n    public swap(fromIndex: number, toIndex: number): void {\n        this.selectCallback?.(Opcodes.Container.Swap, fromIndex, toIndex);\n\n        // Reset the selected slot after.\n        this.selectedSlot = -1;\n    }\n\n    /**\n     * Sets the slot's image and count at a specified index. If no key is provided\n     * then we remove the slot's `backgroundImage` property and set the count to\n     * an empty string.\n     * @param slot Contains information about the slot element.\n     */\n\n    private setSlot(slot: SlotData): void {\n        let slotElement = this.getElement(slot.index);\n\n        if (!slotElement) return log.error(`Could not find slot element at: ${slot.index}`);\n\n        let imageElement: HTMLElement = slotElement.querySelector('.item-image')!,\n            countElement = slotElement.querySelector('.item-count');\n\n        if (!imageElement) return log.error(`Could not find image element at: ${slot.index}`);\n\n        if (countElement) countElement.textContent = Util.getCount(slot.count);\n\n        imageElement.style.backgroundImage = slot.key ? Util.getImageURL(slot.key) : '';\n\n        // Set data properties for easy testing (see Cypress best practices)\n        slotElement.dataset.key = slot.key;\n        slotElement.dataset.count = `${slot.count}`;\n\n        // Update the edible and equippable properties.\n        slotElement.edible = slot.edible!;\n        slotElement.interactable = slot.interactable!;\n        slotElement.equippable = slot.equippable!;\n\n        // Add the item stats and name\n        slotElement.name = slot.name!;\n        slotElement.count = slot.count!;\n        slotElement.description = this.formatDescription(slot.name!, slot.count, slot.description!);\n        slotElement.attackStats = slot.attackStats!;\n        slotElement.defenseStats = slot.defenseStats!;\n        slotElement.bonuses = slot.bonuses!;\n        slotElement.enchantments = slot.enchantments!;\n    }\n\n    /**\n     * Creates a slot element using the DOM. The slot is\n     * used when we want to add an item to the invnetory.\n     * @returns A list element containing an empty slot.\n     */\n\n    private createSlot(index: number): HTMLLIElement {\n        let slot = document.createElement('li'),\n            item = document.createElement('div'),\n            image = document.createElement('div'),\n            count = document.createElement('div');\n\n        item.dataset.index = `${index}`;\n\n        item.classList.add('item-slot');\n\n        // Add the item image element onto the slot.\n        image.classList.add('item-image');\n\n        // Add the class element onto the count.\n        count.classList.add('item-count');\n\n        // Append the image onto the item slot.\n        item.append(image);\n\n        // Append the count onto the item slot.\n        item.append(count);\n\n        // Append the item onto the slot list element.\n        slot.append(item);\n\n        // Add the click event listeners to the slot.\n        slot.addEventListener('click', () => this.select(index));\n        slot.addEventListener('dblclick', () => this.select(index, true));\n\n        onDragDrop(item, this.handleHold.bind(this), () => this.isEmpty(this.getElement(index)));\n\n        return slot;\n    }\n\n    private handleHold(clone: HTMLElement, target: HTMLElement): void {\n        let fromIndex = clone?.dataset?.index,\n            toIndex = target?.dataset?.index;\n\n        if (!fromIndex || !toIndex) return;\n\n        this.swap(parseInt(fromIndex), parseInt(toIndex));\n    }\n\n    /**\n     * Sets the body's display style to `none` and\n     * clears all the items from the bank user interface.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        // Reset the selected slot whenever the menu is hidden.\n        this.selectedSlot = -1;\n\n        this.actions.hide();\n    }\n\n    /**\n     * Includes the exact count in the description of an item. Applies for things like\n     * gold, tokens, or large stackable items.\n     * @param name The name of the item\n     * @param count The count of the item\n     * @param description The original description of the item.\n     * @returns String containing the formatted description.\n     */\n\n    private formatDescription(name: string, count: number, description: string): string {\n        return count < 1000\n            ? description\n            : `${description} You have a stack of ${count.toLocaleString(\n                  'en-US'\n              )} ${name.toLowerCase()}. `;\n    }\n\n    /**\n     * Checks whether the specified element is empty by verifying its\n     * background image property.\n     * @param element SlotElement that we are checking.\n     * @returns Whether or not the background image style is an empty string or not.\n     */\n\n    public isEmpty(element: SlotElement): boolean {\n        let image: HTMLElement = element.querySelector('.item-image')!;\n\n        return !image || image.style.backgroundImage === '';\n    }\n\n    /**\n     * @returns Whether or not the actions menu has the drop dialog visible.\n     */\n\n    public isDropDialogVisible(): boolean {\n        return this.actions.dropDialog.style.display === 'block';\n    }\n\n    /**\n     * Grabs the `div` slot element within the `li` element.\n     * @param index The index of the slot we are grabbing.\n     * @returns An HTMLElement for the slot.\n     */\n\n    public getElement(index: number): SlotElement {\n        return this.list.children[index].querySelector('div') as HTMLElement;\n    }\n\n    /**\n     * Returns the number value of the count at a specified index.\n     * @param index The index at which we are grabbing the count.\n     * @returns The number value of the count or 0 if it is not found.\n     */\n\n    public getCount(index: number): number {\n        return this.getElement(index)?.count || 0;\n    }\n\n    /**\n     * Iterates through all the slots and grabs the first edible item\n     * that appears in the inventory returning its index.\n     * @returns The slot index of the first edible item or -1 if none are found.\n     */\n\n    private getFirstEdible(): number {\n        for (let i = 0; i < this.list.children.length; i++) {\n            let slot = this.getElement(i);\n\n            if (slot.edible) return i;\n        }\n\n        return -1;\n    }\n\n    /**\n     * Iterates through all the children of the inventory list\n     * and returns the index and the element.\n     * @param callback Contains the index and the slot HTML element.\n     */\n\n    public forEachSlot(callback: (index: number, slot: SlotElement) => void): void {\n        for (let i = 0; i < this.list.children.length; i++) callback(i, this.getElement(i));\n    }\n\n    /**\n     * Callback for when an item slot element is selected.\n     * @param callback Contains the index of the slot selected.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n\n    /**\n     * Callback for when a batch is loaded\n     */\n\n    public onBatch(callback: BatchCallback): void {\n        this.batchCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport log from '../lib/log';\nimport Util from '../utils/util';\nimport { onDragDrop } from '../utils/press';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { SlotData } from '@kaetram/common/types/slot';\nimport type Inventory from './inventory';\n\ntype SelectCallback = (\n    fromContainer: Modules.ContainerType,\n    fromIndex: number,\n    toContainer: Modules.ContainerType,\n    toIndex?: number\n) => void;\n\nexport default class Bank extends Menu {\n    private bankList: HTMLUListElement = document.querySelector('#bank-slot > ul')!;\n    private inventoryList: HTMLUListElement = document.querySelector('#bank-inventory-slots > ul')!;\n\n    private selectCallback?: SelectCallback;\n\n    public constructor(private inventory: Inventory) {\n        super('#bank', '#close-bank');\n\n        this.load();\n    }\n\n    /**\n     * Loads an empty bank interface with no items but the\n     * bank and inventory slots. The amount of slots are defined\n     * in the module constants.\n     */\n\n    private load(): void {\n        if (!this.bankList) return log.error('[Bank] Could not find the bank slot list.');\n        if (!this.inventoryList) return log.error('[Bank] Could not find the inventory slot list.');\n\n        for (let i = 0; i < Modules.Constants.BANK_SIZE; i++) {\n            let slot = this.draggableSlot(\n                i,\n                Modules.ContainerType.Bank,\n                Modules.ContainerType.Inventory\n            );\n\n            this.bankList.append(slot);\n        }\n\n        for (let i = 0; i < Modules.Constants.INVENTORY_SIZE; i++) {\n            let slot = this.draggableSlot(\n                i,\n                Modules.ContainerType.Inventory,\n                Modules.ContainerType.Bank\n            );\n\n            this.inventoryList.append(slot);\n        }\n\n        this.inventory.onBatch(this.synchronize.bind(this));\n    }\n\n    /**\n     * Creates a draggable slot for the bank interface.\n     * @param index The index of the slot.\n     * @param fromContainer The type of container the slot is from.\n     * @param defaultContainer The default type of container the slot is going.\n     * @returns The slot element.\n     */\n\n    private draggableSlot(\n        index: number,\n        fromContainer: Modules.ContainerType,\n        defaultContainer: Modules.ContainerType\n    ): HTMLLIElement {\n        let slot = Util.createSlot(fromContainer, index, () =>\n                this.select(fromContainer, index, defaultContainer)\n            ),\n            item = slot.querySelector<HTMLDivElement>('.item-slot')!;\n\n        onDragDrop(item, this.handleHold.bind(this), () =>\n            this.inventory.isEmpty(this.getElement(index, fromContainer))\n        );\n\n        return slot;\n    }\n\n    private handleHold(clone: HTMLElement, target: HTMLElement): void {\n        let fromContainer = clone?.dataset?.type,\n            fromIndex = clone?.dataset?.index,\n            toContainer = target?.dataset?.type,\n            toIndex = target?.dataset?.index;\n\n        if (!fromContainer || !fromIndex || !toContainer || !toIndex) return;\n\n        this.select(\n            parseInt(fromContainer),\n            parseInt(fromIndex),\n            parseInt(toContainer),\n            parseInt(toIndex)\n        );\n    }\n\n    /**\n     * Initializes the selection process. A callback is created so that\n     * the menu controller can send specified request to the server.\n     * @param fromContainer The type of container the item is being selected from.\n     * @param toContainer The type of container the item is being selected to.\n     * @param index The index of the item being acted on.\n     */\n\n    private select(\n        fromContainer: Modules.ContainerType,\n        fromIndex: number,\n        toContainer: Modules.ContainerType,\n        toIndex?: number\n    ): void {\n        this.selectCallback?.(fromContainer, fromIndex, toContainer, toIndex);\n    }\n\n    /**\n     * Sets the slot in the bank list at a specified index. Updates the image\n     * and the count of the item.\n     * @param index The index of the slot we are setting.\n     * @param key The key of the image, defaults to a blank string to clear the slot image.\n     * @param count The amount of an item in the slot, defaults to 0 to clear the slot.\n     */\n\n    private setSlot(slot: SlotData): void {\n        let image = this.getBankElement(slot.index).querySelector<HTMLElement>('.item-image')!,\n            countElement = this.getBankElement(slot.index).querySelector<HTMLElement>(\n                '.item-count'\n            )!;\n\n        image.style.backgroundImage = Util.getImageURL(slot.key);\n        countElement.textContent = Util.getCount(slot.count);\n    }\n\n    /**\n     * Synchronizes the slot data between the bank and the inventory.\n     */\n\n    public override synchronize(): void {\n        if (!this.isVisible()) return;\n\n        this.inventory.forEachSlot((index: number, slot: HTMLElement) => {\n            let element = this.getInventoryElement(index),\n                image = element.querySelector<HTMLElement>('.item-image')!,\n                count = element.querySelector<HTMLElement>('.item-count')!,\n                slotImage = slot.querySelector<HTMLElement>('.item-image')!;\n\n            if (!slotImage) return;\n\n            image.style.backgroundImage = slotImage.style.backgroundImage;\n            count.textContent = slot.textContent;\n        });\n    }\n\n    /**\n     * Loads the batch data into the bank from the server. Each\n     * slot is selected from the list element.\n     * @param slots Serialized slots received from the server. We take\n     * the index contained within these slots and attribute them\n     * to the index within our slot list.\n     */\n\n    public override batch(slots: SlotData[]): void {\n        for (let slot of slots) {\n            if (!slot.key) continue;\n\n            this.setSlot(slot);\n        }\n    }\n\n    /**\n     * Adds an item to the bank list by updating the slot data.\n     */\n\n    public override add(slot: SlotData): void {\n        this.setSlot(slot);\n    }\n\n    /**\n     * Updates the slot data of the bank list.\n     */\n\n    public override remove(slot: SlotData): void {\n        this.setSlot(slot);\n    }\n\n    /**\n     * Displays the bank interface.\n     */\n\n    public override show(slots: SlotData[]): void {\n        super.show();\n\n        this.synchronize();\n\n        // Set all slots to the new data.\n        for (let slot of slots) this.setSlot(slot);\n    }\n\n    /**\n     * Hides the bank and clears all the bank slots.\n     */\n\n    public override hide(): void {\n        super.hide();\n    }\n\n    private getElement(index: number, container: Modules.ContainerType): HTMLElement {\n        return container === Modules.ContainerType.Bank\n            ? this.getBankElement(index)\n            : this.getInventoryElement(index);\n    }\n\n    /**\n     * Grabs the bank HTML element at a specified index.\n     * @param index The index of the bank slot.\n     * @returns An HTMLElement div within the list at the specified index.\n     */\n\n    private getBankElement(index: number): HTMLElement {\n        return this.bankList.children[index].querySelector('div') as HTMLElement;\n    }\n\n    /**\n     * Grabs the HTMLElement at a specified index within the\n     * inventory slot list.\n     * @param index The index of the element to grab.\n     * @returns The HTMLElement at the specified index.\n     */\n\n    private getInventoryElement(index: number): HTMLElement {\n        return this.inventoryList.children[index].querySelector('div') as HTMLElement;\n    }\n\n    /**\n     * Callback used for whenever a slot is selected. This is used\n     * by an external controller in order to make requests to the server.\n     * @param callback Contains the type of container that is\n     * being clicked, as well as the index of the slot.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport log from '../lib/log';\nimport Util from '../utils/util';\nimport { isMobile } from '../utils/detect';\nimport { onSecondaryPress } from '../utils/press';\n\nimport { Modules, Opcodes } from '@kaetram/common/network';\n\nimport type Inventory from './inventory';\nimport type { StorePacket } from '@kaetram/common/types/messages/outgoing';\nimport type { SerializedStoreItem } from '@kaetram/common/types/stores';\n\ntype SelectCallback = (opcode: Opcodes.Store, key: string, index: number, count?: number) => void;\n\nexport default class Store extends Menu {\n    private key = ''; // Key of the current store\n    private currency = 'gold'; // Key of the currency used, defaults to gold.\n\n    private selectedIndex = -1; // Index of currently selected item.\n    private selectedCount = -1; // Amount of currently selected item.\n\n    private selectedBuyIndex = -1; // Index of currently selected item to buy.\n\n    private storeContainer: HTMLElement = document.querySelector('#store-container')!;\n\n    private storeHelp: HTMLElement = document.querySelector('#store-help')!;\n\n    private confirmSell: HTMLElement = document.querySelector('#confirm-sell')!;\n\n    // Sell slot information\n    private sellSlot: HTMLElement = document.querySelector('#store-sell-slot')!;\n    private sellSlotText: HTMLElement = document.querySelector('#store-sell-slot-text')!;\n    private sellSlotReturn: HTMLElement = document.querySelector('#store-sell-slot-return')!;\n    private sellSlotReturnText: HTMLElement = document.querySelector(\n        '#store-sell-slot-return-text'\n    )!;\n\n    // Lists\n    private storeList: HTMLUListElement = document.querySelector('#store-container')!;\n    private inventoryList: HTMLUListElement = document.querySelector('#store-inventory-slots')!;\n\n    // Buy dialog elements\n    public buyDialog: HTMLElement = document.querySelector('#store-buy')!;\n    private buyCount: HTMLInputElement = document.querySelector('#store-buy .dialog-count')!;\n    private buyAccept: HTMLElement = document.querySelector('#store-buy .dialog-accept')!;\n    private buyCancel: HTMLElement = document.querySelector('#store-buy .dialog-cancel')!;\n\n    private selectCallback?: SelectCallback;\n\n    public constructor(private inventory: Inventory) {\n        super('#store', '#close-store');\n\n        this.resize();\n\n        this.sellSlot.addEventListener('click', this.synchronize.bind(this));\n        this.confirmSell.addEventListener('click', this.sell.bind(this));\n\n        this.buyCancel.addEventListener('click', this.hideBuyDialog.bind(this));\n        this.buyAccept.addEventListener('click', this.handleBuy.bind(this));\n\n        // Create the slot elements for the inventory container.\n        for (let i = 0; i < Modules.Constants.INVENTORY_SIZE; i++)\n            this.inventoryList.append(\n                Util.createSlot(Modules.ContainerType.Inventory, i, this.select.bind(this))\n            );\n    }\n\n    /**\n     * Updates the helper text when the user resizes the screen.\n     */\n\n    public override resize(): void {\n        let action = isMobile() ? 'Long tap' : 'Right click';\n\n        this.storeHelp.textContent = `${action} to buy multiple items.`;\n    }\n\n    /**\n     * Takes the store packet data and inserts it all into the store. Note that the store packet\n     * data changes depending on whether we're opening/updating or selecting an item in the store.\n     * In this case, the store packet contains data about the store rather than a selected item.\n     * @param info Contains the store's key, currency, and items (or specific item if selecting).\n     */\n\n    public update(info: StorePacket): void {\n        this.clear();\n\n        this.key = info.key!;\n        this.currency = info.currency!;\n\n        for (let i = 0; i < info.items!.length; i++)\n            this.storeList.append(this.createStoreItem(info.items![i], i));\n    }\n\n    /**\n     * Handles the initial action of clicking on an item in the inventory.\n     * @param _type Unused parameter identifying the container being clicked.\n     * @param index The index of the item we are selecting (in the inventory).\n     */\n\n    public select(_type: Modules.ContainerType, index: number): void {\n        this.selectCallback?.(Opcodes.Store.Select, this.key, index);\n    }\n\n    /**\n     * Creates the callback for the sell opcode and passes onto it the currently\n     * selected item index and the count.\n     */\n\n    private sell(): void {\n        this.selectCallback?.(Opcodes.Store.Sell, this.key, this.selectedIndex, this.selectedCount);\n    }\n\n    /**\n     * Sends a callback signal with the buy opcode.\n     * @param index The index of the item we are trying to purchase.\n     * @param count Optional parameter for the amount of an item we are trying to buy.\n     */\n\n    private buy(index: number, count = 1): void {\n        this.selectCallback?.(Opcodes.Store.Buy, this.key, index, count);\n    }\n\n    /**\n     * Buy dialog handler. Takes the value of the input field and sends it to the server.\n     */\n\n    private handleBuy(): void {\n        this.buy(this.selectedBuyIndex, this.buyCount.valueAsNumber);\n\n        this.hideBuyDialog();\n    }\n\n    /**\n     * Hides the description and shows the drop dialog. Also\n     * focuses on the input field for the drop dialog.\n     */\n\n    public showBuyDialog(): void {\n        Util.fadeIn(this.buyDialog);\n\n        this.storeContainer.classList.add('dimmed');\n\n        this.buyCount.value = '1';\n        this.buyCount.focus();\n    }\n\n    /**\n     * Hides the drop dialog and brings back the description info.\n     */\n\n    private hideBuyDialog(): void {\n        Util.fadeOut(this.buyDialog);\n\n        this.storeContainer.classList.remove('dimmed');\n    }\n\n    /**\n     * Synchronizes the slot data between the store and the inventory.\n     */\n\n    public override synchronize(): void {\n        if (!this.isVisible()) return;\n\n        this.clearSellSlot();\n\n        this.inventory.forEachSlot((index: number, slot: HTMLElement) => {\n            let image = this.getElement(index).querySelector<HTMLElement>('.item-image')!,\n                count = this.getElement(index).querySelector<HTMLElement>('.item-count')!,\n                slotImage = slot.querySelector<HTMLElement>('.item-image')!;\n\n            if (!slotImage) return;\n\n            image.style.backgroundImage = slotImage.style.backgroundImage;\n            count.textContent = slot.textContent;\n        });\n    }\n\n    /**\n     * Displays the store UI and updates the items\n     * in the store inventory.\n     * @param info Store packet data containing information about the store.\n     */\n\n    public override show(info: StorePacket): void {\n        super.show();\n\n        this.update(info);\n        this.synchronize();\n    }\n\n    /**\n     * Clears the store so that new data can be inserted\n     * once again. Clears the key of the currently open store,\n     * defaults the currency, and empties the list of store items.\n     */\n\n    private clear(): void {\n        this.key = '';\n        this.currency = 'gold';\n\n        this.storeList.innerHTML = '';\n    }\n\n    /**\n     * Clears the sell slots and selected item index. Removes all the image\n     * and text contents from the HTML elements and clears the index and count.\n     */\n\n    private clearSellSlot(): void {\n        this.selectedIndex = -1;\n        this.selectedCount = -1;\n\n        this.sellSlot.style.backgroundImage = '';\n        this.sellSlotText.textContent = '';\n        this.sellSlotReturn.style.backgroundImage = '';\n        this.sellSlotReturnText.textContent = '';\n    }\n\n    /**\n     * When the server sends a select packet, we use this function\n     * to move an item from the inventory to the select slot. We also\n     * add the currency and price to bottom slots.\n     * @param info Contains store packet data such as the index, key, price, etc.\n     */\n\n    public move(info: StorePacket): void {\n        if (info.key !== this.key) return log.error(`Invalid store key provided for the select.`);\n\n        //Refreshes the inventory container prior to moving.s\n        this.synchronize();\n\n        let image = this.getElement(info.item!.index!).querySelector<HTMLElement>('.item-image')!,\n            count = this.getElement(info.item!.index!).querySelector<HTMLElement>('.item-count')!;\n\n        if (!image || !count) return log.error(`[Store] Could not find image and count elements.`);\n\n        // Updates the sell slot.\n        this.sellSlot.style.backgroundImage = image.style.backgroundImage;\n        this.sellSlotText.textContent = count.textContent;\n        this.sellSlotReturn.style.backgroundImage = Util.getImageURL(this.currency);\n        this.sellSlotReturnText.textContent = info.item!.price.toString() || '';\n\n        // Visually removes the item from the inventory.\n        image.style.backgroundImage = '';\n        count.textContent = '';\n\n        // Store the currently selected item index and count for when we sell.\n        this.selectedIndex = info.item!.index!;\n        this.selectedCount = info.item!.count!;\n    }\n\n    /**\n     * Creates a new store element item and returns it.\n     * @param item Contains data about the item (price, image, name, etc).\n     * @returns An HTML list element that can be appended to the list of store items.\n     */\n\n    private createStoreItem(item: SerializedStoreItem, index: number): HTMLElement {\n        let listElement = document.createElement('li'),\n            image = document.createElement('div'),\n            name = document.createElement('div'),\n            count = document.createElement('div'),\n            price = document.createElement('div');\n\n        // Add the class to the elements.\n        listElement.classList.add('store-item');\n        image.classList.add('store-item-image');\n        name.classList.add('store-item-name', 'stroke');\n        count.classList.add('store-item-count', 'stroke');\n        price.classList.add('store-item-price', 'stroke');\n\n        // Set the text HTML values for the children elements.\n        if (item.count !== -1) count.textContent = `x${item.count.toString()}`;\n        name.textContent = item.name;\n        price.textContent = `${item.price.toString()}${this.currency[0]}`;\n\n        // Update the image of the element.\n        image.style.backgroundImage = Util.getImageURL(item.key);\n\n        listElement.addEventListener('click', () => this.buy(index));\n        onSecondaryPress(listElement, () => {\n            this.selectedBuyIndex = index;\n\n            this.showBuyDialog();\n        });\n\n        // Append all the elements together and nest them.\n        listElement.append(image, name, count, price);\n\n        return listElement;\n    }\n\n    /**\n     * Grabs the HTMLElement at a specified index within the\n     * inventory slot list.\n     * @param index The index of the element to grab.\n     * @returns The HTMLElement at the specified index.\n     */\n\n    private getElement(index: number): HTMLElement {\n        return this.inventoryList.children[index].querySelector('div') as HTMLElement;\n    }\n\n    /**\n     * Select callback for whenever a store action is performed. This includes\n     * buying, selling, or selecting an item.\n     * @param callback Passes data such as the type of action performed and index.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n}\n","import type Player from '../entity/character/player/player';\n\n/**\n * The header is the GUI on top of the screen that displays\n * the user's hitPoints, and exp bar. Every time there's\n * an update to the game's player, it gets relayed here.\n */\n\nexport default class Header {\n    private health: HTMLElement = document.querySelector('#health')!; // The red element within the health bar.\n    private healthBar: HTMLElement = document.querySelector('#health-bar')!;\n\n    private mana: HTMLElement = document.querySelector('#mana')!;\n    private manaBar: HTMLElement = document.querySelector('#mana-bar')!;\n\n    private healthText: HTMLElement = document.querySelector('#health-bar-text')!; // Numerical value of the health bar.\n    private manaText: HTMLElement = document.querySelector('#mana-bar-text')!;\n\n    public constructor(private player: Player) {\n        this.player.onHitPoints(this.handleHitPoints.bind(this));\n        this.player.onMana(this.handleMana.bind(this));\n        this.player.onPoison(this.handlePoison.bind(this));\n    }\n\n    /**\n     * Updates the health bar on the game screen.\n     * @param hitPoints Current hit points of the player.\n     * @param maxHitPoints Maximum attainable hit points (used to calcualte percentages).\n     * @param decrease Whether or not the hit points are decreasing.\n     */\n\n    private handleHitPoints(hitPoints: number, maxHitPoints: number, decrease?: boolean): void {\n        this.setPoints(\n            this.health,\n            this.healthBar,\n            this.healthText,\n            hitPoints,\n            maxHitPoints,\n            decrease\n        );\n    }\n\n    /**\n     * Updates the mana bar on the game screen.\n     * @param mana Current mana of the player.\n     * @param maxMana Maximum attainable mana (used to calcualte percentages).\n     */\n\n    public handleMana(mana: number, maxMana: number): void {\n        this.setPoints(this.mana, this.manaBar, this.manaText, mana, maxMana);\n    }\n\n    /**\n     * Updates the poison status by changing the colour of the health bar.\n     * @param status The current status of the player's poison.\n     */\n\n    public handlePoison(status: boolean): void {\n        this.health.style.background = status\n            ? 'linear-gradient(to right, #046E20, #19B047)'\n            : 'linear-gradient(to right, #f00, #ef5a5a)';\n    }\n\n    /**\n     * Updates the width of all the bars when the window is resized.\n     */\n\n    public resize(): void {\n        this.handleHitPoints(this.player.hitPoints, this.player.maxHitPoints);\n        this.handleMana(this.player.mana, this.player.maxMana);\n    }\n\n    /**\n     * Function that updates a specified element and its text value\n     * based on the points data provided.\n     * @param element The element we are updating the width of.\n     * @param barElement Used to compare against the element's width.\n     * @param textElement The text element we are adding the points info to.\n     * @param points The points value we are updating the element with.\n     * @param maxPoints The maximum points value.\n     * @param decrease Whether or not the points value is decreasing.\n     */\n\n    private setPoints(\n        element: HTMLElement,\n        barElement: HTMLElement,\n        textElement: HTMLElement,\n        points: number,\n        maxPoints: number,\n        decrease?: boolean\n    ): void {\n        let percentage = points / maxPoints;\n\n        element.style.width = `${Math.floor(barElement.offsetWidth * percentage).toString()}px`;\n\n        textElement.textContent = `${points}/${maxPoints}`;\n\n        if (decrease) this.flash(this.player.poison ? 'poison' : 'white');\n    }\n\n    /**\n     * Temporarily adds a class to the health (to give the visual\n     * effect of it flashing) and creates a timeout that removes\n     * it after 500 milliseconds.\n     */\n\n    private flash(style: string): void {\n        this.health.classList.add(style);\n\n        window.setTimeout(() => this.health.classList.remove(style), 500);\n    }\n}\n","import Util from '../../../utils/util';\nimport Menu from '../../menu';\n\nimport { Modules } from '@kaetram/common/network';\nimport { attachTooltip } from '@kaetram/client/src/utils/tooltip';\n\nimport type Player from '../../../entity/character/player/player';\n\ntype UnequipCallback = (type: Modules.Equipment) => void;\ntype StyleCallback = (style: Modules.AttackStyle) => void;\n\nexport default class State extends Menu {\n    // General player information.\n    private level: HTMLElement = document.querySelector('#profile-level')!;\n    private experience: HTMLElement = document.querySelector('#profile-experience')!;\n\n    // Attack style element\n    private attackStyleList: HTMLUListElement = document.querySelector('#attack-style-list')!;\n\n    // Equipment information\n    private weapon: HTMLElement = document.querySelector('#state-page > .weapon-slot')!;\n    private weaponSkin: HTMLElement = document.querySelector('#state-page > .weapon-skin-slot')!;\n    private armour: HTMLElement = document.querySelector('#state-page > .armour-slot')!;\n    private armourSkin: HTMLElement = document.querySelector('#state-page > .armour-skin-slot')!;\n    private pendant: HTMLElement = document.querySelector('#state-page > .pendant-slot')!;\n    private ring: HTMLElement = document.querySelector('#state-page > .ring-slot')!;\n    private boots: HTMLElement = document.querySelector('#state-page > .boots-slot')!;\n    private arrow: HTMLElement = document.querySelector('#state-page > .arrows-slot')!;\n\n    private unequipCallback?: UnequipCallback;\n    private styleCallback?: StyleCallback;\n\n    public constructor(private player: Player) {\n        super('#state-page');\n\n        this.weapon.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Weapon)\n        );\n        this.weaponSkin.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.WeaponSkin)\n        );\n        this.armour.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Armour)\n        );\n        this.armourSkin.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.ArmourSkin)\n        );\n        this.pendant.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Pendant)\n        );\n        this.ring.addEventListener('click', () => this.unequipCallback?.(Modules.Equipment.Ring));\n        this.boots.addEventListener('click', () => this.unequipCallback?.(Modules.Equipment.Boots));\n        this.arrow.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Arrows)\n        );\n    }\n\n    /**\n     * Synchronizes the player data into its respective slots. Takes\n     * the player's name, level, experience, and equipment and updates\n     * the user interface accordingly.\n     */\n\n    public override synchronize(): void {\n        // Synchronize the player's general information\n        this.level.textContent = `Level ${this.player.level}`;\n        this.experience.textContent = `${this.player.getTotalExperience()}`;\n\n        // Synchronize equipment data\n        this.weapon.style.backgroundImage = Util.getImageURL(this.player.getWeapon().key);\n        this.weaponSkin.style.backgroundImage = Util.getImageURL(this.player.getWeaponSkin().key);\n        // Cloth armour shouldn't be displayed in the UI.\n        this.armour.style.backgroundImage = Util.getImageURL(\n            this.player.getArmour().key === 'clotharmor' ? '' : this.player.getArmour().key\n        );\n        this.armourSkin.style.backgroundImage = Util.getImageURL(this.player.getArmourSkin().key);\n        this.pendant.style.backgroundImage = Util.getImageURL(this.player.getPendant().key);\n        this.ring.style.backgroundImage = Util.getImageURL(this.player.getRing().key);\n        this.boots.style.backgroundImage = Util.getImageURL(this.player.getBoots().key);\n        this.arrow.style.backgroundImage = Util.getImageURL(this.player.getArrows().key);\n\n        // Synchronize the attack styles\n        this.loadAttackStyles();\n    }\n\n    /**\n     * Iterates through all the attack styles currently present on the player's weapon\n     * and creates the HTML element for each one of them. The element is then appended\n     * onto the attack style list.\n     */\n\n    private loadAttackStyles(): void {\n        // Clear the attack style list.\n        this.attackStyleList.innerHTML = '';\n\n        // Iterate through all the attack styles and create the HTML element for each one.\n        for (let style of this.player.getWeapon().attackStyles)\n            this.attackStyleList.append(this.createStyle(style));\n    }\n\n    /**\n     * Creates an attack style list element that is appended onto the\n     * attack style list. Each attack style has a different image and\n     * that is determined based on the style parameter provided.\n     * @param style The attack style we are creating.\n     * @returns A list element that contains the attack style image.\n     */\n\n    private createStyle(style: Modules.AttackStyle): HTMLLIElement {\n        let element = document.createElement('li'),\n            image = document.createElement('div');\n\n        // Append the default box onto the list element.\n        element.classList.add('attack-style-box');\n\n        attachTooltip(element, this.getTooltip(style));\n\n        // Add the attack style image.\n        image.classList.add(\n            'attack-style',\n            `attack-style-${Modules.AttackStyle[style].toLowerCase()}`\n        );\n\n        // If the style is the same as the player's current style, we add the active class.\n        if (style === this.player.getWeapon().attackStyle) element.classList.add('active');\n\n        // Append the image onto the list element.\n        element.append(image);\n\n        // Add the click event listener to the element.\n        element.addEventListener('click', () => this.styleCallback?.(style));\n\n        return element;\n    }\n\n    private getTooltip(style: Modules.AttackStyle): string {\n        switch (style) {\n            case Modules.AttackStyle.Stab: {\n                return 'Stab (Accuracy EXP)';\n            }\n\n            case Modules.AttackStyle.Slash: {\n                return 'Slash (Strength EXP)';\n            }\n\n            case Modules.AttackStyle.Defensive: {\n                return 'Defensive (Defense EXP)';\n            }\n\n            case Modules.AttackStyle.Crush: {\n                return 'Crush (Accuracy + Strength EXP)';\n            }\n\n            case Modules.AttackStyle.Shared: {\n                return 'Shared (Accuracy + Strength + Defense EXP)';\n            }\n\n            case Modules.AttackStyle.Hack: {\n                return 'Hack (Strength + Defense EXP)';\n            }\n\n            case Modules.AttackStyle.Chop: {\n                return 'Chop (Accuracy + Defense EXP)';\n            }\n\n            case Modules.AttackStyle.Accurate: {\n                return 'Accurate (Increased Accuracy)';\n            }\n\n            case Modules.AttackStyle.Fast: {\n                return 'Fast (Increased Speed)';\n            }\n\n            case Modules.AttackStyle.Focused: {\n                return 'Focused (Increased Damage)';\n            }\n\n            case Modules.AttackStyle.LongRange: {\n                return 'Long Range';\n            }\n        }\n\n        return 'Report as bug if you see this :)';\n    }\n\n    /**\n     * Callback for when we click on an equipment slot.\n     * @param callback Contains the slot type we are selecting.\n     */\n\n    public onUnequip(callback: UnequipCallback): void {\n        this.unequipCallback = callback;\n    }\n\n    /**\n     * Callback for when we click on an attack style.\n     * @param callback Contains the attack style we are selecting.\n     */\n\n    public onStyle(callback: StyleCallback): void {\n        this.styleCallback = callback;\n    }\n}\n","import log from '../../../lib/log';\nimport Menu from '../../menu';\nimport QuickSlots from '../../quickslots';\n\nimport { Modules, Opcodes } from '@kaetram/common/network';\n\nimport type Ability from '../../../entity/character/player/ability';\nimport type Player from '../../../entity/character/player/player';\n\ninterface AbilityElement extends HTMLElement {\n    key?: string;\n}\n\nexport type SelectCallback = (type: Opcodes.Ability, key: string, index?: number) => void;\n\nexport default class Abilities extends Menu {\n    private activeAbilities: HTMLUListElement = document.querySelector('#active-abilities')!;\n    private passiveAbilities: HTMLUListElement = document.querySelector('#passive-abilities')!;\n\n    private abilityBar: HTMLElement = document.querySelector('#ability-shortcut')!;\n\n    private draggedElement = '';\n\n    //private quickSlots: QuickSlots;\n\n    private selectCallback?: SelectCallback;\n\n    public constructor(private player: Player) {\n        super('#abilities-page');\n\n        // Loads the event listeners for when we click on an ability.\n        for (let i = 0; i < this.activeAbilities.children.length; i++)\n            this.activeAbilities.children[i].addEventListener('click', () => this.handleAction(i));\n\n        // Creates the drag detection listener onto the ability bar.\n        for (let i = 0; i < this.abilityBar.children.length; i++) {\n            let element = this.abilityBar.children[i] as AbilityElement;\n\n            element.draggable = true;\n\n            element.addEventListener('dragover', (event: DragEvent) => this.dragOver(event));\n            element.addEventListener('drop', (event: DragEvent) => this.dragDrop(event, i));\n        }\n\n        // // Load the quickslots.\n        // this.quickSlots = new QuickSlots(this.player);\n\n        // // Redirect the quick slots select callback through this class' select callback.\n        // this.quickSlots.onSelect((type: Opcodes.Ability, key: string) =>\n        //     this.selectCallback?.(type, key)\n        // );\n    }\n\n    /**\n     * Synchronizes ability information from the player object into the interface.\n     * @param player The player object we are synchronizing abilities from.\n     */\n\n    public override synchronize(): void {\n        // Hide all abilities and start from scratch.\n        this.hideAll();\n\n        let activeIndex = 0,\n            passiveIndex = 0;\n\n        /**\n         * Depending on whether the ability is passive or active, we increment\n         * the adequate index and add it to the appropriate list.\n         */\n\n        for (let ability of Object.values(this.player.abilities))\n            switch (ability.type) {\n                case Modules.AbilityType.Active: {\n                    this.setActiveAbility(activeIndex, ability.key, ability.level, ability.active);\n                    activeIndex++;\n                    break;\n                }\n\n                case Modules.AbilityType.Passive: {\n                    this.setPassiveAbility(passiveIndex, ability.key, ability.level);\n                    passiveIndex++;\n                    break;\n                }\n            }\n    }\n\n    /**\n     * Handler for when an ability at a specific index is used. We createa a callback\n     * that is passed through the controllers to the the server.\n     * @param index The index of the ability.\n     */\n\n    private handleAction(index: number): void {\n        let ability = this.activeAbilities.children[index] as AbilityElement;\n\n        if (ability.style.display === 'none' || !ability.key) return;\n\n        this.selectCallback?.(Opcodes.Ability.Use, ability.key);\n    }\n\n    /**\n     * Event handler for when a slot begins the dragging and dropping\n     * process. We store the key of the ability we are currently dragging.\n     * @param key The key of the ability that is being dragged.\n     */\n\n    private dragStart(key: string): void {\n        this.draggedElement = key;\n    }\n\n    /**\n     * The drop event within the drag and drop actions. The target represents\n     * the slot that the item is being dropped into.\n     * @param event Contains event data about the target.\n     * @param index The index of the quick slot we are dragging ability onto.\n     */\n\n    private dragDrop(event: DragEvent, index: number): void {\n        this.selectCallback?.(Opcodes.Ability.QuickSlot, this.draggedElement, index);\n\n        this.draggedElement = '';\n    }\n\n    /**\n     * Event handler for when a slot is being dragged over (but not dropped).\n     * We use this to give the user feedback on which slot they are hovering.\n     * @param event Contains event data and the ability element being dragged\n     */\n\n    private dragOver(event: DragEvent): void {\n        // Check that a target exists firstly.\n        if (!event.target || !(event.target as HTMLElement).draggable) return;\n\n        event.preventDefault();\n    }\n\n    /**\n     * Event handler for when an item being dragged exits a valid slot area.\n     * @param event Contains the target slot that is exited.\n     */\n\n    private dragLeave(_event: DragEvent): void {\n        //\n    }\n\n    /**\n     * Takes in an HTMLElement object and assigns the necessary information to it. This is used\n     * by both the active and passive abilities.\n     * @param ability The HTML element that we are modifying.\n     * @param key The key of the image that we are using.\n     * @param level The level of the ability.\n     */\n\n    private setAbility(ability: AbilityElement, key: string, level = 1, passive = false): void {\n        // Clear the inner HTML first (to erase any potential existing elements such as levels).\n        ability.innerHTML = '';\n        ability.className = `ability`; // Clear the classes\n\n        // Make ability visible.\n        ability.style.display = 'block';\n\n        // Handle icons for the abilities\n        let icon = document.createElement('div');\n\n        // Set the icon class and add it to the ability.\n        icon.classList.add('ability-icon');\n        icon.classList.add(`ability-icon-${key}`);\n\n        // Make the icon draggable.\n        icon.draggable = true;\n\n        // Ignore the drag and drop events if the ability is passive.\n        if (!passive) {\n            // Add event listeners for drag and drop for the ability icon.\n            icon.addEventListener('dragleave', (event: DragEvent) => this.dragLeave(event));\n            icon.addEventListener('dragstart', () => this.dragStart(key));\n        }\n\n        // Clamp the level.\n        if (level > 4) level = 4;\n        if (level < 1) level = 1;\n\n        // Add the levels to the ability.t\n        for (let i = 0; i < level; i++) {\n            let level = document.createElement('div');\n\n            level.classList.add('ability-level');\n            level.classList.add(`ability-level${i + 1}`);\n\n            ability.append(level, icon);\n        }\n    }\n\n    /**\n     * Updates the icon of a active ability based on the key and level provided.\n     * @param index The index of the ability we are modifying.\n     * @param key The key of the ability we are setting.\n     * @param level The level of the ability.\n     */\n\n    public setActiveAbility(index: number, key: string, level = 1, active = false): void {\n        let ability = this.activeAbilities.children[index] as AbilityElement;\n\n        // Invalid index is provided.\n        if (!ability) return log.error(`Could not find ability with index ${index}, key: ${key}.`);\n\n        // Indicates that we are clearing an active ability.\n        if (!key) return this.hideAbility(ability);\n\n        this.setAbility(ability, key, level);\n\n        ability.key = key;\n\n        let icon = ability.querySelector('.ability-icon')!;\n\n        if (!icon) return;\n\n        // Toggle the ability if it has been activated.\n        if (active) icon.classList.add('active');\n        else icon.classList.remove('active');\n\n        //this.quickSlots.toggleAbility(key, active);\n    }\n\n    /**\n     * Updates the icon and level of a passive ability in the user interface.\n     * @param index The index of the passive ability.\n     * @param key The key (image) of the passive ability.\n     * @param level The level we are setting the passive ability to.\n     */\n\n    public setPassiveAbility(index: number, key: string, level = 1): void {\n        let ability = this.passiveAbilities.children[index] as AbilityElement;\n\n        // Invalid index is provided.\n        if (!ability) return log.error(`Could not find ability with index ${index}, key: ${key}.`);\n\n        // Indicates that we are clearing a passive ability.\n        if (!key) return this.hideAbility(ability);\n\n        this.setAbility(ability, key, level, true);\n    }\n\n    /**\n     * Sets the display style for an ability to hidden to hide it.\n     * @param ability The HTML element of the ability we are hiding.\n     */\n\n    private hideAbility(ability: HTMLElement): void {\n        ability.style.display = 'none';\n    }\n\n    /**\n     * Goes through all the passive and active abilities and hides\n     * all of them. We generally use this during batching.\n     */\n\n    private hideAll(): void {\n        for (let child of this.activeAbilities.children) this.hideAbility(child as HTMLElement);\n\n        for (let child of this.passiveAbilities.children) this.hideAbility(child as HTMLElement);\n    }\n\n    /**\n     * Callback for when an active ability is selected within the menu.\n     * @param callback Contains the key of the ability that was selected.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n}\n","import Menu from '../../menu';\nimport Util from '../../../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Skill from '../../../entity/character/player/skill';\nimport type Player from '../../../entity/character/player/player';\n\ninterface SkillElement extends HTMLLIElement {\n    name?: string;\n    level?: number;\n    percentage?: number;\n    originalWidth?: number;\n}\n\nexport default class Skills extends Menu {\n    private list: HTMLUListElement = document.querySelector('#skills-list > ul')!;\n\n    // Skill info side-menu\n    private info: HTMLElement = document.querySelector('#profile-info')!;\n\n    // Skill we have info menu open for.\n    private selectedSkill!: Skill;\n\n    private loaded = false;\n\n    public constructor(private player: Player) {\n        super('#skills-page');\n    }\n\n    /**\n     * Synchronizes the player's skill data into the user interface.\n     * @param resize Whether we need to re-calculate the experience bar widths.\n     */\n\n    public override synchronize(resize = false): void {\n        if (Object.keys(this.player.skills).length === 0) return;\n\n        if (resize) this.list.innerHTML = '';\n\n        for (let id of Modules.SkillsOrder) {\n            let skill = this.player.skills[id],\n                element = this.get(skill.name);\n\n            // Update the element if found.\n            if (element) this.update(element, skill);\n            else {\n                // Create the element otherwise...\n                element = this.createElement(skill);\n\n                // Append the element to the list.\n                this.list.append(element);\n\n                // Update the element with the latest data.\n                this.update(element, skill);\n            }\n        }\n\n        if (this.isInfoVisible()) this.showInfo();\n    }\n\n    /**\n     * Override for the show function. Due to the nature of the HTML DOM we must\n     * re-synchronize data when we first show the page. This is because the skills\n     * experience bar does not have a width until it is first shown on the page.\n     * This function just checks if we have already loaded the page, if not, we\n     * synchronize again since we just created the elements, the `synchronize` function\n     * will grab the existing elements in the list and update their experience bar\n     * widths accordingly.\n     */\n\n    public override show(): void {\n        super.show();\n\n        // Only synchronize upon first showing the page.\n        if (this.loaded) return;\n\n        this.loaded = true;\n\n        this.synchronize();\n    }\n\n    /**\n     * Override for the superclass `hide` function to also hide\n     * the profile info side-menu.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        this.hideInfo();\n    }\n\n    /**\n     * Hides the info side-menu.\n     */\n\n    public hideInfo(): void {\n        Util.fadeOut(this.info);\n    }\n\n    /**\n     * Creates a new skill element that will be appended to the list.\n     * @param skill Contains skill data to create the element with.\n     */\n\n    private createElement(skill: Skill): HTMLLIElement {\n        let element: SkillElement = document.createElement('li'),\n            level = document.createElement('div'),\n            image = document.createElement('div'),\n            experience = document.createElement('div');\n\n        // Add the skill class to the base element.\n        element.classList.add('skill');\n\n        // Update the skill level\n        level.classList.add('skill-level', 'stroke');\n\n        // Load the image based on the skill name.\n        image.classList.add('skill-image', `skill-image-${skill.name.toLowerCase()}`);\n\n        // Load up the experience bar.\n        experience.classList.add('skill-experience');\n\n        // Add the image to the element.\n        element.append(level, experience, image);\n\n        // Store information about the skill in the element.\n        element.name = skill.name;\n        element.level = skill.level;\n        element.percentage = skill.percentage;\n\n        // Add the click event to the element.\n        element.addEventListener('click', () => this.showInfo(skill));\n\n        return element;\n    }\n\n    /**\n     * When we click on a skill we want to show some more information.\n     * @param skill The skill that we are showing information for.\n     */\n\n    private showInfo(skill = this.selectedSkill): void {\n        Util.fadeIn(this.info);\n\n        let image = this.info.querySelector('.profile-info-skill-image')!,\n            title = this.info.querySelector('.profile-info-title')!,\n            details = this.info.querySelector('.profile-info-details')!;\n\n        // Update the image and title of the skill.\n        image.className = `profile-info-skill-image skill-image-${skill.name.toLowerCase()}`;\n        title.innerHTML = skill.name;\n\n        // Update the details of the skill.\n        details.innerHTML = `\n            <p><span>Level:</span> ${skill.level}</p>\n            <br>\n            <p><span>Exp:</span> ${skill.experience}</p>\n            <br>\n            <p><span>Next Exp:</span> ${skill.nextExperience}</p>\n            <br>\n            <p><span>Percent:</span> ${(skill.percentage * 100).toFixed(3)}%</p>\n        `;\n\n        this.selectedSkill = skill;\n    }\n\n    /**\n     * Updates a slot element with the latest level and percentage information.\n     * @param element SkillElement HTML element that we are updating.\n     * @param skill The skill we are using to update the data with.\n     */\n\n    private update(element: SkillElement, skill: Skill): void {\n        // Update the level and experience bar of the skill.\n        let level: HTMLElement = element.querySelector('.skill-level')!,\n            experience: HTMLElement = element.querySelector('.skill-experience')!;\n\n        // Update the skill level\n        level.innerHTML = `${skill.level}/${Modules.Constants.MAX_LEVEL}`;\n\n        // Store the original width of the experience bar.\n        if (!element.originalWidth && experience.offsetWidth !== 0)\n            element.originalWidth = experience.offsetWidth;\n\n        if (!element.originalWidth) return;\n\n        // Set the experience bar's width.\n        experience.style.width = `${element.originalWidth * skill.percentage}px`;\n\n        // Update the properties of the element.\n        element.level = skill.level;\n        element.percentage = skill.percentage;\n    }\n\n    /**\n     * Finds an HTML skill element extension based on the name of the skill.\n     * @param name The name of the skill we are looking for.\n     * @returns A skill element extension if found, otherwise undefined.\n     */\n\n    private get(name: string): SkillElement | undefined {\n        for (let element of this.list.children)\n            if ((element as SkillElement).name === name) return element as SkillElement;\n\n        return undefined;\n    }\n\n    /**\n     * @returns Whether or not the profile info side-menu is visible.\n     */\n\n    public isInfoVisible(): boolean {\n        return this.info.style.display === 'block';\n    }\n}\n","import State from './impl/state';\nimport Abilities from './impl/abilities';\nimport Skills from './impl/skills';\n\nimport Menu from '../menu';\n\nimport type Player from '../../entity/character/player/player';\nimport type { Modules, Opcodes } from '@kaetram/common/network';\nimport type { SelectCallback } from './impl/abilities';\n\ntype UnequipCallback = (type: Modules.Equipment) => void;\ntype AttackStyleCallback = (style: Modules.AttackStyle) => void;\n\nexport default class Profile extends Menu {\n    // Initialize the pages separately for callbacks sake.\n    private state: State;\n    private skills: Skills;\n    private abilities: Abilities;\n\n    // Initialize all pages here.\n    private pages: Menu[] = [];\n\n    // Current page we are on.\n    private activePage = 0;\n\n    // Navigation buttons for the profile.\n    private previous: HTMLElement = document.querySelector('#profile-navigator > .previous')!;\n    private next: HTMLElement = document.querySelector('#profile-navigator > .next')!;\n\n    private unequipCallback?: UnequipCallback;\n    private attackStyleCallback?: AttackStyleCallback;\n    private abilityCallback?: SelectCallback;\n\n    public constructor(private player: Player) {\n        super('#profile-dialog', undefined, '#profile-button');\n\n        // Initialize the state page.\n        this.state = new State(this.player);\n\n        // Initialize the skills page.\n        this.skills = new Skills(this.player);\n\n        // Initialize the abilities page.\n        this.abilities = new Abilities(this.player);\n\n        // Add the abilities and skills page to the pages array.\n        this.pages.push(this.state, this.skills, this.abilities);\n\n        // Used to initialize the navigation buttons.\n        this.update();\n\n        // Navigation event listeners.\n        this.previous.addEventListener('click', () => this.handleNavigation('previous'));\n        this.next.addEventListener('click', () => this.handleNavigation('next'));\n\n        // Initialize callbacks for pages.\n        this.state.onUnequip((type: Modules.Equipment) => this.unequipCallback?.(type));\n        this.state.onStyle((style: Modules.AttackStyle) => this.attackStyleCallback?.(style));\n\n        this.abilities.onSelect((type: Opcodes.Ability, key: string, index?: number) =>\n            this.abilityCallback?.(type, key, index)\n        );\n    }\n\n    /**\n     * Override for the `hide` function to include hiding the side menu panel.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        this.skills.hideInfo();\n    }\n\n    /**\n     * We are modifying the currently active page and updating the status of\n     * the previous and next buttons depending on whether or not we're on\n     * the last or first page.\n     * @param direction Which way we are navigating, defaults to previous.\n     */\n\n    private handleNavigation(direction: 'previous' | 'next'): void {\n        // Prevent actions on disabled buttons.\n        if (this.isDisabled(direction)) return;\n\n        // Reset the status of the buttons.\n        this.previous.classList.remove('disabled');\n        this.next.classList.remove('disabled');\n\n        // Hide the current page we are on.\n        this.pages[this.activePage]?.hide();\n\n        // Modify the currently active page based on the direction.\n        this.activePage += direction === 'previous' ? -1 : 1;\n\n        // Update the status of the buttons.\n        this.update();\n    }\n\n    /**\n     * Updates the status of the buttons depending on whether or not we are\n     * on the first or last page.\n     */\n\n    private update() {\n        // Reaching the first page navigating backwards.\n        if (this.activePage <= 0) {\n            this.activePage = 0;\n            this.previous.classList.add('disabled');\n        }\n\n        // We are reaching the last page.\n        if (this.activePage >= this.pages.length - 1) {\n            this.activePage = this.pages.length - 1;\n            this.next.classList.add('disabled');\n        }\n\n        // Show the new page.\n        this.pages[this.activePage]?.show();\n    }\n\n    /**\n     * Iterates through all the pages in the profile and synchronizes them. This\n     * is called every time the player undergoes a change, whether it be equipping/unequipping,\n     * experience gain, or when a new ability is unlocked.\n     */\n\n    public override synchronize(): void {\n        this.forEachPage((page: Menu) => page.synchronize());\n    }\n\n    /**\n     * Synchronizes the skills interface upon resizing. This is because the experience\n     * bars are drawn according to the UI size, so we need to redraw them.\n     */\n\n    public override resize(): void {\n        this.skills.synchronize(true);\n    }\n\n    /**\n     * Checks if the direction is valid by ensuring the button\n     * associated with it is not disabled.\n     * @param direction Which direction we are navigating.\n     * @returns Whether the direction and the button associated\n     * with it are disabled or not.\n     */\n\n    private isDisabled(direction: 'previous' | 'next'): boolean {\n        return (\n            (direction === 'previous' && this.previous.classList.contains('disabled')) ||\n            (direction === 'next' && this.next.classList.contains('disabled'))\n        );\n    }\n\n    /**\n     * Iterates through each page menu and creates a callback.\n     * @param callback Contains the current page menu being iterated.\n     */\n\n    private forEachPage(callback: (page: Menu) => void): void {\n        for (let page of this.pages) callback(page);\n    }\n\n    /**\n     * Callback for when an item is being unequipped.\n     * @param callback Contains the type of slot being unequipped.\n     */\n\n    public onUnequip(callback: UnequipCallback): void {\n        this.unequipCallback = callback;\n    }\n\n    /**\n     * Callback for when an attack style is being changed.\n     * @param callback Contains the new attack style.\n     */\n\n    public onAttackStyle(callback: AttackStyleCallback): void {\n        this.attackStyleCallback = callback;\n    }\n\n    /**\n     * Callback for when an ability action occurs.\n     * @param callback Contains data about the action.\n     */\n\n    public onAbility(callback: SelectCallback): void {\n        this.abilityCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport Util from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Inventory from './inventory';\n\ntype SelectCallback = (index: number) => void;\ntype ConfirmCallback = (index: number, shardIndex: number) => void;\nexport default class Enchant extends Menu {\n    private list: HTMLUListElement = document.querySelector('#enchant-inventory-slots')!;\n\n    // Selected items for the enchanting process.\n    private selectedItem: HTMLElement = document.querySelector('#enchant-selected-item')!;\n    private selectedShards: HTMLElement = document.querySelector('#enchant-shards')!;\n    private selectedShardsCount: HTMLElement = document.querySelector('#shards-count')!;\n\n    // Confirm button\n    private confirmButton: HTMLElement = document.querySelector('#confirm-enchant')!;\n\n    // Selected elements for packet data\n    private selectedSlot = -1; // Item slot\n    private selectedShard = -1; // Shard slot\n\n    // Callbacks for the enchanting process.\n    private selectCallback?: SelectCallback;\n    private confirmCallback?: ConfirmCallback;\n\n    public constructor(private inventory: Inventory) {\n        super('#enchant', '#close-enchant');\n\n        // Event listeners for selected slots.\n        this.selectedItem.addEventListener('click', this.clear.bind(this));\n        this.selectedShards.addEventListener('click', this.clear.bind(this));\n        this.confirmButton.addEventListener('click', this.confirm.bind(this));\n\n        // Create an empty inventory slot list.\n        for (let i = 0; i < Modules.Constants.INVENTORY_SIZE; i++)\n            this.list.append(\n                Util.createSlot(Modules.ContainerType.Inventory, i, this.select.bind(this))\n            );\n    }\n\n    /**\n     * Synchronizes the slot data between the store and the inventory.\n     */\n\n    public override synchronize(): void {\n        if (!this.isVisible()) return;\n\n        this.clearSelections();\n\n        this.inventory.forEachSlot((index: number, slot: HTMLElement) => {\n            let image = this.getElement(index).querySelector<HTMLElement>('.item-image')!,\n                count = this.getElement(index).querySelector<HTMLElement>('.item-count')!,\n                slotImage = slot.querySelector<HTMLElement>('.item-image')!;\n\n            if (!slotImage) return;\n\n            image.style.backgroundImage = slotImage.style.backgroundImage;\n            count.textContent = slot.textContent;\n        });\n    }\n\n    /**\n     * Override for showing the enchantment menu. We ensure we synchronize with the\n     * inventory every time we open the menu.\n     */\n\n    public override show(): void {\n        super.show();\n\n        this.synchronize();\n    }\n\n    /**\n     * Creates a callback for when an item is selected. Sends a packet to the\n     * server with the selected slot and selected shard slot (index).\n     */\n\n    private confirm(): void {\n        // Client-sided prevention for sending an invalid packet.\n        if (this.selectedSlot === -1 || this.selectedShard === -1) return;\n\n        this.confirmCallback?.(this.selectedSlot, this.selectedShard);\n    }\n\n    /**\n     * Sends a packet to the server in order to verify the item that was selected. Depending on the\n     * type of item (normal or shard) we will assign it to the correct slot.\n     * @param _type (Unused) The type of container we are selecting from.\n     * @param index The index in the inventory container where we clicked.\n     */\n\n    private select(_type: Modules.ContainerType, index: number): void {\n        this.selectCallback?.(index);\n    }\n\n    /**\n     * Moves an item from the inventory to the enchantment menu. If the item is a shard, it will\n     * move all the shards to the shard slot.\n     * @param index The index of the item we are moving.\n     * @param isShard Whether the item is a shard or not (determined by the server).\n     */\n\n    public move(index: number, isShard = false): void {\n        let image = this.getElement(index).querySelector<HTMLElement>('.item-image')!,\n            count = this.getElement(index).querySelector<HTMLElement>('.item-count')!;\n\n        // We already have an item selected, move it back to the inventory.\n        if (this.selectedSlot !== -1 && !isShard) {\n            let element = this.getElement(this.selectedSlot),\n                elementImage = element.querySelector<HTMLElement>('.item-image')!;\n\n            elementImage.style.backgroundImage = this.selectedItem.style.backgroundImage;\n        }\n\n        // We already have a shard selected, move it back to the inventory.\n        if (this.selectedShard !== -1 && isShard) {\n            let element = this.getElement(this.selectedShard),\n                elementImage = element.querySelector<HTMLElement>('.item-image')!,\n                elementCount = element.querySelector<HTMLElement>('.item-count')!;\n\n            elementImage.style.backgroundImage = this.selectedShards.style.backgroundImage;\n            elementCount.textContent = this.selectedShardsCount.textContent;\n        }\n\n        // If the item is a shard, we will move all the shards to the shard slot.\n        if (isShard) this.selectedShard = index;\n        else this.selectedSlot = index;\n\n        // Update the slot depending on whether or not the item is a shard.\n        (isShard ? this.selectedShards : this.selectedItem).style.backgroundImage =\n            image.style.backgroundImage;\n\n        // Shards also have counts so we will update that as well.\n        if (isShard) this.selectedShardsCount.textContent = count.textContent;\n\n        // Remove the item from the inventory slot (and its count).\n        image.style.backgroundImage = '';\n        count.textContent = '';\n    }\n\n    /**\n     * Cleans everything up and re-synchronizes the inventory with default values.\n     */\n\n    private clear(): void {\n        this.clearSelections();\n\n        this.synchronize();\n    }\n\n    /**\n     * Clears all the selections from the user interface enchantment menu.\n     */\n\n    private clearSelections(): void {\n        this.selectedSlot = -1;\n        this.selectedShard = -1;\n\n        // Reset the slot images and text.\n        this.selectedItem.style.backgroundImage = '';\n        this.selectedShards.style.backgroundImage = '';\n        this.selectedShardsCount.textContent = '';\n    }\n\n    /**\n     * Grabs the HTMLElement at a specified index within the\n     * inventory slot list.\n     * @param index The index of the element to grab.\n     * @returns The HTMLElement at the specified index.\n     */\n\n    private getElement(index: number): HTMLElement {\n        return this.list.children[index].querySelector('div') as HTMLElement;\n    }\n\n    /**\n     * Callback for when an item in the inventory is selected. A packet\n     * is sent to the server.\n     * @param callback Contains the index of the item that was selected.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n\n    /**\n     * Callback for when the player confirms their selection and attempts\n     * to enchant an item using the shards.\n     * @param callback Contains the index of the item and the shard index.\n     */\n\n    public onConfirm(callback: ConfirmCallback): void {\n        this.confirmCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport log from '../lib/log';\n\nimport type Socket from '../network/socket';\n\nexport default class Warp extends Menu {\n    private list: NodeListOf<HTMLElement> = document.querySelectorAll('.map-button')!;\n\n    private selectCallback?: (id: number) => void;\n\n    public constructor(private socket: Socket) {\n        super('#map-frame', '#close-map-frame', '#warp-button');\n\n        for (let element of this.list)\n            element.addEventListener('click', () => this.handleWarp(element));\n    }\n\n    /**\n     * Handles the interaction when a warp element is clicked.\n     * Extracts the id of the warp button, and sends a packet\n     * to the server containing the id.\n     * @param element Which warp button is being clicked.\n     */\n\n    private handleWarp(element: HTMLElement): void {\n        let id = parseInt(element.id.replace('warp', ''));\n\n        if (isNaN(id)) return log.error('Invalid warp element clicked.');\n\n        this.selectCallback?.(id);\n\n        this.hide();\n    }\n\n    /**\n     * Callback for when the warp is clicked.\n     * @param callback Contains the id of the warp.\n     */\n\n    public onSelect(callback: (id: number) => void): void {\n        this.selectCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nexport default class Notification extends Menu {\n    private title: HTMLElement = document.querySelector('#notification-text-title')!;\n    private description: HTMLElement = document.querySelector('#notification-text-description')!;\n\n    private timeout!: number | null;\n\n    public constructor() {\n        super('#notification');\n    }\n\n    /**\n     * The notification system has a special behavior\n     * when it is displayed. The CSS handles the smooth\n     * animation for it, and when we display it, we must\n     * move it according to the screen size.\n     */\n\n    public override show(title: string, message: string, colour: string): void {\n        // If a notification is already visible we hide it and display new one.\n        if (this.isVisible()) {\n            this.hide(false);\n            window.setTimeout(() => this.show(title, message, colour), 700);\n            return;\n        }\n\n        // Displays the notification.\n        this.container.classList.add('active');\n        this.setPosition();\n\n        // Updates the title's colour.\n        this.title.style.color = colour;\n\n        // Sets the title and description.\n        this.title.innerHTML = title;\n        this.description.innerHTML = message;\n\n        // Clear the timeout if it exists.\n        clearTimeout(this.timeout!);\n\n        // Starts a timeout.\n        this.timeout = window.setTimeout(() => this.hide(false), 7000);\n    }\n\n    /**\n     * Override for hiding the notification. We move the notification outside the\n     * screen area and remove its active element.\n     */\n\n    public override hide(ignore = true): void {\n        if (ignore) return;\n\n        // Hides the notification.\n        this.container.classList.remove('active');\n        this.container.style.top = '100%';\n    }\n\n    /**\n     * Updates the position of the notification.\n     */\n\n    public override resize(): void {\n        // Don't update unless visible.\n        if (!this.isVisible()) return;\n\n        this.setPosition();\n    }\n\n    /**\n     * Override for whether or not the notification is\n     * currently visible. Notifications are checked by\n     * verifying the class list instead of body display.\n     * @returns Whether the class list contains the active\n     * element.\n     */\n\n    public override isVisible(): boolean {\n        return this.container.classList.contains('active');\n    }\n\n    /**\n     * Calculates the positioning of the notification\n     * based on the current screen size.\n     * @returns The window's size minus the notification's\n     * height. This places the notification at the bottom\n     * of the screen.\n     */\n\n    private getPosition(): number {\n        return window.innerHeight - this.container.offsetHeight;\n    }\n\n    /**\n     * Updates the notification's body positioning relative to the screen.\n     */\n\n    private setPosition(): void {\n        this.container.style.top = `${this.getPosition()}px`;\n    }\n}\n","import Menu from './menu';\n\nimport type Game from '../game';\n\nexport default class Settings extends Menu {\n    private musicSlider: HTMLInputElement = document.querySelector('#music')!;\n    private soundSlider: HTMLInputElement = document.querySelector('#sound')!;\n    private brightnessSlider: HTMLInputElement = document.querySelector('#brightness')!;\n\n    private audioEnabledCheckbox: HTMLInputElement = document.querySelector(\n        '#audio-enabled-checkbox > input'\n    )!;\n    private lowPowerCheckbox: HTMLInputElement = document.querySelector(\n        '#low-power-checkbox > input'\n    )!;\n    private debugCheckbox: HTMLInputElement = document.querySelector(\n        '#debug-mode-checkbox > input'\n    )!;\n    private showNamesCheckbox: HTMLInputElement = document.querySelector(\n        '#show-names-checkbox > input'\n    )!;\n    private showLevelsCheckbox: HTMLInputElement = document.querySelector(\n        '#show-levels-checkbox > input'\n    )!;\n    private disableCachingCheckbox: HTMLInputElement = document.querySelector(\n        '#disable-region-caching-checkbox > input'\n    )!;\n\n    public constructor(private game: Game) {\n        super('#settings-page', undefined, '#settings-button');\n\n        this.musicSlider.addEventListener('input', this.handleMusic.bind(this));\n        this.soundSlider.addEventListener('input', this.handleSoundVolume.bind(this));\n        this.brightnessSlider.addEventListener('input', this.handleBrightness.bind(this));\n\n        this.audioEnabledCheckbox.addEventListener('change', this.handleAudioEnabled.bind(this));\n        this.lowPowerCheckbox.addEventListener('change', this.handleLowPower.bind(this));\n        this.debugCheckbox.addEventListener('change', this.handleDebug.bind(this));\n        this.showNamesCheckbox.addEventListener('change', this.handleName.bind(this));\n        this.showLevelsCheckbox.addEventListener('change', this.handleLevel.bind(this));\n        this.disableCachingCheckbox.addEventListener('change', this.handleCaching.bind(this));\n\n        this.load();\n    }\n\n    /**\n     * Loads all the information about the sliders and checkboxes from the local storage.\n     * We call all the handler functions here to ensure that the associated functions are\n     * called without having them import the settings page and create a spaghetti code situation.\n     * The settings page lives independently of the game and calls functions as needed.\n     */\n\n    private load(): void {\n        let settings = this.game.storage.getSettings();\n\n        this.musicSlider.value = settings.musicVolume?.toString();\n        this.soundSlider.value = settings.soundVolume?.toString();\n        this.brightnessSlider.value = settings.brightness?.toString();\n\n        this.audioEnabledCheckbox.checked = settings.audioEnabled;\n        this.lowPowerCheckbox.checked = settings.lowPowerMode;\n        this.debugCheckbox.checked = settings.debugMode;\n        this.showNamesCheckbox.checked = settings.showNames;\n        this.showLevelsCheckbox.checked = settings.showLevels;\n        this.disableCachingCheckbox.checked = settings.disableCaching;\n\n        // Update brightness value.\n        this.handleBrightness();\n\n        // Update debugging\n        this.handleDebug();\n\n        // Update camera once loaded.\n        this.handleLowPower();\n\n        // Update the renderer for names and levels\n        this.handleName();\n        this.handleLevel();\n    }\n\n    /**\n     * Handler for when the music input slider changes, sets the value into the local storage.\n     */\n\n    private handleMusic(): void {\n        this.game.storage.setMusicVolume(this.musicSlider.valueAsNumber);\n        this.game.audio.updateVolume();\n    }\n\n    /**\n     * Handler for when the Sound slider changes, updates the value in the local storage.\n     */\n\n    private handleSoundVolume(): void {\n        this.game.storage.setSoundVolume(this.soundSlider.valueAsNumber);\n    }\n\n    /**\n     * Handler for the brightness slider when it undergoes a change. Relays\n     * to both the renderer and the storage system that an update has commenced.\n     */\n\n    private handleBrightness(): void {\n        this.game.storage.setBrightness(this.brightnessSlider.valueAsNumber);\n        this.game.renderer.setBrightness(this.brightnessSlider.valueAsNumber);\n    }\n\n    /**\n     * Handler for when the sound checkbox is toggled.\n     */\n\n    private handleAudioEnabled(): void {\n        this.game.storage.setAudioEnabled(this.audioEnabledCheckbox.checked);\n        this.game.audio.updateVolume();\n    }\n\n    /**\n     * Handler for when the low power checkbox is toggled.\n     */\n\n    private handleLowPower(): void {\n        this.game.storage.setLowPowerMode(this.lowPowerCheckbox.checked);\n\n        this.game.renderer.animateTiles = !this.lowPowerCheckbox.checked;\n\n        if (this.lowPowerCheckbox.checked) this.game.camera.decenter();\n        else {\n            // Force camera to recenter on the player.\n            this.game.camera.center();\n            this.game.camera.centreOn(this.game.player);\n            this.game.renderer.updateAnimatedTiles();\n        } // Remove the camera from the player.\n    }\n\n    /**\n     * Handler for when the debug checkbox is toggled.\n     */\n\n    private handleDebug(): void {\n        this.game.storage.setDebug(this.debugCheckbox.checked);\n        this.game.renderer.debugging = this.debugCheckbox.checked;\n    }\n\n    /**\n     * Handler for when the name checkbox is toggled.\n     */\n\n    private handleName(): void {\n        this.game.storage.setShowNames(this.showNamesCheckbox.checked);\n        this.game.renderer.drawNames = this.showNamesCheckbox.checked;\n    }\n\n    /**\n     * Handler for when the level checkbox is toggled.\n     */\n\n    private handleLevel(): void {\n        this.game.storage.setShowLevels(this.showLevelsCheckbox.checked);\n        this.game.renderer.drawLevels = this.showLevelsCheckbox.checked;\n    }\n\n    /**\n     * Disables the region caching checkbox.\n     */\n\n    private handleCaching(): void {\n        this.game.storage.setDisableCaching(this.disableCachingCheckbox.checked);\n    }\n}\n","import Menu from './menu';\n\nimport Util from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type { Bonuses, Stats } from '@kaetram/common/types/item';\nimport type SpritesController from '../controllers/sprites';\nimport type Player from '../entity/character/player/player';\n\ntype UnequipCallback = (type: Modules.Equipment) => void;\n\nexport default class Equipments extends Menu {\n    // Player image elements\n    private playerArmour: HTMLElement = document.querySelector('#player-image-armour')!;\n    private playerWeapon: HTMLElement = document.querySelector('#player-image-weapon')!;\n\n    // Equipment slots elements\n    private weapon: HTMLElement = document.querySelector('.equip-weapon-slot')!;\n    private weaponSkin: HTMLElement = document.querySelector('.equip-weapon-skin-slot')!;\n    private armour: HTMLElement = document.querySelector('.equip-armour-slot')!;\n    private armourSkin: HTMLElement = document.querySelector('.equip-armour-skin-slot')!;\n    private pendant: HTMLElement = document.querySelector('.equip-pendant-slot')!;\n    private ring: HTMLElement = document.querySelector('.equip-ring-slot')!;\n    private boots: HTMLElement = document.querySelector('.equip-boots-slot')!;\n    private arrow: HTMLElement = document.querySelector('.equip-arrows-slot')!;\n\n    // Counts\n    private arrowsCount: HTMLElement = document.querySelector('#arrows-count')!;\n\n    // Navigation elements\n    private previous: HTMLElement = document.querySelector('#player-image-navigator > .previous')!;\n    private next: HTMLElement = document.querySelector('#player-image-navigator > .next')!;\n\n    // Stats elements\n    private attackStats: HTMLElement = document.querySelector('#attack-stats')!;\n    private defenseStats: HTMLElement = document.querySelector('#defense-stats')!;\n    private bonuses: HTMLElement = document.querySelector('#bonuses')!;\n\n    // Class properties\n    private imageOrientation: Modules.Orientation = Modules.Orientation.Down;\n\n    private unequipCallback?: UnequipCallback;\n\n    public constructor(private player: Player, private sprites: SpritesController) {\n        super('#equipments', '#close-equipments', '#equipment-button');\n\n        // Navigation event listeners.\n        this.previous.addEventListener('click', () => this.handleNavigation('previous'));\n        this.next.addEventListener('click', () => this.handleNavigation('next'));\n\n        // Equipment slot event listeners -- definitely not stolen from the state page :)\n        this.weapon.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Weapon)\n        );\n        this.weaponSkin.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.WeaponSkin)\n        );\n        this.armour.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Armour)\n        );\n        this.armourSkin.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.ArmourSkin)\n        );\n        this.pendant.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Pendant)\n        );\n        this.ring.addEventListener('click', () => this.unequipCallback?.(Modules.Equipment.Ring));\n        this.boots.addEventListener('click', () => this.unequipCallback?.(Modules.Equipment.Boots));\n        this.arrow.addEventListener('click', () =>\n            this.unequipCallback?.(Modules.Equipment.Arrows)\n        );\n    }\n\n    /**\n     * Synchronizes the equipment screen with the player's equipment data.\n     */\n\n    public override synchronize(): void {\n        this.loadStats();\n        this.loadPlayerImage();\n\n        // Synchronize equipment data\n        this.weapon.style.backgroundImage = Util.getImageURL(this.player.getWeapon().key);\n        this.weaponSkin.style.backgroundImage = Util.getImageURL(this.player.getWeaponSkin().key);\n        // Cloth armour shouldn't be displayed in the UI.\n        this.armour.style.backgroundImage = Util.getImageURL(\n            this.player.getArmour().key === 'clotharmor' ? '' : this.player.getArmour().key\n        );\n        this.armourSkin.style.backgroundImage = Util.getImageURL(this.player.getArmourSkin().key);\n        this.pendant.style.backgroundImage = Util.getImageURL(this.player.getPendant().key);\n        this.ring.style.backgroundImage = Util.getImageURL(this.player.getRing().key);\n        this.boots.style.backgroundImage = Util.getImageURL(this.player.getBoots().key);\n        this.arrow.style.backgroundImage = Util.getImageURL(this.player.getArrows().key);\n\n        // Synchronize arrow count\n        let arrowCount = this.player.getArrows().count;\n\n        this.arrowsCount.innerHTML = arrowCount < 1 ? '' : `+${arrowCount}`;\n    }\n\n    /**\n     * Reload the image every time we resize the screen.\n     */\n\n    public override resize(): void {\n        this.loadPlayerImage();\n    }\n\n    /**\n     * Handles the navigation arrows. We just change the orientation and then update the player image.\n     */\n\n    private handleNavigation(direction: 'next' | 'previous'): void {\n        let orientations = [\n                Modules.Orientation.Left,\n                Modules.Orientation.Up,\n                Modules.Orientation.Right,\n                Modules.Orientation.Down\n            ],\n            index = orientations.indexOf(this.imageOrientation);\n\n        switch (direction) {\n            case 'previous': {\n                index = index === 0 ? orientations.length - 1 : index - 1;\n                break;\n            }\n\n            case 'next': {\n                index = index === orientations.length - 1 ? 0 : index + 1;\n                break;\n            }\n        }\n\n        this.imageOrientation = orientations[index];\n\n        this.loadPlayerImage();\n    }\n\n    /**\n     * Adds up all the attack, defense, and bonuses from all the equipments and displays them.\n     */\n\n    private loadStats(): void {\n        let attackStats: Stats = Util.getEmptyStats(),\n            defenseStats: Stats = Util.getEmptyStats(),\n            bonuses: Bonuses = Util.getEmptyBonuses();\n\n        // iterate through all the equipments and add up the stats.\n        for (let equipment of Object.values(this.player.equipments)) {\n            if (!equipment.exists()) continue;\n\n            attackStats.crush += equipment.attackStats.crush;\n            attackStats.slash += equipment.attackStats.slash;\n            attackStats.stab += equipment.attackStats.stab;\n            attackStats.archery += equipment.attackStats.archery;\n            attackStats.magic += equipment.attackStats.magic;\n\n            defenseStats.crush += equipment.defenseStats.crush;\n            defenseStats.slash += equipment.defenseStats.slash;\n            defenseStats.stab += equipment.defenseStats.stab;\n            defenseStats.archery += equipment.defenseStats.archery;\n            defenseStats.magic += equipment.defenseStats.magic;\n\n            bonuses.accuracy += equipment.bonuses.accuracy;\n            bonuses.strength += equipment.bonuses.strength;\n            bonuses.archery += equipment.bonuses.archery;\n            bonuses.magic += equipment.bonuses.magic;\n        }\n\n        let stats = ['Crush', 'Slash', 'Stab', 'Archery', 'Magic'],\n            statBonuses = ['Accuracy', 'Strength', 'Archery', 'Magic'];\n\n        for (let stat of stats) {\n            let lStat = stat.toLowerCase(),\n                attackElement = this.attackStats.querySelector(`.${lStat.toLowerCase()}`)!,\n                defenseElement = this.defenseStats.querySelector(`.${lStat.toLowerCase()}`)!,\n                attackStat = attackStats[lStat as keyof Stats],\n                defenseStat = defenseStats[lStat as keyof Stats];\n\n            attackElement.textContent = `${stat}: ${attackStat > 0 ? '+' : ''}${attackStat}`;\n            defenseElement.textContent = `${stat}: ${defenseStat > 0 ? '+' : ''}${defenseStat}`;\n        }\n\n        for (let bonus of statBonuses) {\n            let lBonus = bonus.toLowerCase(),\n                bonusElement = this.bonuses.querySelector(`.${lBonus.toLowerCase()}`)!,\n                bonusStat = bonuses[lBonus as keyof Bonuses];\n\n            bonusElement.textContent = `${bonus}: ${bonusStat > 0 ? '+' : ''}${bonusStat}`;\n        }\n    }\n\n    /**\n     * Prepares the player image that is displayed in the equipment screen. We pick both the\n     * armour and the weapon and overlay them on top of each other.\n     */\n\n    private loadPlayerImage(): void {\n        let armourUrl = `url(\"/img/sprites/${this.player.getArmour().key}.png\")`,\n            armourSprite = this.player.sprite,\n            isFlipped = this.imageOrientation === Modules.Orientation.Left,\n            index = this.getOrientationIndex();\n\n        if (!armourSprite) return;\n\n        // Set the player armour sprite.\n        this.playerArmour.style.backgroundImage = armourUrl;\n        this.playerArmour.style.backgroundPosition = `0 -${index * armourSprite.height}px`;\n\n        /**\n         * If the player has a weapon we do some fancy math, otherwise we remove the weapon\n         * element's background image.\n         */\n\n        if (this.player.hasWeapon()) {\n            let weaponUrl = `url(\"/img/sprites/${this.player.getWeapon().key}.png\")`,\n                weaponSprite = this.sprites.get(this.player.getWeapon().key),\n                offsetX = Math.floor(weaponSprite.offsetX / 2),\n                offsetY = Math.floor(weaponSprite.offsetY / 2);\n\n            // Since weapons have varying widths and heights, we update every time we load the image.\n            this.playerWeapon.style.width = `${weaponSprite.width}px`;\n            this.playerWeapon.style.height = `${weaponSprite.height}px`;\n\n            // Offset by the sprite x and y offsets\n            this.playerWeapon.style.marginLeft = `${offsetX}px`;\n            this.playerWeapon.style.marginTop = `${offsetY}px`;\n\n            // Set the background image and position.\n            this.playerWeapon.style.backgroundImage = weaponUrl;\n            this.playerWeapon.style.backgroundPosition = `0 -${index * weaponSprite.height}px`;\n        } else this.playerWeapon.style.backgroundImage = 'none';\n\n        // Flip the player image if we are rendering the right orientation.\n        this.playerArmour.style.transform = `scaleX(${isFlipped ? -1 : 1})`;\n        this.playerWeapon.style.transform = `scaleX(${isFlipped ? -1 : 1})`;\n    }\n\n    /**\n     * Orientation grabs the y frame index of the sprite in its sprite sheet. The left and right\n     * orientations are the same since we just flip the sprite.\n     * @returns A number representing the y frame index of the sprite in its sprite sheet.\n     */\n\n    private getOrientationIndex(): number {\n        switch (this.imageOrientation) {\n            case Modules.Orientation.Left:\n            case Modules.Orientation.Right: {\n                return 1;\n            }\n\n            case Modules.Orientation.Up: {\n                return 4;\n            }\n\n            case Modules.Orientation.Down: {\n                return 7;\n            }\n        }\n    }\n\n    /**\n     * Callback for when we click on an equipment slot.\n     * @param callback Contains the slot type we are selecting.\n     */\n\n    public onUnequip(callback: UnequipCallback): void {\n        this.unequipCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport { Opcodes } from '@kaetram/common/network';\n\nimport type Player from '../entity/character/player/player';\nimport type Task from '../entity/character/player/task';\n\nexport default class Achievements extends Menu {\n    // List where all the achievement objects are contained.\n    private list: HTMLUListElement = document.querySelector('#achievements-container > ul')!;\n\n    public constructor(private player: Player) {\n        super('#achievements', '#close-achievements', '#achievements-button');\n    }\n\n    /**\n     * We use the opcode from the achievement packet in order to determine what we are doing. If a batch\n     * opcode is received then we create the list. Otherwise we extract the id of the achievement and update\n     * it individually.\n     */\n\n    public handle(opcode: Opcodes.Achievement, key?: string): void {\n        // Handle achievement batch creation.\n        if (opcode === Opcodes.Achievement.Batch) {\n            for (let key in this.player.achievements)\n                this.createAchievement(this.player.achievements[key], key);\n\n            return;\n        }\n\n        // Grab the task by key from the player. This will have been recently updated.\n        let task = this.player.achievements[key!];\n\n        // No task found.\n        if (!task) return;\n\n        // Secret tasks don't exist until they are discovered.\n        if (task.secret) return this.createAchievement(task, key!);\n\n        // Update the achievement element.\n        this.update(this.list.children[task.id] as HTMLLIElement, task);\n    }\n\n    /**\n     * Creates an achievement based on the task object provided. A task object is used\n     * for either quests or achievements. In this case we are only using it for achievements.\n     * @param task Contains information about the achievement we are creating.\n     * @param key The key of the achievement we are creating.\n     * @returns A list element containing the achievement information.\n     */\n\n    private createAchievement(task: Task, key: string): void {\n        let element = document.createElement('li'),\n            coin = document.createElement('div'),\n            title = document.createElement('p'),\n            description = document.createElement('p');\n\n        // Adds the achievement element styling.\n        element.classList.add('achievement-element');\n\n        // Adds the classes for achievement title styling.\n        title.classList.add('stroke');\n        title.classList.add('achievement-title');\n\n        // Adds the classes for achievement description.\n        description.classList.add('achievement-description');\n\n        /**\n         * We add the achievement task information onto the title and description upon\n         * creating the element. If the task is completed then the name and description\n         * will display, otherwise question marks will appear.\n         */\n\n        title.innerHTML = task.name;\n        description.innerHTML = task.description;\n\n        // Add the title and description elements onto the achievement element.\n        element.append(title);\n        element.append(description);\n\n        if (task.isFinished()) {\n            // Title is displayed as gold if the achievement is completed.\n            title.style.color = '#fcda1d';\n\n            // Styling for the coin element.\n            coin.classList.add('coin', task.secret ? `coin-${key}` : 'coin-default');\n\n            // Add the coin element.\n            element.prepend(coin);\n        } else if (task.isStarted())\n            // Create and add the progress to the achievement element.\n            element.append(this.createProgress(task));\n\n        this.list.append(element);\n    }\n\n    /**\n     * Creates a progress text element in the bottom-right corner of the achievement element.\n     * @param task Task we are using the base the progress off of.\n     * @returns A paragraph element containing the progress information.\n     */\n\n    private createProgress(task: Task): HTMLElement {\n        let progress = document.createElement('p');\n\n        // Add styling to the progress.\n        progress.classList.add('stroke');\n        progress.classList.add('achievement-progress');\n\n        // Hide the progress if task is not started and we are creating a progress object anyway.\n        progress.innerHTML = task.isStarted() ? `${task.stage - 1}/${task.stageCount - 1}` : '';\n\n        return progress;\n    }\n\n    /**\n     * Updates a specified element with the task information provided.\n     * @param element Element we are updating.\n     * @param task Task information we are using to update the element.\n     */\n\n    private update(element: HTMLLIElement, task: Task): void {\n        let title = element.querySelector<HTMLElement>('.achievement-title')!,\n            description = element.querySelector<HTMLElement>('.achievement-description')!,\n            progress = element.querySelector<HTMLElement>('.achievement-progress')!;\n\n        /**\n         * Synchronize the information from the task with that\n         * of the achievement element.\n         */\n\n        title.innerHTML = task.name;\n        description.innerHTML = task.description;\n\n        if (task.isFinished()) {\n            // Title is displayed as gold if the achievement is completed.\n            title.style.color = '#fcda1d';\n\n            // Remove the progression element.\n            progress?.remove();\n\n            // Styling for the coin element.\n            let coin = document.createElement('div');\n\n            coin.classList.add('coin');\n            coin.classList.add('coin-default');\n\n            // Add the coin element to the beginning of the children list.\n            element.prepend(coin);\n        } else {\n            // Title is displayed as white if the achievement is not completed.\n            title.style.color = '#fff';\n\n            // Remove the coin element.\n            let coin = element.querySelector('.coin')!;\n\n            coin?.remove();\n\n            // No progress element found.\n            if (progress)\n                progress.innerHTML = task.isStarted()\n                    ? `${task.stage - 1}/${task.stageCount - 1}`\n                    : '';\n            else {\n                progress = this.createProgress(task);\n                element.append(progress);\n            }\n        }\n    }\n}\n","import Menu from './menu';\n\nimport { Opcodes } from '@kaetram/common/network';\n\nimport type Player from '../entity/character/player/player';\nimport type Task from '../entity/character/player/task';\n\nexport default class Quests extends Menu {\n    // Contains the list of all the quests and their respective status.\n    private list: HTMLUListElement = document.querySelector('#quests-container > ul')!;\n\n    // Contains information about a selected quest.\n    private title: HTMLElement = document.querySelector('#quest-log-title')!;\n    private shortDescription: HTMLElement = document.querySelector('#quest-log-shortdesc')!;\n    private description: HTMLElement = document.querySelector('#quest-log-description')!;\n    private rewards: HTMLElement = document.querySelector('#quest-log-rewards')!;\n\n    public constructor(private player: Player) {\n        super('#quests', '#close-quests', '#quests-button');\n    }\n\n    /**\n     * Handles the incoming packets from the server and synchronizes the quest list.\n     * @param opcode Type of action we are performing on the quest list.\n     * @param key Optional parameter passed when a quest progresses.\n     */\n\n    public handle(opcode: Opcodes.Quest, key = ''): void {\n        switch (opcode) {\n            case Opcodes.Quest.Batch: {\n                for (let quest of Object.values(this.player.quests)) this.createElement(quest);\n\n                break;\n            }\n\n            case Opcodes.Quest.Progress: {\n                return this.handleProgress(key);\n            }\n        }\n\n        this.buildLog(this.player.quests.tutorial);\n    }\n\n    /**\n     * Updates the progress of a quest.\n     * @param key Used for identifying the quest.\n     */\n\n    private handleProgress(key: string): void {\n        if (!key) return;\n\n        let quest = this.player.quests[key];\n\n        if (!quest) return;\n\n        let element = this.list.children[quest.id],\n            nameElement = element.querySelector('p')!;\n\n        if (!nameElement) return;\n\n        nameElement.classList.remove('green', 'yellow');\n\n        // Update colours of the name relative to its completion\n        if (quest.isFinished()) nameElement.classList.add('green');\n        else if (quest.isStarted()) nameElement.classList.add('yellow');\n    }\n\n    /**\n     * Creates a quest element and adds it to the list.\n     * @param questName The name of the quest.\n     */\n\n    private createElement(quest: Task): void {\n        let element = document.createElement('li'),\n            name = document.createElement('p');\n\n        // Add the slot class to the element.\n        element.classList.add('container-slot');\n\n        // Add styling to the friend name element.\n        name.classList.add('stroke');\n\n        // Set the quest name.\n        name.innerHTML = quest.name;\n\n        // Update colours of the name relative to its completion\n        if (quest.isFinished()) name.classList.add('green');\n        else if (quest.isStarted()) name.classList.add('yellow');\n\n        // Add the name element to the element.\n        element.append(name);\n\n        this.list.append(element);\n\n        element.addEventListener('click', () => this.buildLog(quest));\n    }\n\n    /**\n     * Uses the information from the quest to create the quest description.\n     * @param quest The quest we are using to build the log.\n     */\n\n    private buildLog(quest: Task): void {\n        let [shortDescription, description] = quest.description.split('|');\n\n        this.title.innerHTML = quest.name;\n        this.shortDescription.innerHTML = shortDescription;\n        this.description.innerHTML = description;\n\n        if (quest.rewards) this.rewards.innerHTML = quest.rewards.join('<br>');\n    }\n}\n","import Menu from './menu';\n\nimport Util from '../utils/util';\nimport { isLargeScreen } from '../utils/detect';\n\nimport { Opcodes } from '@kaetram/common/network';\n\nimport type Player from '../entity/character/player/player';\n\ntype ConfirmCallback = (username: string, remove?: boolean) => void;\n\nexport default class Friends extends Menu {\n    private page: HTMLDivElement = document.querySelector('#friends-page')!;\n\n    // List where we store all the friends.\n    private list: HTMLUListElement = document.querySelector('#friends-page > ul')!;\n\n    // Primary buttons (for adding and removing friends).\n    private addButton: HTMLButtonElement = document.querySelector('#add-friend')!;\n    private removeButton: HTMLButtonElement = document.querySelector('#remove-friend')!;\n\n    // Popup-related input and buttons.\n    private input: HTMLInputElement = document.querySelector('#popup-friend-input')!;\n    private confirm: HTMLButtonElement = document.querySelector('#popup-friend-confirm')!;\n    private cancel: HTMLButtonElement = document.querySelector('#popup-friend-cancel')!;\n\n    // Popup element\n    private popup: HTMLDivElement = document.querySelector('#popup-container')!;\n\n    // Callbacks\n    private confirmCallback?: ConfirmCallback;\n    private messageCallback?: (username: string) => void;\n\n    // Booleans\n    private popupActive = false;\n    private removeActive = false;\n\n    public constructor(private player: Player) {\n        super('#friends-container', undefined, '#friends-button');\n\n        this.addButton.addEventListener('click', () => this.showPopup());\n        this.removeButton.addEventListener('click', () => this.showPopup(true));\n\n        this.confirm.addEventListener('click', this.handleConfirm.bind(this));\n        this.cancel.addEventListener('click', this.hidePopup.bind(this));\n    }\n\n    public override resize(): void {\n        for (let key in this.player.friends) {\n            let friend = this.player.friends[key],\n                element = this.list.children[friend.id];\n\n            if (!element) return;\n\n            let name = element.children[0] as HTMLElement,\n                maxLength = this.getMaxLength();\n\n            if (friend.username.length > maxLength)\n                name.innerHTML = `${friend.username.slice(0, maxLength)}...`;\n        }\n    }\n\n    /**\n     * Function is called whenever we receive the initial friend list or subsequent\n     * updates from the server regarding adding, removing, or status changes.\n     * @param opcode The type of action we are handling.\n     * @param username (Only for add/remove/update) The username of the friend we are handling.\n     * @param status (Only for add/update) The world that the friend is in.\n     */\n\n    public handle(opcode: Opcodes.Friends, username = '', status = false, serverId = -1): void {\n        switch (opcode) {\n            case Opcodes.Friends.List: {\n                for (let friend of Object.values(this.player.friends))\n                    this.createElement(friend.username, friend.online, friend.serverId);\n\n                break;\n            }\n\n            case Opcodes.Friends.Add: {\n                return this.createElement(username, status, serverId);\n            }\n\n            case Opcodes.Friends.Remove: {\n                return this.removeElement(username);\n            }\n\n            case Opcodes.Friends.Status: {\n                return this.updateStatus(username, status, serverId);\n            }\n        }\n    }\n\n    /**\n     * Uses the input field to add a friend and sends a packet to the server.\n     */\n\n    private handleConfirm(): void {\n        let username = this.input.value,\n            remove = this.removeActive; // Before we clear its status.\n\n        // Clear the input field.\n        this.input.value = '';\n\n        // Hide the popup.\n        this.hidePopup();\n\n        // Client-sided sanitization for the input field.\n        if (!username || username.length > 32) return;\n\n        // Send the packet to the server.\n        this.confirmCallback?.(username, remove);\n    }\n\n    /**\n     * Event handler for when the user clicks on a friend's name.\n     */\n\n    private handleMessage(username: string): void {\n        if (!this.player.friends[username].online) return;\n\n        this.messageCallback?.(username);\n    }\n\n    /**\n     * Handles the keydown event for the friends menu.\n     * @param key The key that was pressed.\n     */\n\n    public keyDown(key: string): void {\n        if (key === 'Escape') this.hidePopup();\n        if (key === 'Enter' && this.input.value !== '') this.handleConfirm();\n    }\n\n    /**\n     * Show the popup and dim the background.\n     */\n\n    private showPopup(remove = false): void {\n        this.popupActive = true;\n        this.removeActive = remove;\n\n        this.input.placeholder = remove ? 'Enter name to remove...' : 'Enter name to add...';\n\n        Util.fadeIn(this.popup);\n\n        this.page.classList.add('dimmed');\n\n        this.input.focus();\n    }\n\n    /**\n     * Hide the popup and remove the dim from the background.\n     */\n\n    private hidePopup(): void {\n        this.popupActive = false;\n        this.removeActive = false;\n\n        Util.fadeOut(this.popup);\n\n        this.page.classList.remove('dimmed');\n    }\n\n    /**\n     * Creates a mew HTML element for the friend slot.\n     * @param username The username of the friend.\n     */\n\n    private createElement(username: string, online = false, serverId = -1): void {\n        let element = document.createElement('li'),\n            name = document.createElement('p'),\n            world = document.createElement('p');\n\n        // Add styling to the friend slot element.\n        element.classList.add('container-slot');\n\n        // Add styling to the friend name element.\n        name.classList.add('stroke', 'left');\n\n        // Add styling to the world element.\n        world.classList.add('stroke', 'right');\n\n        // If the friend is online, add the online class (makes the username green).\n        if (online) world.classList.add(this.player.serverId === serverId ? 'green' : 'yellow');\n\n        // Set the name of the friend.\n        let maxLength = this.getMaxLength();\n\n        if (username.length > maxLength) username = `${username.slice(0, maxLength)}...`;\n\n        name.innerHTML = Util.formatName(username);\n\n        // Update the world information.\n        world.innerHTML = online ? `World ${serverId}` : 'Offline';\n\n        // Add the name element to the friend slot element.\n        element.append(name, world);\n\n        // Add the friend slot element to the friend list.\n        this.list.append(element);\n\n        element.addEventListener('click', () => this.handleMessage(username));\n    }\n\n    /**\n     * Grabs the friend from the list of friends and removes the element from the DOM.\n     * @param username The username of the player we are removing.\n     */\n\n    private removeElement(username: string): void {\n        let friend = this.player.friends[username];\n\n        // No friend has been found.\n        if (!friend) return;\n\n        // Remove the friend from the UI list.\n        this.list.children[friend.id].remove();\n\n        // Remove the friend from the player's friend list.\n        delete this.player.friends[username];\n    }\n\n    /**\n     * Grabs the friend from the list of friends and updates the status.\n     * @param username Username of the friend we are updating.\n     * @param online The online status of the friend.\n     * @param serverId The world id that the friend is on.\n     */\n\n    private updateStatus(username: string, online: boolean, serverId: number): void {\n        let friend = this.player.friends[username];\n\n        // No friend has been found.\n        if (!friend) return;\n\n        // Grab the friend's name element.\n        let world = this.list.children[friend.id].children[1] as HTMLParagraphElement;\n\n        // If the friend is online, add the online class (makes the username green).\n        if (online) {\n            world.classList.add(this.player.serverId === serverId ? 'green' : 'yellow');\n            world.innerHTML = `World ${friend.serverId}`;\n        } else {\n            world.classList.remove('green', 'yellow');\n            world.innerHTML = 'Offline';\n        }\n    }\n\n    /**\n     * @returns Whether or not the popup is visible.\n     */\n\n    public isPopupActive(): boolean {\n        return this.popupActive;\n    }\n\n    /**\n     * Large devices can fit more text so we truncate less of the username string.\n     * @returns The maximum length of the username based on the screen size.\n     */\n\n    private getMaxLength(): number {\n        return isLargeScreen() ? 16 : 10;\n    }\n\n    /**\n     * Confirm callback is called whenever the player presses the confirm button.\n     * @param callback Contains the username and the type of action (add/remove).\n     */\n\n    public onConfirm(callback: ConfirmCallback): void {\n        this.confirmCallback = callback;\n    }\n\n    /**\n     * Event handler for when a friend is clicked. Their username is passed to\n     * chat handler.\n     * @param callback Contains username of the friend.\n     */\n\n    public onMessage(callback: (username: string) => void): void {\n        this.messageCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport Util from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Inventory from './inventory';\nimport type Player from '../entity/character/player/player';\n\ninterface PlayerSlot extends HTMLElement {\n    inventoryIndex?: number;\n}\n\ntype SelectCallback = (type: Modules.ContainerType, index: number, count?: number) => void;\n\nexport default class Trade extends Menu {\n    public override hideOnShow = false;\n\n    private inventoryList: HTMLUListElement = document.querySelector(\n        '#trade-inventory-slots > ul'\n    )!;\n\n    // Where we visually display the changes to the trade.\n    private playerSlots: HTMLUListElement = document.querySelector('#trade-player-slots > ul')!;\n    private otherPlayerSlots: HTMLUListElement = document.querySelector(\n        '#trade-oplayer-slots > ul'\n    )!;\n\n    private playerName: HTMLElement = document.querySelector('#trade-player-name')!;\n    private otherPlayerName: HTMLElement = document.querySelector('#trade-oplayer-name')!;\n    private tradeStatus: HTMLElement = document.querySelector('#trade-status')!;\n\n    private acceptButton: HTMLButtonElement = document.querySelector('#trade-accept')!;\n\n    // Trade count dialog elements\n    public tradeDialog: HTMLElement = document.querySelector('#trade-count')!;\n    private tradeCount: HTMLInputElement = document.querySelector('#trade-count .dialog-count')!;\n    private tradeCountAccept: HTMLElement = document.querySelector('#trade-count .dialog-accept')!;\n    private tradeCountCancel: HTMLElement = document.querySelector('#trade-count .dialog-cancel')!;\n\n    private inventoryIndex = -1; // Index of the inventory slot that was last selected.\n\n    private selectCallback?: SelectCallback;\n    private acceptCallback?: () => void;\n    private closeCallback?: () => void;\n\n    public constructor(private inventory: Inventory) {\n        super('#trade-container', undefined, '#close-trade');\n\n        this.load();\n\n        // Send the accept callback when the accept button is clicked.\n        this.acceptButton.addEventListener('click', () => this.acceptCallback?.());\n\n        // Send the trade count when the accept button is clicked.\n        this.tradeCountAccept.addEventListener('click', () => this.sendTradeAmount());\n\n        // Close the trade count dialog when the cancel button is clicked.\n        this.tradeCountCancel.addEventListener('click', () => this.hideTradeAmountDialog());\n    }\n\n    /**\n     * Loads the empty inventory slots based on the size of the inventory.\n     * Creates an event listener for each slot that directs to `select()`.\n     */\n\n    public load(): void {\n        for (let i = 0; i < Modules.Constants.INVENTORY_SIZE; i++) {\n            // Inventory slots\n            this.inventoryList.append(\n                Util.createSlot(\n                    Modules.ContainerType.Inventory,\n                    i,\n                    this.select.bind(this),\n                    this.showTradeAmountDialog.bind(this)\n                )\n            );\n\n            // Player slots\n            this.playerSlots.append(\n                Util.createSlot(Modules.ContainerType.Trade, i, this.select.bind(this))\n            );\n\n            // Other player slots\n            this.otherPlayerSlots.append(Util.createSlot(Modules.ContainerType.Trade, i));\n        }\n    }\n\n    /**\n     * Handles pressing down a key while the dialogue is open. We redirect any keys\n     * from the keyboard into this class when the dialogue is open.\n     * @param key The key that was pressed.\n     */\n\n    public keyDown(key: string): void {\n        switch (key) {\n            case 'Escape': {\n                return this.hideTradeAmountDialog();\n            }\n\n            case 'Enter': {\n                return this.sendTradeAmount();\n            }\n        }\n    }\n\n    /**\n     * Synchronizes the slot data between the store and the inventory.\n     */\n\n    public override synchronize(): void {\n        if (!this.isVisible()) return;\n\n        this.inventory.forEachSlot((index: number, slot: HTMLElement) => {\n            let image = this.getElement(index).querySelector<HTMLElement>('.item-image')!,\n                count = this.getElement(index).querySelector<HTMLElement>('.item-count')!,\n                slotImage = slot.querySelector<HTMLElement>('.item-image')!;\n\n            if (!slotImage) return;\n\n            image.style.backgroundImage = slotImage.style.backgroundImage;\n            count.textContent = slot.textContent;\n        });\n    }\n\n    /**\n     * Override for the show method where we use information from the two players\n     * participating in the trading action to update the user interface.\n     * @param player The primary player (from our perspective) who is trading.\n     * @param otherPlayer The other player. For the other player, our player is the other player.\n     */\n\n    public override show(player: Player, otherPlayer: Player): void {\n        super.show();\n\n        this.synchronize();\n\n        // Update the player names\n        this.playerName.textContent = player.name;\n        this.otherPlayerName.textContent = otherPlayer.name;\n    }\n\n    /**\n     * Called when the player closes the trade menu.\n     * @param ignoreCallback Whether or not to ignore the close callback.\n     */\n\n    public override hide(ignoreCallback = false): void {\n        super.hide();\n\n        if (!ignoreCallback) this.closeCallback?.();\n\n        this.clearAll();\n\n        this.inventoryIndex = -1;\n        this.tradeStatus.innerHTML = '';\n    }\n\n    /**\n     * Adds an item to the trade menu.\n     * @param index The index of the item being added (if it is the current player adding the item).\n     * @param count The amount of the item being added.\n     * @param key The key of the item being added (if we are adding item of other player).\n     */\n\n    public override add(index: number, count: number, key: string, otherPlayer = false): void {\n        let slot = otherPlayer\n                ? this.otherPlayerSlots.children[index]\n                : this.playerSlots.children[index],\n            image = slot.querySelector<HTMLElement>('.item-image')!,\n            slotCount = slot.querySelector<HTMLElement>('.item-count')!;\n\n        // Reset the trade status when an update occurs\n        this.tradeStatus.innerHTML = '';\n        // Update the icon of the item that is being added.\n        image.style.backgroundImage = otherPlayer\n            ? Util.getImageURL(key)\n            : this.getElementImage(this.inventoryIndex);\n\n        // Update the count of the item that is being added.\n        slotCount.innerHTML = count > 1 ? Util.getCount(count) : '';\n\n        if (!otherPlayer) {\n            let itemCount = this.getElement(this.inventoryIndex).querySelector<HTMLElement>(\n                    '.item-count'\n                )!,\n                actualCount = this.inventory.getCount(this.inventoryIndex) - count;\n\n            // Store the inventory slot into the trade slot if it is the current player adding the item.\n            (slot as PlayerSlot).inventoryIndex = this.inventoryIndex;\n\n            // Remove the item if the count is lesser than 0 (we moved everything to the trade menu).\n            if (isNaN(actualCount) || actualCount < 1) return this.clearSlot(this.inventoryIndex);\n\n            // Update the remaining count of the item in the inventory.\n            itemCount.innerHTML = Util.getCount(actualCount);\n        }\n    }\n\n    /**\n     * Remove an item from the trade menu.\n     * @param index The index of the slot to remove the item from.\n     * @param otherPlayer Whether we are removing from the other player's trade menu.\n     */\n\n    public override remove(index: number, otherPlayer = false): void {\n        let slot = otherPlayer\n                ? this.otherPlayerSlots.children[index]\n                : this.playerSlots.children[index],\n            image = slot.querySelector<HTMLElement>('.item-image')!,\n            slotCount = slot.querySelector<HTMLElement>('.item-count')!;\n\n        // Add the item back into the inventory.\n        if (!otherPlayer) {\n            let inventoryIndex = (slot as PlayerSlot).inventoryIndex!;\n\n            this.setSlot(\n                inventoryIndex,\n                image.style.backgroundImage,\n                this.inventory.getCount(inventoryIndex)\n            );\n        }\n\n        // Clear the image and count of the slot.\n        image.style.backgroundImage = '';\n        slotCount.innerHTML = '';\n\n        this.tradeStatus.innerHTML = '';\n\n        this.inventoryIndex = -1;\n    }\n\n    /**\n     * Handles clicking the accept in the trade count dialog popup. Ensures the trade count\n     * is valid (client-sided) and then sends the trade amount to the server by creating a callback.\n     */\n\n    public sendTradeAmount(): void {\n        let count = this.tradeCount.valueAsNumber;\n\n        if (count < 1) return;\n\n        this.select(Modules.ContainerType.Inventory, this.inventoryIndex, count);\n\n        this.hideTradeAmountDialog();\n    }\n\n    /**\n     * Hides the description and shows the trade count dialog. Also\n     * focuses on the input field for the trade count dialog.\n     */\n\n    public showTradeAmountDialog(_type: Modules.ContainerType, index: number): void {\n        this.inventoryIndex = index;\n\n        Util.fadeIn(this.tradeDialog);\n\n        this.inventoryList.classList.add('dimmed');\n\n        this.tradeCount.value = '1';\n        this.tradeCount.focus();\n    }\n\n    /**\n     * Hides the drop dialog and brings back the description info.\n     */\n\n    private hideTradeAmountDialog(): void {\n        Util.fadeOut(this.tradeDialog);\n\n        this.inventoryList.classList.remove('dimmed');\n    }\n\n    /**\n     * Visually updates the text information in the trade with\n     * the information received from the server.\n     */\n\n    public accept(message?: string): void {\n        this.tradeStatus.innerHTML = message || '';\n    }\n\n    /**\n     * Initializes the selection process. A callback is created so that\n     * the menu controller can send specified request to the server.\n     * @param type Which container is being acted on (inventory or bank).\n     * @param index The index of the item being acted on.\n     */\n\n    private select(type: Modules.ContainerType, index: number, count?: number): void {\n        this.inventoryIndex = index;\n\n        this.selectCallback?.(type, index, count);\n    }\n\n    /**\n     * Grabs the HTMLElement at a specified index within the\n     * inventory slot list.\n     * @param index The index of the element to grab.\n     * @returns The HTMLElement at the specified index.\n     */\n\n    private getElement(index: number): HTMLElement {\n        return this.inventoryList.children[index].querySelector('div') as HTMLElement;\n    }\n\n    /**\n     * Grabs the item image of a specified slot.\n     * @param index The index of the slot to grab the image from.\n     * @returns The string of the css `backgroundImage` property.\n     */\n\n    private getElementImage(index: number): string {\n        let slot = this.getElement(index),\n            image = slot.querySelector<HTMLElement>('.item-image')!;\n\n        return image.style.backgroundImage;\n    }\n\n    /**\n     * @returns Whether or not the actions menu has the drop dialog visible.\n     */\n\n    public isInputDialogueVisible(): boolean {\n        return this.tradeDialog.style.display === 'block';\n    }\n\n    /**\n     * Clears a slot of the inventory at a specified index.\n     * @param index The slot in the inventory that we are clearing.\n     */\n\n    private clearSlot(index: number): void {\n        let slot = this.getElement(index),\n            image = slot.querySelector<HTMLElement>('.item-image')!,\n            count = slot.querySelector<HTMLElement>('.item-count')!;\n\n        image.style.backgroundImage = '';\n        count.innerHTML = '';\n    }\n\n    /**\n     * Clears both the player's slots and the other player's slots of any images\n     * or item counts that were previously set. This occurs when the trade is finalized.\n     */\n\n    private clearAll(): void {\n        // Clear the player's slots.\n        for (let i of this.playerSlots.children) {\n            let image = i.querySelector<HTMLElement>('.item-image')!,\n                count = i.querySelector<HTMLElement>('.item-count')!;\n\n            image.style.backgroundImage = '';\n            count.innerHTML = '';\n        }\n\n        // Clear the other player's slots.\n        for (let i of this.otherPlayerSlots.children) {\n            let image = i.querySelector<HTMLElement>('.item-image')!,\n                count = i.querySelector<HTMLElement>('.item-count')!;\n\n            image.style.backgroundImage = '';\n            count.innerHTML = '';\n        }\n    }\n\n    /**\n     * Sets the image slot and count at a specified index.\n     * @param index The index we are setting the slot at.\n     * @param image The image background url that we are setting.\n     * @param count The count of the item that we are setting.\n     */\n\n    private setSlot(index: number, image: string, count: number): void {\n        let slot = this.getElement(index),\n            slotImage = slot.querySelector<HTMLElement>('.item-image')!,\n            slotCount = slot.querySelector<HTMLElement>('.item-count')!;\n\n        slotImage.style.backgroundImage = image;\n        slotCount.innerHTML = Util.getCount(count);\n    }\n\n    /**\n     * Callback used for whenever a slot is selected. This is used\n     * by an external controller in order to make requests to the server.\n     * @param callback Contains the type of container that is\n     * being clicked, as well as the index of the slot.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n\n    /**\n     * Callback for when the player clicks the accept button.\n     */\n\n    public onAccept(callback: () => void): void {\n        this.acceptCallback = callback;\n    }\n\n    /**\n     * Callback for when the player closes the trade menu.\n     */\n\n    public onClose(callback: () => void): void {\n        this.closeCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type Player from '../entity/character/player/player';\nimport type Entity from '../entity/entity';\n\nexport default class Interact extends Menu {\n    // Contains the list of actions.\n    private list: HTMLUListElement = document.querySelector('#interact > ul')!;\n\n    private buttonCallback?: (menuAction: Modules.MenuActions) => void;\n    private closeCallback?: () => void;\n\n    public constructor(private player: Player) {\n        super('#interact');\n    }\n\n    /**\n     * Override for the show function. Takes a position as a parameter.\n     * @param position The mouse position (on the screen) where we will display the interact menu.\n     * @param entity The entity that the player is interacting with. Used to determine what actions to display.\n     * @param pvp Whether or not the player is in a pvp zone. Adds attack action to the player entity if true.\n     */\n\n    public override show(position: Position, entity: Entity, pvp = false): void {\n        this.clear();\n\n        let actions: Modules.MenuActions[] = [];\n\n        if (entity.isItem()) actions.push(Modules.MenuActions.Examine);\n\n        // Add attack interactions to all mob entities.\n        if (entity.isMob()) actions.push(Modules.MenuActions.Attack, Modules.MenuActions.Examine);\n\n        // Add the trade and follow interactions to all player entities.\n        if (entity.isPlayer()) {\n            // Use attack if player is in PvP\n            if (pvp) actions.push(Modules.MenuActions.Attack);\n            else actions.push(Modules.MenuActions.Follow);\n\n            // Add the trade action\n            actions.push(Modules.MenuActions.Trade);\n\n            // If we don't have the player added then add the add friend action.\n            if (!this.player.hasFriend(entity.name)) actions.push(Modules.MenuActions.AddFriend);\n        }\n\n        // Add all the actions to the list.\n        for (let action of actions) this.add(action);\n\n        // Display only if there's enough actions.\n        if (actions.length > 0) {\n            let x =\n                    position.x + this.container.offsetWidth > window.innerWidth\n                        ? window.innerWidth - this.container.offsetWidth\n                        : position.x,\n                y =\n                    position.y + this.container.offsetHeight > window.innerHeight\n                        ? window.innerHeight - this.container.offsetHeight\n                        : position.y;\n\n            this.container.style.left = `${x}px`;\n            this.container.style.top = `${y}px`;\n\n            super.show();\n        }\n    }\n\n    /**\n     * Override for the hide function which implements the hide callback.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        this.closeCallback?.();\n    }\n\n    /**\n     * Appends an action element to the list of actions.\n     * @param menuAction Enumeration containing the string text of the action.\n     */\n\n    public override add(menuAction: Modules.MenuActions): void {\n        let element = document.createElement('li');\n\n        // Set the type of action to the button element\n        element.classList.add('action-button', `action-${menuAction}`);\n\n        // Assign an action when the element is clicked.\n        element.addEventListener('click', () => this.buttonCallback!(menuAction));\n\n        this.list.append(element);\n    }\n\n    /**\n     * Removes all the `div` action elements from the list.\n     */\n\n    private clear(): void {\n        this.list.innerHTML = '';\n    }\n\n    /**\n     * Handles the press of one of the interact buttons.\n     * @param callback Contains the button that was pressed.\n     */\n\n    public onButton(callback: (menuAction: Modules.MenuActions) => void): void {\n        this.buttonCallback = callback;\n    }\n\n    /**\n     * Callback for when the interact menu has been hidden.\n     */\n\n    public onClose(callback: () => void): void {\n        this.closeCallback = callback;\n    }\n}\n","import Menu from './menu';\n\nimport log from '../lib/log';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type App from '../app';\n\ninterface SearchElement {\n    name: string;\n    key: string | number;\n    type: 'skill' | 'mob' | 'pvp' | '';\n}\n\ninterface ResultInfo {\n    _id: string;\n    experience?: number;\n    kills?: number;\n    cheater?: boolean;\n}\n\nexport default class Leaderboards extends Menu {\n    // Where we show all the possible leaderboards\n    private searchList: HTMLUListElement = document.querySelector('#leaderboards-search')!;\n\n    // Where we display the results from the selected list\n    private resultsList: HTMLUListElement = document.querySelector('#leaderboards-results')!;\n\n    // The search input\n    private search: HTMLInputElement = document.querySelector('#leaderboards-search-input')!;\n\n    // Search elements available (key is the search URL term, value is the name displayed).\n    private searchElements: SearchElement[] = [\n        { name: 'Total Experience', key: '', type: '' },\n        { name: 'PVP Kills', key: 'pvp', type: 'pvp' }\n    ];\n    private availableMobs: { [key: string]: string } = {};\n\n    public constructor(private app: App) {\n        super('#leaderboards', '#close-leaderboards', '#leaderboards-button');\n\n        this.search.addEventListener('input', this.handleInput.bind(this));\n\n        // Append all the skills to the search elements\n        for (let index of Modules.SkillsOrder)\n            this.searchElements.push({ name: Modules.Skills[index], key: index, type: 'skill' });\n\n        // Hub is not enabled, stop here.\n        if (!this.app.config.hub) {\n            this.load();\n            return\n        };\n\n        // Fetch the available mobs from the hub\n        fetch(`${this.app.config.hub}/leaderboards`)\n            .then((response: Response) => response.json())\n            .then((data) => {\n                if (data.availableMobs) {\n                    // Save the available mobs.\n                    this.availableMobs = data.availableMobs;\n\n                    // Append the name of the mobs to the search elements.\n                    for (let mob in this.availableMobs)\n                        this.searchElements.push({\n                            name: this.availableMobs[mob],\n                            key: mob,\n                            type: 'mob'\n                        });\n\n                    this.load();\n                }\n            })\n            .catch((error: Error) => {\n                log.error(error);\n            });\n    }\n\n    /**\n     * Loads the available search elements into an individual object. The object\n     * is then appended to the search list.\n     */\n\n    private load(): void {\n        // Clear the search list\n        this.searchList.innerHTML = '';\n\n        // Create a search element for each search element.\n        for (let element of this.searchElements) this.createSearchElement(element);\n\n        // Select the first element in the list.\n        this.handleSearchElement(this.searchElements[0]);\n    }\n\n    /**\n     * Handler for when the player has inputted something in the search bar. We iterate\n     * through all the elements and if they do not match the inputted text, we hide them.\n     * @param event Contains information about the input event.\n     */\n\n    private handleInput(event: Event): void {\n        let input = (event.target as HTMLInputElement).value.toLowerCase();\n\n        for (let element of this.searchList.children) {\n            let name = element.querySelector('p')!.innerHTML.toLowerCase();\n\n            // Hide the element if it doesn't match the input or unhide it if it does.\n            if (name.includes(input)) (element as HTMLElement).hidden = false;\n            else (element as HTMLElement).hidden = true;\n        }\n    }\n\n    /**\n     * Handles the action of clicking on a search element. We create an API call to the\n     * hub then we update the search list with the results.\n     * @param searchElement The search element that the player has clicked on.\n     */\n\n    private handleSearchElement(searchElement: SearchElement): void {\n        if (!this.app.config.hub) {\n            return;\n        };\n        let url = `${this.app.config.hub}/leaderboards`;\n\n        // If we have a search type then we append that onto the URL.\n        if (searchElement.type) url += `?${searchElement.type}=${searchElement.key}`;\n\n        // Fetch the results from the hub.\n        fetch(url)\n            .then((response: Response) => response.json())\n            .then((data) => {\n                if (!data.list) return log.info('No results found.');\n\n                // Clear the results list.\n                this.resultsList.innerHTML = '';\n\n                // Create a result element for each result.\n                for (let result of data.list)\n                    this.createResultElement(result as ResultInfo, searchElement.type);\n            })\n            .catch((error: Error) => {\n                log.error(error);\n            });\n    }\n\n    /**\n     * Override for the hide function where we also clear the input field.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        // Clear the input field\n        this.search.value = '';\n    }\n\n    /**\n     * Handler for when the player enters a key while the leaderboards menu is\n     * open. We want to prevent keys from activating other menus.\n     * @param key The key that the player is pressing.\n     */\n\n    public keyDown(key: string): void {\n        // Ignore any other keys aside from escape.\n        if (key !== 'Escape') return;\n\n        this.hide();\n    }\n\n    /**\n     * Creates an element in the search menu with the specified name.\n     * @param searchElement Contains information about the element we are creating, we're\n     * also using it to bind the click event.\n     */\n\n    private createSearchElement(searchElement: SearchElement): void {\n        let element = document.createElement('li'),\n            name = document.createElement('p');\n\n        // Add the slot class to the element.\n        element.classList.add('container-slot');\n\n        // Add styling to the friend name element.\n        name.classList.add('stroke', 'white');\n\n        // Set the name of the element.\n        name.innerHTML = searchElement.name;\n\n        // Add the name element to the element.\n        element.append(name);\n\n        // Bind the click event to the element.\n        element.addEventListener('click', () => this.handleSearchElement(searchElement));\n\n        this.searchList.append(element);\n    }\n\n    /**\n     * Creates a result element in the list of results. The result relates to a player\n     * and the description to how much of exp/mob kills they have.\n     * @param result Contains the information of the result element we are creating.\n     * @param type The type of result we are creating (skill or kills) so we can extract necessary info.\n     */\n\n    private createResultElement(result: ResultInfo, type: string): void {\n        let element = document.createElement('li'),\n            name = document.createElement('p'),\n            info = document.createElement('p');\n\n        // Add the slot class to the element.\n        element.classList.add('container-slot-large');\n\n        // Bind the username to the left of the container\n        name.classList.add('stroke', result.cheater ? 'red' : 'white', 'left');\n\n        // Bind the description to the right of the container\n        info.classList.add('stroke', result.cheater ? 'red' : 'white', 'right');\n\n        // Set the name of the element.\n        name.innerHTML = result._id;\n\n        // Set the description of the element.\n        info.innerHTML =\n            type === 'skill' || type === '' ? `${result.experience}` : `${result.kills}`;\n\n        // Add the name element to the element.\n        element.append(name, info);\n\n        // Append the element to the results list.\n        this.resultsList.append(element);\n    }\n}\n","import Menu from './menu';\n\nimport Util from '../utils/util';\n\nimport { Modules, Packets, Opcodes } from '@kaetram/common/network';\n\nimport type Game from '../game';\nimport type { ListInfo, Member } from '@kaetram/common/types/guild';\nimport type { GuildPacket } from '@kaetram/common/types/messages/outgoing';\n\ninterface ListElement extends HTMLElement {\n    identifier?: string;\n}\n\nexport default class Guilds extends Menu {\n    // The banner is the banner of the guild that the player is currently in.\n    private banner: HTMLElement = document.querySelector('#guilds > .banner')!;\n\n    // The default container and elements for the guilds list, displayed prior to joining a guild.\n    private listContainer: HTMLElement = document.querySelector('#guilds-list-container')!;\n    private createButton: HTMLButtonElement = document.querySelector('#create-guild')!;\n\n    // Container for creating a new guild.\n    private create: HTMLElement = document.querySelector('#guilds-create-container')!;\n\n    private createError: HTMLElement = document.querySelector('#create-error')!;\n\n    private backButton: HTMLElement = document.querySelector('#guild-back')!;\n    private createConfirmButton: HTMLButtonElement = document.querySelector('#guild-create')!;\n\n    private bannerColours: HTMLUListElement = document.querySelector('#banner-colours')!;\n    private bannerOutlines: HTMLUListElement = document.querySelector('#banner-outline-colours')!;\n    private bannerCrests: HTMLUListElement = document.querySelector('#banner-crests')!;\n\n    private nameInput: HTMLInputElement = document.querySelector('#guild-name-input')!;\n\n    // Decorations for the guild interface banner (updated during creation or when guild data is received).\n    private bannerColour: Modules.BannerColour = Modules.BannerColour.Grey;\n    private bannerOutline: Modules.BannerOutline | '' = '';\n    private bannerCrest: Modules.BannerCrests = Modules.BannerCrests.None;\n\n    // The guild information container (if the player is in a guild).\n    private infoContainer: HTMLElement = document.querySelector('#guilds-info-container')!;\n    private chatLog: HTMLUListElement = document.querySelector('#guild-chat-log')!;\n    private chatInput: HTMLInputElement = document.querySelector('#guild-chat-input')!;\n\n    private guildName: HTMLElement = document.querySelector('#guild-name')!;\n    private leaveButton: HTMLElement = document.querySelector('#guild-leave')!;\n\n    // List where we store players/guilds list (depending on the context).\n    private guildList: HTMLUListElement = document.querySelector('#guilds-list-container > ul')!;\n    private memberList: HTMLUListElement = document.querySelector('#member-list')!;\n    private sidebarList: HTMLUListElement = document.querySelector('#sidebar-list')!;\n\n    // Indexing - default values, used for pagination.\n    private from = 0;\n    private to = 10;\n\n    // Sidebar we're currently naivgating.\n    private currentSidebar: 'sidebar-members' | 'sidebar-chat' = 'sidebar-members';\n\n    public constructor(private game: Game) {\n        super('#guilds', '#close-guilds', '#guilds-button');\n\n        this.createButton.addEventListener('click', this.handleCreate.bind(this));\n\n        this.backButton.addEventListener('click', this.handleBackButton.bind(this));\n        this.createConfirmButton.addEventListener('click', this.handleCreateConfirm.bind(this));\n        this.leaveButton.addEventListener('click', this.handleLeave.bind(this));\n\n        this.loadSidebar();\n        this.loadDecorations();\n    }\n\n    /**\n     * Updates the user interface according to the action that was performed.\n     * @param opcode The opcode of the action that was performed.\n     * @param info Information about the opcode we received.\n     */\n\n    public handle(opcode: Opcodes.Guild, info: GuildPacket): void {\n        switch (opcode) {\n            case Opcodes.Guild.Join: {\n                return this.handleMemberJoin(info.username!, info.serverId!);\n            }\n\n            case Opcodes.Guild.Login: {\n                return this.handleConnect(info);\n            }\n\n            case Opcodes.Guild.Leave: {\n                if (info?.username) return this.handleMemberLeave(info.username);\n\n                return this.handleBackButton();\n            }\n\n            case Opcodes.Guild.Rank: {\n                console.log(info);\n                break;\n            }\n\n            case Opcodes.Guild.Update: {\n                return this.loadMembers(info.members!);\n            }\n\n            case Opcodes.Guild.Experience: {\n                console.log(info);\n\n                break;\n            }\n\n            case Opcodes.Guild.List: {\n                return this.loadList(info.guilds, info.total);\n            }\n\n            case Opcodes.Guild.Error: {\n                return this.setError(info.message);\n            }\n\n            case Opcodes.Guild.Chat: {\n                return this.handleChat(info);\n            }\n        }\n    }\n\n    /**\n     * Handler for when the player clicks the create guild button.\n     */\n\n    private handleCreate(): void {\n        // Hide the default information and show the create guild form.\n        this.listContainer.style.display = 'none';\n        this.infoContainer.style.display = 'none';\n\n        // Display the create guild form.\n        this.create.style.display = 'block';\n    }\n\n    /**\n     * Handler for when the player wants to go back to the guilds list.\n     * Basically the opposite of `handleCreate`.\n     */\n\n    private handleBackButton(): void {\n        // Reset the banner decorations and update it.\n        this.bannerColour = Modules.BannerColour.Grey;\n        this.bannerOutline = '';\n        this.bannerCrest = Modules.BannerCrests.None;\n\n        this.updateBanner();\n        this.cleanSelectedCrests(true);\n\n        // Clear all the errors.\n        this.setError();\n\n        // Empty the members list.\n        this.memberList.innerHTML = '';\n\n        // Empty the chat log.\n        this.chatLog.innerHTML = '';\n\n        // Hide other containers and show the default information.\n        this.create.style.display = 'none';\n        this.infoContainer.style.display = 'none';\n\n        // Display the default information.\n        this.listContainer.style.display = 'block';\n\n        // Request the guilds list from the server.\n        this.requestList();\n    }\n\n    /**\n     * Handler for when we click the create confirm button.\n     * This will send the packet to the server with the information provided.\n     */\n\n    private handleCreateConfirm(): void {\n        // Clear the error message.\n        this.setError();\n\n        // Verify the values client-sided (server also verifies them).\n        if (this.bannerOutline === '') return this.setError('Please select an outline colour.');\n\n        // Ensure the guild name is valid.\n        if (this.nameInput.value.length < 3 || this.nameInput.value.length > 16)\n            return this.setError('Guild name must be between 3 and 15 characters.');\n\n        // Send the packet to the server with the information.\n        this.game.socket.send(Packets.Guild, {\n            opcode: Opcodes.Guild.Create,\n            name: this.nameInput.value,\n            colour: this.bannerColour,\n            outline: this.bannerOutline,\n            crest: this.bannerCrest\n        });\n    }\n\n    /**\n     * Handler for when the player clicks the leave guild button.\n     */\n\n    private handleLeave(): void {\n        this.game.socket.send(Packets.Guild, {\n            opcode: Opcodes.Guild.Leave\n        });\n    }\n\n    /**\n     * Handles connection received from the server. We essentially\n     * clear all the other interfaces and focus on the guild interface.\n     * The player object contains all the guild information necessary.\n     * @param info Contains information about the guild, such as decorations.\n     */\n\n    private handleConnect(info: GuildPacket): void {\n        // Clear the error message.\n        this.setError();\n\n        // Hide the default information.\n        this.listContainer.style.display = 'none';\n\n        // Hide the create guild form just in case.\n        this.create.style.display = 'none';\n\n        // Display the guild information container.\n        this.infoContainer.style.display = 'block';\n\n        // Load the guild decorations.\n        this.bannerColour = info.decoration?.banner || Modules.BannerColour.Grey;\n        this.bannerOutline = info.decoration?.outline || '';\n        this.bannerCrest = info.decoration?.crest;\n\n        this.updateBanner();\n\n        // Clear the guild name and members list.\n        this.guildName.innerHTML = '';\n        this.memberList.innerHTML = '';\n\n        // Update the guild name\n        let name = document.createElement('p');\n\n        name.className = 'stroke';\n\n        name.innerHTML = info.name || 'Unknown';\n\n        this.guildName.append(name);\n\n        // Update the leave button to disband if we're the leader.\n        if (this.game.player.name.toLowerCase() === info.owner)\n            this.leaveButton.innerHTML = 'Disband';\n\n        // Update the guild members list.\n        for (let member of info.members!)\n            this.createElement(this.memberList, member.rank!, member.username);\n    }\n\n    /**\n     * Creates a new element based on the username is that joining. Since the player\n     * is brand new, then the default rank is the lowest rank. Other inforamtion\n     * is not really necessary.\n     * @param username The username of the member that joined the guild.\n     * @param serverId The server id of the member that joined the guild.\n     */\n\n    private handleMemberJoin(username: string, serverId = -1): void {\n        // Ignore if we're the one joining.\n        if (username === this.game.player.name.toLowerCase()) return;\n\n        this.createElement(this.memberList, Modules.GuildRank.Fledgling, username);\n\n        this.loadMembers([{ username, serverId }]);\n    }\n\n    /**\n     * Removes a child element from the member list based on the username.\n     * @param username The username of the member that left the guild.\n     */\n\n    private handleMemberLeave(username: string): void {\n        let element = this.getElement(this.memberList, username);\n\n        element?.remove();\n    }\n\n    /**\n     * Handles clicking on a side bar in a guild interface and updating\n     * the interface accordingly.\n     * @param menu The string identification of the menu we want to open.\n     */\n\n    private handleSidebar(menu: 'sidebar-members' | 'sidebar-chat'): void {\n        // Ignore if we don't have a guild.\n        if (!this.game.player.guild) return;\n\n        // Ignore if we're already on the menu.\n        if (this.currentSidebar === menu) return;\n\n        switch (menu) {\n            case 'sidebar-members': {\n                this.memberList.style.display = 'block';\n\n                // Remove the active class from the other sidebar.\n                this.infoContainer.className = '';\n\n                // Hide the chat input.\n                this.chatInput.style.display = 'none';\n\n                // Hide the chat log\n                this.chatLog.style.display = 'none';\n\n                break;\n            }\n\n            case 'sidebar-chat': {\n                // Hide the members list.\n                this.memberList.style.display = 'none';\n\n                // Add the chat class to the container.\n                this.infoContainer.className = 'guild-chat';\n\n                // Show the chat input.\n                this.chatInput.style.display = 'block';\n\n                // Show the chat log.\n                this.chatLog.style.display = 'block';\n\n                break;\n            }\n        }\n\n        // Update the current sidebar.\n        this.currentSidebar = menu;\n    }\n\n    /**\n     * Handles a message received from the server. We add the message\n     * to the chat log alongside information about who and from\n     * where the message was sent.\n     * @param packet Contains information about the message.\n     */\n\n    private handleChat(packet: GuildPacket): void {\n        // Ignore invalid packets (shouldn't happen).\n        if (!packet.username || !packet.serverId) return;\n\n        // Format the source of the message.\n        let source = `[W${packet.serverId}] ${Util.formatName(packet.username)}`,\n            element = document.createElement('p');\n\n        // Add the message to the chat log.\n        element.innerHTML = `${source} » ${packet.message}`;\n\n        this.chatLog.append(element);\n    }\n\n    /**\n     * Handles the keydown event for the guild interface. Usually when the\n     * player is using the chat input, we want to re-route the enter key to\n     * send the message to the server.\n     * @param key The key that was pressed.\n     */\n\n    public keyDown(key: string): void {\n        // Ignore if we're not on the chat sidebar.\n        if (key !== 'Enter' || this.currentSidebar !== 'sidebar-chat') return;\n\n        // Ignore if the input is empty.\n        if (this.chatInput.value.length === 0) return;\n\n        // Send the message to the server.\n        this.sendChat();\n    }\n\n    /**\n     * Requests a list of guilds from the server.\n     */\n\n    private requestList(): void {\n        if (this.game.player.guild) return;\n\n        return this.game.socket.send(Packets.Guild, {\n            opcode: Opcodes.Guild.List,\n            from: this.from,\n            to: this.to\n        });\n    }\n\n    /**\n     * Sends a chat message to the server.\n     */\n\n    private sendChat(): void {\n        // Ignore if the input is empty.\n        if (this.chatInput.value.length === 0) return;\n\n        // Send the message to the server.\n        this.game.socket.send(Packets.Guild, {\n            opcode: Opcodes.Guild.Chat,\n            message: this.chatInput.value\n        });\n\n        // Clear the input.\n        this.chatInput.value = '';\n    }\n\n    /**\n     * Loads a list of guilds received from the server.\n     * @param guilds Contains information about each guild.\n     * @param total The total number of guilds available (used for pagination).\n     */\n\n    private loadList(guilds: ListInfo[] = [], total = 0): void {\n        // Nothing to do if there are no guilds.\n        if (total === 0) return;\n\n        // Clear the list of guilds.\n        this.guildList.innerHTML = '';\n\n        // Remove the description for no guilds available.\n        let description = this.listContainer.querySelector('#guilds-info')!;\n\n        description.innerHTML = '';\n\n        // Iterate through the guilds and create a list element for each one.\n        for (let guild of guilds)\n            this.createElement(this.guildList, 'guild', guild.name, guild.members);\n    }\n\n    /**\n     * Creates an event listener and action for each sidebar element.\n     */\n\n    private loadSidebar(): void {\n        for (let child of this.sidebarList.children)\n            child.addEventListener('click', () => {\n                // Deselect all the other elements.\n                this.cleanSidebar();\n\n                // Select the current element.\n                child.classList.add('active');\n\n                // Handle updating the interface.\n                this.handleSidebar(child.id as 'sidebar-members' | 'sidebar-chat');\n            });\n    }\n\n    /**\n     * Programmatically creates the banner decorations for the guild interface. We create\n     * each individual element on the page and assign an event listener to each one. We\n     * do this to make it easier ot add new decorations in the future.\n     */\n\n    private loadDecorations(): void {\n        this.loadColours();\n        this.loadOutlines();\n        this.loadCrests();\n    }\n\n    /**\n     * Loads the banner colour elements for the create guild interface. We\n     * do it programmatically to make it easier to add new colours in the future.\n     */\n\n    private loadColours(): void {\n        // Iterate through the banner colours and create a list element for each one.\n        for (let colour in Modules.BannerColour) {\n            let element = document.createElement('li'),\n                colourName = Modules.BannerColour[colour as keyof typeof Modules.BannerColour];\n\n            // Add the banner colour classes to the element.\n            element.className = `banner-colour-button banner-colour-button-${colourName}`;\n\n            // Event listener to change the selected colour.\n            element.addEventListener('click', () => {\n                // Update the banner colour.\n                this.bannerColour = colourName;\n\n                // Update the banner.\n                this.updateBanner();\n            });\n\n            // Add the element to the list of banner colours.\n            this.bannerColours.append(element);\n        }\n    }\n\n    /**\n     * Loads the banner outline elements for the create guild interface. We\n     * do it programmatically to make it easier to add new outlines in the future.\n     */\n\n    private loadOutlines(): void {\n        // Iterate through the banner outlines and create a list element for each one.\n        for (let colour in Modules.BannerOutline) {\n            let element = document.createElement('li'),\n                outline = Modules.BannerOutline[colour as keyof typeof Modules.BannerOutline];\n\n            // Add the banner outline classes to the element.\n            element.className = `banner-outline-button banner-outline-button-${outline}`;\n\n            // Event listener to change the selected outline.\n            element.addEventListener('click', () => {\n                // Update the banner outline.\n                this.bannerOutline = outline;\n\n                // Update the banner.\n                this.updateBanner();\n            });\n\n            // Add the element to the list of banner outlines.\n            this.bannerOutlines.append(element);\n        }\n    }\n\n    /**\n     * Loads the banner crest elements for the create guild interface. We create\n     * the appropriate event listener for each crest and add it to the list.\n     */\n\n    private loadCrests(): void {\n        // Add the crest elements to the banner.\n        for (let crest in Modules.BannerCrests) {\n            let element = document.createElement('li'),\n                icon = document.createElement('div'),\n                crestName = Modules.BannerCrests[crest as keyof typeof Modules.BannerCrests];\n\n            // Add the class to the element.\n            element.className = `crest-element`;\n\n            // Add the icon class to the icon element.\n            icon.className = `banner-crest-icon banner-crest-icon-${crestName}`;\n\n            // Add the icon to the element.\n            element.append(icon);\n\n            // Set the default empty crest icon as active.\n            if (crestName === 'none') element.classList.add('active');\n\n            // Event listener to change the selected crest.\n            element.addEventListener('click', () => {\n                this.cleanSelectedCrests();\n\n                // Update the banner crest.\n                this.bannerCrest = crestName;\n\n                // Update the banner.\n                this.updateBanner();\n\n                // Set active crest.\n                element.classList.add('active');\n            });\n\n            // Add the element to the list of crests.\n            this.bannerCrests.append(element);\n        }\n    }\n\n    /**\n     * Loads a list of members (specifically their online status) for the guild interface.\n     * @param members Contains an array of guild members and their online status.\n     */\n\n    private loadMembers(members: Member[]): void {\n        for (let member of members) {\n            let element = this.getElement(this.memberList, member.username);\n\n            if (!element) continue;\n\n            let nameElement = element.querySelector('.name')!,\n                serverElement = element.querySelector('.server')!,\n                colour =\n                    member.serverId === -1\n                        ? 'red'\n                        : member.serverId === this.game.player.serverId\n                        ? 'green'\n                        : 'yellow';\n\n            // Update the colour based on the online status.\n            nameElement.className = `name`;\n            serverElement.className = `server ${colour}`;\n\n            serverElement.innerHTML =\n                member.serverId === -1\n                    ? 'Offline'\n                    : `${this.game.app.config.name} ${member.serverId}`;\n        }\n    }\n\n    /**\n     * Override for the show function where we send a packet requesting\n     * a list of active guilds if the player is not in a guild.\n     */\n\n    public override show(): void {\n        super.show();\n\n        // No guild so we request a list of active guilds.\n        this.requestList();\n    }\n\n    /**\n     * Override for the hide function where we reset the pagination.\n     * We also make sure we hide the create interface if the player\n     * does not have a guild.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        // Reset the pagination.\n        this.from = 0;\n        this.to = 10;\n\n        // Hide the create interface if the player is not in a guild.\n        if (!this.game.player.guild) this.handleBackButton();\n    }\n\n    /**\n     * Creates an element and appends it to the list. The element depends on the type\n     * we are provided. Generally we have two types: guilds and ranks. When creating a rank\n     * based element it's generally for players, whereas a guild one is for a list of\n     * available guilds.\n     * @param list The list to append the element to.\n     * @param type The type of element we are creating.\n     * @param name The name to display in the element.\n     */\n\n    private createElement(\n        list: HTMLUListElement,\n        type: Modules.GuildRank | 'guild',\n        name: string,\n        count = 0\n    ): void {\n        let element = document.createElement('li') as ListElement,\n            nameElement = document.createElement('span'),\n            isGuild = type === 'guild',\n            slotType = type === 'guild' ? 'guild' : Modules.GuildRank[type].toLowerCase();\n\n        // Assign the name as the identifier for the element\n        element.identifier = name;\n\n        // Add the classes to the element and name element.\n        element.className = `slot-element slot-${slotType} stroke`;\n        nameElement.className = `name`;\n\n        // Set the name of the element, format it if it's a player name.\n        nameElement.innerHTML = isGuild ? name : Util.formatName(name, 14);\n\n        // Conditional for dealing with guild element creation.\n        if (isGuild) {\n            if (count > 0) {\n                let countElement = document.createElement('span');\n\n                // Add the class and inner HTML to the count element.\n                countElement.classList.add('count');\n                countElement.innerHTML = `${count}/${Modules.Constants.MAX_GUILD_MEMBERS}`;\n\n                element.append(countElement);\n            }\n\n            // Create the join button for the guild.\n            let joinButton = document.createElement('div');\n\n            // Add the class to the join button.\n            joinButton.className = 'element-button stroke';\n\n            // Add the inner HTML to the join button.\n            joinButton.innerHTML = 'Join';\n\n            // Add the event listener to the join button.\n            joinButton.addEventListener('click', () => {\n                this.game.socket.send(Packets.Guild, {\n                    opcode: Opcodes.Guild.Join,\n                    identifier: name.toLowerCase()\n                });\n            });\n\n            // Append name and join elements.\n            element.append(nameElement, joinButton);\n        }\n\n        // Append just the name element.\n        if (!isGuild) {\n            element.append(nameElement);\n\n            let serverElement = document.createElement('span'),\n                isPlayer = this.game.player.name.toLowerCase() === element.identifier;\n\n            serverElement.className = `server ${isPlayer ? 'green' : 'red'}`;\n\n            serverElement.innerHTML = isPlayer ? 'Online' : 'Offline';\n\n            element.append(serverElement);\n        }\n\n        // Append the element to the list.\n        list.append(element);\n    }\n\n    /**\n     * Removes the active class from all the crest selection elements.\n     */\n\n    private cleanSelectedCrests(selectEmpty = false): void {\n        for (let crest of this.bannerCrests.children) crest.classList.remove('active');\n\n        // Select the empty crest if specified.\n        if (selectEmpty) this.bannerCrests.children[0].classList.add('active');\n    }\n\n    /**\n     * Deselects all the sidebar elements by removing the active class.\n     */\n\n    private cleanSidebar(): void {\n        for (let element of this.sidebarList.children) element.classList.remove('active');\n    }\n\n    /**\n     * Updates the banner with the specified colours (in the class).\n     */\n\n    private updateBanner(): void {\n        let outlineElement = this.banner.querySelector('.banner-outline')!,\n            crestElement = this.banner.querySelector('.banner-crest')!;\n\n        // Update the classes with the new colours.\n        this.banner.className = `banner banner-${this.bannerColour}`;\n\n        // Update the outline and crest if specified\n        outlineElement.className = `banner-outline${\n            this.bannerOutline ? ` banner-outline-${this.bannerOutline}` : ''\n        }`;\n\n        if (this.bannerCrest)\n            crestElement.className = `banner-crest banner-crest-${this.bannerCrest}`;\n    }\n\n    /**\n     * Grabs a list element from the list based on the identifier.\n     * @param list The list we are searching through.\n     * @param identifier The identifier we are searching for.\n     * @returns A list element if found otherwise undefined.\n     */\n\n    private getElement(list: HTMLUListElement, identifier: string): ListElement | undefined {\n        for (let element of list.children)\n            if ((element as ListElement).identifier === identifier) return element as ListElement;\n\n        return undefined;\n    }\n\n    /**\n     * Updates the create error element with a message.\n     * @param text The message to display.\n     */\n\n    private setError(text = ''): void {\n        this.createError.innerHTML = text;\n    }\n}\n","import Menu from './menu';\n\nimport log from '../lib/log';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type App from '../app';\n\ninterface SearchElement {\n    name: string;\n    key: string | number;\n    type: string;\n}\n\ninterface ResultInfo {\n    _id: string;\n    experience?: number;\n    kills?: number;\n    cheater?: boolean;\n}\n\nexport default class Leaderboards extends Menu {\n    // Where we show all the possible leaderboards\n    private searchList: HTMLUListElement = document.querySelector('#leaderboards-search')!;\n\n    // Where we display the results from the selected list\n    private resultsList: HTMLUListElement = document.querySelector('#leaderboards-results')!;\n\n    // The search input\n    private search: HTMLInputElement = document.querySelector('#leaderboards-search-input')!;\n\n    // Search elements available (key is the search URL term, value is the name displayed).\n    private searchElements: SearchElement[] = [\n        { name: 'Total Experience', key: '', type: 'totalExperience' },\n        { name: 'Rank', key: 'rank', type: 'rank' }\n    ];\n    private availableMobs: { [key: string]: string } = {};\n\n    public constructor(private app: App) {\n        super('#leaderboards', '#close-leaderboards', '#leaderboards-button2');\n\n        this.search.addEventListener('input', this.handleInput.bind(this));\n\n        // Append all the skills to the search elements\n        for (let index of Modules.SkillsOrder)\n            this.searchElements.push({ name: Modules.Skills[index], key: index, type: 'skill' });\n\n        // Hub is not enabled, stop here.\n        if (!this.app.config.hub) {\n            this.load();\n            return\n        };\n\n        // Fetch the available mobs from the hub\n        fetch(`${this.app.config.hub}/leaderboards`)\n            .then((response: Response) => response.json())\n            .then((data) => {\n                if (data.availableMobs) {\n                    // Save the available mobs.\n                    this.availableMobs = data.availableMobs;\n\n                    // Append the name of the mobs to the search elements.\n                    for (let mob in this.availableMobs)\n                        this.searchElements.push({\n                            name: this.availableMobs[mob],\n                            key: mob,\n                            type: 'mob'\n                        });\n\n                    this.load();\n                }\n            })\n            .catch((error: Error) => {\n                log.error(error);\n            });\n    }\n\n    /**\n     * Loads the available search elements into an individual object. The object\n     * is then appended to the search list.\n     */\n\n    private load(): void {\n        // Clear the search list\n        this.searchList.innerHTML = '';\n\n        // Create a search element for each search element.\n        for (let element of this.searchElements) this.createSearchElement(element);\n\n        // Select the first element in the list.\n        this.handleSearchElement(this.searchElements[0]);\n    }\n\n    /**\n     * Handler for when the player has inputted something in the search bar. We iterate\n     * through all the elements and if they do not match the inputted text, we hide them.\n     * @param event Contains information about the input event.\n     */\n\n    private handleInput(event: Event): void {\n        let input = (event.target as HTMLInputElement).value.toLowerCase();\n\n        for (let element of this.searchList.children) {\n            let name = element.querySelector('p')!.innerHTML.toLowerCase();\n\n            // Hide the element if it doesn't match the input or unhide it if it does.\n            if (name.includes(input)) (element as HTMLElement).hidden = false;\n            else (element as HTMLElement).hidden = true;\n        }\n    }\n\n    /**\n     * Handles the action of clicking on a search element. We create an API call to the\n     * hub then we update the search list with the results.\n     * @param searchElement The search element that the player has clicked on.\n     */\n\n    private async handleSearchElement(searchElement: SearchElement) {\n\n        this.resultsList.innerHTML = ''\n        const players = await fetch(`http://localhost:9003/`).then(r => r.json());\n        let data = players.data;\n\n        data.forEach((player: any) => {\n            let totalExperience = 0;\n\n            player.skills.skills.forEach((skill: any) => {\n                totalExperience = totalExperience + skill.experience\n            });\n\n            data = [...data.filter((i: any) => i._id !== player._id), {\n                ...player,\n                totalExperience\n            }]\n        });\n\n        if (!this.app.config.hub) {\n            for (let result of data.sort(function (a: any, b: any) {\n                return b[searchElement.type] - a[searchElement.type];\n            }))\n                this.createResultElement(result as any, searchElement.type);\n            return;\n        };\n        let url = `${this.app.config.hub}/leaderboards`;\n\n        // If we have a search type then we append that onto the URL.\n        if (searchElement.type) url += `?${searchElement.type}=${searchElement.key}`;\n\n        // Fetch the results from the hub.\n        fetch(url)\n            .then((response: Response) => response.json())\n            .then((data) => {\n                if (!data.list) return log.info('No results found.');\n\n                // Clear the results list.\n                this.resultsList.innerHTML = '';\n\n                // Create a result element for each result.\n                for (let result of data.list)\n                    this.createResultElement(result as ResultInfo, searchElement.type);\n            })\n            .catch((error: Error) => {\n                log.error(error);\n            });\n    }\n\n    /**\n     * Override for the hide function where we also clear the input field.\n     */\n\n    public override hide(): void {\n        super.hide();\n\n        // Clear the input field\n        this.search.value = '';\n    }\n\n    /**\n     * Handler for when the player enters a key while the leaderboards menu is\n     * open. We want to prevent keys from activating other menus.\n     * @param key The key that the player is pressing.\n     */\n\n    public keyDown(key: string): void {\n        // Ignore any other keys aside from escape.\n        if (key !== 'Escape') return;\n\n        this.hide();\n    }\n\n    /**\n     * Creates an element in the search menu with the specified name.\n     * @param searchElement Contains information about the element we are creating, we're\n     * also using it to bind the click event.\n     */\n\n    private createSearchElement(searchElement: SearchElement): void {\n        let element = document.createElement('li'),\n            name = document.createElement('p');\n\n        // Add the slot class to the element.\n        element.classList.add('container-slot');\n\n        // Add styling to the friend name element.\n        name.classList.add('stroke', 'white');\n\n        // Set the name of the element.\n        name.innerHTML = searchElement.name;\n\n        // Add the name element to the element.\n        element.append(name);\n\n        // Bind the click event to the element.\n        element.addEventListener('click', () => this.handleSearchElement(searchElement));\n\n        this.searchList.append(element);\n    }\n\n    /**\n     * Creates a result element in the list of results. The result relates to a player\n     * and the description to how much of exp/mob kills they have.\n     * @param result Contains the information of the result element we are creating.\n     * @param type The type of result we are creating (skill or kills) so we can extract necessary info.\n     */\n\n    private createResultElement(result: any, type: string): void {\n        console.log(result)\n        let element = document.createElement('li'),\n            name = document.createElement('p'),\n            info = document.createElement('p');\n\n        // Add the slot class to the element.\n        element.classList.add('container-slot-large');\n\n        // Bind the username to the left of the container\n        name.classList.add('stroke', result.cheater ? 'red' : 'white', 'left');\n\n        // Bind the description to the right of the container\n        info.classList.add('stroke', result.cheater ? 'red' : 'white', 'right');\n\n        // Set the name of the element.\n        name.innerHTML = result.username;\n\n        // Set the description of the element.\n        info.innerHTML = result[type] || 0;\n\n        // Add the name element to the element.\n        element.append(name, info);\n\n        // Append the element to the results list.\n        this.resultsList.append(element);\n    }\n}\n","import Menu from './menu';\n\nimport Utils from '../utils/util';\n\nimport { Modules, Opcodes } from '@kaetram/common/network';\n\nimport type { CraftingRequirement } from '@kaetram/common/types/crafting';\nimport type { CraftingPacket } from '@kaetram/common/types/messages/outgoing';\n\ntype SelectCallback = (key: string) => void;\ntype CraftCallback = (key: string, amount: number) => void;\nexport default class Crafting extends Menu {\n    // Where we store the available options for crafting.\n    private options: HTMLUListElement = document.querySelector('#crafting-options')!;\n    private requirements: HTMLUListElement = document.querySelector('#crafting-requirements')!;\n\n    // Result section\n    private result: HTMLDivElement = document.querySelector('#crafting-result')!;\n    private level: HTMLDivElement = document.querySelector('#crafting-level')!;\n    private name: HTMLDivElement = document.querySelector('#crafting-result-name')!;\n\n    // Amount buttons.\n    private craftOne: HTMLDivElement = document.querySelector('#craft-one')!;\n    private craftFive: HTMLDivElement = document.querySelector('#craft-five')!;\n    private craftTen: HTMLDivElement = document.querySelector('#craft-ten')!;\n\n    // Confirm button\n    private craftButton: HTMLDivElement = document.querySelector('#craft-button')!;\n\n    // Crafting amount for sending to the server.\n    private selectedKey = '';\n    private craftAmount = 1;\n\n    // Data for the currently selected crafting elements.\n    private type: Modules.Skills = Modules.Skills.Crafting;\n\n    // Callbacks for when the player selects an option.\n    private selectCallback?: SelectCallback;\n    private craftCallback?: CraftCallback;\n\n    public constructor() {\n        super('#crafting', '#close-crafting');\n\n        this.craftOne.addEventListener('click', () => this.handleAmount(1));\n        this.craftFive.addEventListener('click', () => this.handleAmount(5));\n        this.craftTen.addEventListener('click', () => this.handleAmount(10));\n\n        this.craftButton.addEventListener('click', () => {\n            this.craftCallback?.(this.selectedKey, this.craftAmount);\n            this.hide();\n        });\n    }\n\n    /**\n     * Handles receiving information about crafting. This is used to synchronize the crafting\n     * user interface with the server. When a player selects an item to craft this\n     * @param opcode Contains the type of crafting action that we want to perform.\n     * @param info Contains the information about the crafting action.\n     */\n\n    public handle(opcode: Opcodes.Crafting, info: CraftingPacket): void {\n        switch (opcode) {\n            case Opcodes.Crafting.Open: {\n                return this.show(info.type!, info.keys!);\n            }\n\n            case Opcodes.Crafting.Select: {\n                return this.handleSelect(\n                    info.key!,\n                    info.name!,\n                    info.level!,\n                    info.result!,\n                    info.requirements!\n                );\n            }\n        }\n    }\n\n    /**\n     * Handles displaying the requirements and result for the item that the player selected.\n     * @param key The key of the item that the player selected.\n     * @param name The formatted name of the item (the one the player sees).\n     * @param level The level required to craft the item.\n     * @param count The amount of the item selected we will receive as a result.\n     * @param requirements The requirements for the item that the player selected.\n     */\n\n    private handleSelect(\n        key: string,\n        name: string,\n        level: number,\n        count: number,\n        requirements: CraftingRequirement[]\n    ): void {\n        // Clear the requirements and result.\n        this.requirements.innerHTML = '';\n\n        // Update the selected key.\n        this.selectedKey = key;\n\n        // Set the result image.\n        let icon: HTMLElement = this.result.querySelector('.crafting-option-icon')!,\n            countElement: HTMLElement = this.result.querySelector('.crafting-option-count')!,\n            levelIcon: HTMLElement = this.level.querySelector('.crafting-option-icon')!,\n            levelCount = this.level.querySelector('.crafting-option-count')!;\n\n        // Update the result icons.\n        icon.style.backgroundImage = Utils.getImageURL(key);\n        levelIcon.style.backgroundImage = this.getSkillIcon();\n\n        // Set the amount of the item that we will receive as a result.\n        countElement.innerHTML = `x${count}`;\n\n        // Set the level required to craft the item.\n        levelCount.innerHTML = `${level}`;\n\n        // Update the name of the item.\n        this.name.innerHTML = name;\n\n        // Create new requirement element and append it to the list of requirements.\n        for (let requirement of requirements)\n            this.requirements.append(this.createSlot(requirement.key, requirement.count, true));\n    }\n\n    /**\n     * Handles when we click the craft amount buttons. Handles toggling the active classes\n     * and updating how many items we want to craft.\n     * @param amount The amount of items selected.\n     */\n\n    private handleAmount(amount: number): void {\n        this.craftAmount = amount;\n\n        this.craftOne.classList.remove('active');\n        this.craftFive.classList.remove('active');\n        this.craftTen.classList.remove('active');\n\n        switch (amount) {\n            case 1: {\n                this.craftOne.classList.add('active');\n                break;\n            }\n\n            case 5: {\n                this.craftFive.classList.add('active');\n                break;\n            }\n\n            case 10: {\n                this.craftTen.classList.add('active');\n                break;\n            }\n        }\n    }\n\n    /**\n     * Loads the keys in the options list. This is used to display the available items\n     * that the player can craft.\n     * @param keys Contains a string array of the available keys (used for item url path).\n     */\n\n    public override show(type: Modules.Skills, keys: string[]): void {\n        super.show();\n\n        // Clear all the options.\n        this.options.innerHTML = '';\n\n        // Update the crafting type\n        this.type = type;\n\n        // Create a new option for each key and append it to the list of options.\n        for (let key of keys) this.options.append(this.createSlot(key));\n\n        // Select the first option by default if it exists.\n        if (keys.length > 0) {\n            this.selectCallback?.(keys[0]);\n\n            this.options.children[0].classList.add('active');\n        }\n\n        // Update the craft button text according to the type of interface.\n        let text = 'Craft';\n\n        switch (type) {\n            case Modules.Skills.Cooking: {\n                text = 'Cook';\n                break;\n            }\n\n            case Modules.Skills.Crafting: {\n                text = 'Craft';\n                break;\n            }\n\n            case Modules.Skills.Fletching: {\n                text = 'Fletch';\n                break;\n            }\n\n            case Modules.Skills.Smithing: {\n                text = 'Smith';\n                break;\n            }\n\n            case Modules.Skills.Smelting: {\n                text = 'Smelt';\n                break;\n            }\n        }\n\n        this.craftButton.innerHTML = text;\n    }\n\n    /**\n     * Creates a option list element and appends it to the list of options.\n     * @param key The key of the item to craft.\n     */\n\n    private createSlot(key: string, count?: number, disableClick = false): HTMLLIElement {\n        let element = document.createElement('li'),\n            icon = document.createElement('div');\n\n        // Apply the classes to the elements\n        element.classList.add('crafting-option');\n        icon.classList.add('crafting-option-icon');\n\n        // Apply the image url to the icon.\n        icon.style.backgroundImage = Utils.getImageURL(key);\n\n        // Append the icon to the option element.\n        element.append(icon);\n\n        // Create the count element and apply it if it's provided\n        if (count) {\n            let countElement = document.createElement('div');\n\n            countElement.classList.add('crafting-option-count', 'stroke');\n            countElement.innerHTML = `x${count}`;\n\n            element.append(countElement);\n        }\n\n        // Bind the click event to the select callback so that it can be sent to the server.\n        if (disableClick) element.classList.add('disabled');\n        else\n            element.addEventListener('click', () => {\n                // Remove the active class from all the options.\n                for (let child of this.options.children) child.classList.remove('active');\n\n                // Add the active class to the selected option.\n                element.classList.add('active');\n\n                this.selectCallback?.(key);\n            });\n\n        return element;\n    }\n\n    /**\n     * Grabs the skill icon for the currently open interface. We use\n     * this function to handle special cases of crafting interfaces that\n     * share the same skill.\n     */\n\n    private getSkillIcon(): string {\n        let name = Modules.Skills[this.type].toLowerCase();\n\n        switch (this.type) {\n            case Modules.Skills.Smelting:\n            case Modules.Skills.Smithing: {\n                return `url(/img/interface/skills/smithing.png)`;\n            }\n        }\n\n        return `url(/img/interface/skills/${name}.png)`;\n    }\n\n    /**\n     * Handles clicking on a crafting option. Sends a request to the server to\n     * obtain information about the item that the player wishes to craft.\n     * @param callback Contains the key of the item to craft.\n     */\n\n    public onSelect(callback: SelectCallback): void {\n        this.selectCallback = callback;\n    }\n\n    /**\n     * Handles sending a packet to the server that we want to craft.\n     * @param callback Contains the key and amount we want to craft.\n     */\n\n    public onCraft(callback: CraftCallback): void {\n        this.craftCallback = callback;\n    }\n}\n","import Actions from '../menu/actions';\nimport Inventory from '../menu/inventory';\nimport Bank from '../menu/bank';\nimport Store from '../menu/store';\nimport Header from '../menu/header';\nimport Profile from '../menu/profile/profile';\nimport Enchant from '../menu/enchant';\nimport Warp from '../menu/warp';\nimport Notification from '../menu/notification';\nimport Settings from '../menu/settings';\nimport Equipments from '../menu/equipments';\nimport Achievements from '../menu/achievements';\nimport Quests from '../menu/quests';\nimport Friends from '../menu/friends';\nimport Trade from '../menu/trade';\nimport Interact from '../menu/interact';\nimport Leaderboards from '../menu/leaderboards';\nimport Guilds from '../menu/guilds';\nimport LeaderboardsFooter from '../menu/leaderboards-footer';\nimport Crafting from '../menu/crafting';\n\nimport { Modules, Opcodes, Packets } from '@kaetram/common/network';\n\nimport type Game from '../game';\nimport type Menu from '../menu/menu';\n\nexport default class MenuController {\n    private actions: Actions = new Actions();\n    private crafting: Crafting = new Crafting();\n\n    private inventory: Inventory;\n    private bank: Bank;\n    private store: Store;\n    private profile: Profile;\n    private enchant: Enchant;\n    private warp: Warp;\n    private notification: Notification;\n    private settings: Settings;\n    private equipments: Equipments;\n    private achievements: Achievements;\n    private quests: Quests;\n    private friends: Friends;\n    private trade: Trade;\n    private interact: Interact;\n    private leaderboards: Leaderboards;\n    private LeaderboardsFooter: LeaderboardsFooter;\n    private guilds: Guilds;\n\n    public header: Header;\n\n    public menus: { [key: string]: Menu };\n\n    public constructor(private game: Game) {\n        this.inventory = new Inventory(this.actions);\n        this.bank = new Bank(this.inventory);\n        this.store = new Store(this.inventory);\n        this.profile = new Profile(game.player);\n        this.enchant = new Enchant(this.inventory);\n        this.warp = new Warp(game.socket);\n        this.notification = new Notification();\n        this.settings = new Settings(game);\n        this.header = new Header(game.player);\n        this.equipments = new Equipments(game.player, game.sprites);\n        this.achievements = new Achievements(game.player);\n        this.quests = new Quests(game.player);\n        this.friends = new Friends(game.player);\n        this.trade = new Trade(this.inventory);\n        this.interact = new Interact(game.player);\n        this.leaderboards = new Leaderboards(game.app);\n        this.LeaderboardsFooter = new LeaderboardsFooter(game.app);\n        this.guilds = new Guilds(game);\n\n        this.menus = {\n            inventory: this.inventory,\n            bank: this.bank,\n            store: this.store,\n            profile: this.profile,\n            enchant: this.enchant,\n            warp: this.warp,\n            notification: this.notification,\n            settings: this.settings,\n            equipments: this.equipments,\n            achievements: this.achievements,\n            quests: this.quests,\n            friends: this.friends,\n            trade: this.trade,\n            interact: this.interact,\n            leaderboards: this.leaderboards,\n            LeaderboardsFooter: this.LeaderboardsFooter,\n            guilds: this.guilds,\n            crafting: this.crafting\n        };\n\n        this.inventory.onSelect(this.handleInventorySelect.bind(this));\n        this.bank.onSelect(this.handleBankSelect.bind(this));\n        this.store.onSelect(this.handleStoreSelect.bind(this));\n        this.equipments.onUnequip(this.handleProfileUnequip.bind(this));\n\n        this.profile.onUnequip(this.handleProfileUnequip.bind(this));\n        this.profile.onAttackStyle(this.handleProfileAttackStyle.bind(this));\n        this.profile.onAbility(this.handleAbility.bind(this));\n\n        this.enchant.onSelect(this.handleEnchantSelect.bind(this));\n        this.enchant.onConfirm(this.handleEnchantConfirm.bind(this));\n\n        this.warp.onSelect(this.handleWarp.bind(this));\n\n        this.friends.onConfirm(this.handleFriendConfirm.bind(this));\n\n        this.trade.onSelect(this.handleTradeSelect.bind(this));\n        this.trade.onAccept(this.handleTradeAccept.bind(this));\n        this.trade.onClose(this.handleTradeClose.bind(this));\n\n        this.crafting.onSelect(this.handleCraftingSelect.bind(this));\n        this.crafting.onCraft(this.handleCraftingConfirm.bind(this));\n\n        this.load();\n    }\n\n    /**\n     * Initializes the header and a callback that automatically\n     * hides all the other menus when a menu is shown.\n     */\n\n    private load(): void {\n        this.forEachMenu((menu: Menu) => menu.onShow(() => this.hide()));\n    }\n\n    /**\n     * Iterates through all menus and calls the hide function.\n     * This is used when we want to hide every user interface.\n     */\n\n    public hide(): void {\n        this.forEachMenu((menu: Menu) => {\n            // Hide only if the menu is visible to prevent unnecessary calls to subclass `hide`.\n            if (menu.isVisible()) menu.hide();\n        });\n    }\n\n    /**\n     * Synchronizes the contains and the UI for all menus.\n     * @param key Optional key to synchronize a specific menu.\n     */\n\n    public synchronize(key?: string): void {\n        if (key) return this.menus[key]?.synchronize();\n\n        this.forEachMenu((menu: Menu) => menu.synchronize());\n    }\n\n    /**\n     * Calls every menu's resize function if it is initialized.\n     */\n\n    public resize(): void {\n        this.header.resize(); // Non Menu UI (for now?)\n\n        this.forEachMenu((menu: Menu) => menu.resize());\n    }\n\n    /**\n     * @returns The interact menu object.\n     */\n\n    public getInteract(): Interact {\n        return this.interact;\n    }\n\n    /**\n     * @returns The inventory menu object.\n     */\n\n    public getInventory(): Inventory {\n        return this.inventory;\n    }\n\n    /**\n     * @returns The bank menu object.\n     */\n\n    public getBank(): Bank {\n        return this.bank;\n    }\n\n    /**\n     * @returns The store menu object.\n     */\n\n    public getStore(): Store {\n        return this.store;\n    }\n\n    /**\n     * @returns The profile menu object.\n     */\n\n    public getProfile(): Profile {\n        return this.profile;\n    }\n\n    /**\n     * @returns The notification menu object.\n     */\n\n    public getNotification(): Notification {\n        return this.notification;\n    }\n\n    /**\n     * @returns The enchant menu object.\n     */\n\n    public getEnchant(): Enchant {\n        return this.enchant;\n    }\n\n    /**\n     * @returns The warp menu object\n     */\n\n    public getWarp(): Warp {\n        return this.warp;\n    }\n\n    /**\n     * @returns The achievement menu object.\n     */\n\n    public getAchievements(): Achievements {\n        return this.achievements;\n    }\n\n    /**\n     * @returns The quests menu object.\n     */\n\n    public getQuests(): Quests {\n        return this.quests;\n    }\n\n    /**\n     * @returns The friends menu object.\n     */\n\n    public getFriends(): Friends {\n        return this.friends;\n    }\n\n    /**\n     * @returns The trade menu object.\n     */\n\n    public getTrade(): Trade {\n        return this.trade;\n    }\n\n    /**\n     * @returns The leaderboards menu object.\n     */\n\n    public getLeaderboards(): Leaderboards {\n        return this.leaderboards;\n    }\n    public getLeaderboards2(): LeaderboardsFooter {\n        return this.LeaderboardsFooter;\n    }\n\n    /**\n     * @returns The guilds menu object.\n     */\n\n    public getGuilds(): Guilds {\n        return this.guilds;\n    }\n\n    /**\n     * @returns The crafting menu object.\n     */\n\n    public getCrafting(): Crafting {\n        return this.crafting;\n    }\n\n    /**\n     * Callback handler for when an item in the inventory is selected.\n     * @param fromIndex Index of the item selected.\n     * @param opcode Opcode identifying the type of action performed on the item.\n     * @param toIndex Optional parameter that is used either for count (drop packet) or index (swap packet).\n     */\n\n    private handleInventorySelect(\n        opcode: Opcodes.Container,\n        fromIndex: number,\n        toIndex?: number\n    ): void {\n        this.game.socket.send(Packets.Container, {\n            opcode,\n            type: Modules.ContainerType.Inventory,\n            fromIndex,\n            value: toIndex\n        });\n    }\n\n    /**\n     * Callback handler for when an item in the bank is selected.\n     * @param type Indicates which container (inventory or bank) was selected.\n     * @param index The index within that container.\n     */\n\n    private handleBankSelect(\n        fromContainer: Modules.ContainerType,\n        fromIndex: number,\n        toContainer: Modules.ContainerType,\n        toIndex?: number\n    ): void {\n        this.game.socket.send(Packets.Container, {\n            opcode: Opcodes.Container.Select,\n            type: Modules.ContainerType.Bank,\n            fromContainer,\n            fromIndex,\n            toContainer,\n            value: toIndex\n        });\n    }\n\n    /**\n     * Callback for when a store selection occurs. This is the packet format for when\n     * an item in the inventory is selected, when it is sold, or when we are attempting\n     * to purchase an item from the store.\n     * @param opcode The type of action we are performing.\n     * @param key The key of the store that we are in.\n     * @param index The index of the item (whether in the inventory or store).\n     */\n\n    private handleStoreSelect(opcode: Opcodes.Store, key: string, index: number, count = 1): void {\n        this.game.socket.send(Packets.Store, {\n            opcode,\n            key,\n            index,\n            count\n        });\n    }\n\n    /**\n     * Callback received from one of the profile pages when\n     * an equipment slot is clicked. We send a packet to the\n     * server requesting unequipping.\n     * @param type What slot is being unequipped.\n     */\n\n    private handleProfileUnequip(type: Modules.Equipment): void {\n        this.game.socket.send(Packets.Equipment, {\n            opcode: Opcodes.Equipment.Unequip,\n            type\n        });\n    }\n\n    /**\n     * Sends a packet to the server when a player selects a different\n     * attack style.\n     * @param style The new attack style we are selecting.\n     */\n\n    private handleProfileAttackStyle(style: Modules.AttackStyle): void {\n        this.game.socket.send(Packets.Equipment, {\n            opcode: Opcodes.Equipment.Style,\n            style\n        });\n    }\n\n    /**\n     * Callback for when an action within the abilities menu occurs.\n     * Generally this will consist of activating an ability or dragging it\n     * into the quick slot menu.\n     * @param type The type of action we are performing (using ability or dragging it to a quickslot).\n     * @param key The key of the ability we are performing an action on.\n     * @param index The index of the quickslot we are dragging to (only specified when dragging).\n     */\n\n    private handleAbility(type: Opcodes.Ability, key: string, index?: number): void {\n        this.game.socket.send(Packets.Ability, {\n            opcode: type,\n            key,\n            index\n        });\n    }\n\n    /**\n     * Sends a packet to the server with the index of the inventory slot the\n     * player has selected. The server verifies the request and sends back a\n     * packet indicating we want to move the item.\n     * @param index The index of the item the player has selected.\n     */\n\n    private handleEnchantSelect(index: number): void {\n        this.game.socket.send(Packets.Enchant, {\n            opcode: Opcodes.Enchant.Select,\n            index\n        });\n    }\n\n    /**\n     * Sends a request to the server that the player wants to enchant an item given\n     * some shards. The server double checks the validity of the request and proceeds\n     * accordingly.\n     * @param index The index of the item we want to enchant.\n     * @param shardIndex The index of the shards we want to use for enchanting.\n     */\n\n    private handleEnchantConfirm(index: number, shardIndex: number): void {\n        this.game.socket.send(Packets.Enchant, {\n            opcode: Opcodes.Enchant.Confirm,\n            index,\n            shardIndex\n        });\n    }\n\n    /**\n     * Sends a packet to the server about the warp that was just selected.\n     * @param id The id of the warp that was selected.\n     */\n\n    private handleWarp(id: number): void {\n        this.game.socket.send(Packets.Warp, {\n            id\n        });\n    }\n\n    /**\n     * Sends a packet to the server with the type of friend action we are performing. If the\n     * `remove` variable is set to false then we are adding a friend, otherwise we are removing.\n     * @param username The username we are performing the action on.\n     * @param remove (Optional) Whether we are removing a friend or not (default: false).\n     */\n\n    private handleFriendConfirm(username: string, remove = false): void {\n        this.game.socket.send(Packets.Friends, {\n            opcode: remove ? Opcodes.Friends.Remove : Opcodes.Friends.Add,\n            username\n        });\n    }\n\n    /**\n     * Handles the select action for the trade interface. When the player clicks an\n     * item in the inventory we send a packet to the server that we are adding an item\n     * to the trade session. When the player clicks an item in the trade window we send\n     * a packet to the server that we are removing an item from the trade session.\n     * @param type The type of container the action is performed in, determines the add/remove opcode.\n     * @param index The index in the container that the action is performed on.\n     */\n\n    private handleTradeSelect(type: Modules.ContainerType, index: number, count?: number): void {\n        switch (type) {\n            case Modules.ContainerType.Inventory: {\n                return this.game.socket.send(Packets.Trade, {\n                    opcode: Opcodes.Trade.Add,\n                    index,\n                    count\n                });\n            }\n\n            case Modules.ContainerType.Trade: {\n                return this.game.socket.send(Packets.Trade, {\n                    opcode: Opcodes.Trade.Remove,\n                    index,\n                    count\n                });\n            }\n        }\n    }\n\n    /**\n     * Handles the clicking of the accept button. Both players must accept to the trade\n     * in order to complete it.\n     */\n\n    private handleTradeAccept(): void {\n        this.game.socket.send(Packets.Trade, {\n            opcode: Opcodes.Trade.Accept\n        });\n    }\n\n    /**\n     * Sends a trade packet to the server indicating that the session has been closed.\n     */\n\n    private handleTradeClose(): void {\n        this.game.socket.send(Packets.Trade, {\n            opcode: Opcodes.Trade.Close\n        });\n    }\n\n    /**\n     * Sends a packet to the server with the key of the item that was just selected.\n     * @param key Contains the key of the item that was selected.\n     */\n\n    private handleCraftingSelect(key: string): void {\n        this.game.socket.send(Packets.Crafting, {\n            opcode: Opcodes.Crafting.Select,\n            key\n        });\n    }\n\n    /**\n     * Sends a packet to the server with the craft opcode and information about\n     * what the player wants to try and craft..\n     * @param key The key of the item we are trying to craft.\n     * @param count The amount of items we are trying to craft.\n     */\n\n    private handleCraftingConfirm(key: string, count: number): void {\n        this.game.socket.send(Packets.Crafting, {\n            opcode: Opcodes.Crafting.Craft,\n            key,\n            count\n        });\n    }\n\n    /**\n     * Iterates through all the menus and passes a callback.\n     * @param callback Current menu being iterated through.\n     */\n\n    private forEachMenu(callback: (menu: Menu) => void): void {\n        for (let menu of Object.values(this.menus)) callback(menu);\n    }\n}\n","import { Opcodes } from '@kaetram/common/network';\n\nexport default class Arrow {\n    public x = -1;\n    public y = -1;\n\n    private blinkInterval!: number;\n    private visible = true;\n\n    public constructor(public id: string, public element: JQuery, public type: Opcodes.Pointer) {\n        this.load();\n    }\n\n    private load(): void {\n        this.blinkInterval = window.setInterval(() => {\n            if (this.visible) this.hide();\n            else this.show();\n\n            this.visible = !this.visible;\n        }, 600);\n    }\n\n    /**e\n     * Sets the coordinates of the pointer.\n     * @param x Sets the x position of the pointer (relative or absolute).\n     * @param y Sets the y position of the pointer (relative or absolute).\n     */\n\n    public setPosition(x: number, y: number): void {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Clears the interval and deletes the pointer element.\n     */\n\n    public destroy(): void {\n        clearInterval(this.blinkInterval);\n\n        if (this.type === Opcodes.Pointer.Button) this.hide();\n        else this.element.remove();\n    }\n\n    /**\n     * Displays the pointer object.\n     */\n\n    private show(): void {\n        if (this.type === Opcodes.Pointer.Button) this.element.addClass('active');\n        else this.element.show();\n    }\n\n    /**\n     * Hides the current pointer.\n     */\n\n    private hide(): void {\n        if (this.type === Opcodes.Pointer.Button) this.element.removeClass('active');\n        else this.element.hide();\n    }\n}\n","import Arrow from '../renderer/pointers/arrow';\n\nimport { Opcodes } from '@kaetram/common/network';\nimport $ from 'jquery';\n\nimport type Entity from '../entity/entity';\nimport type Game from '../game';\nimport type Camera from '../renderer/camera';\n\nexport default class PointerController {\n    private camera: Camera;\n\n    private pointers: { [id: string]: Arrow } = {};\n\n    private container = $('#bubbles');\n\n    public constructor(private game: Game) {\n        this.camera = this.game.camera;\n    }\n\n    public create(id: string, type: Opcodes.Pointer, name?: string): void {\n        let { pointers, container } = this;\n\n        if (id in pointers) return;\n\n        switch (type) {\n            case Opcodes.Pointer.Button: {\n                pointers[id] = new Arrow(id, $(`#${name}`), type);\n\n                break;\n            }\n\n            default: {\n                let element = $(`<div id=\"${id}\" class=\"pointer\"></div>`);\n\n                this.setSize(element);\n\n                container.append(element);\n\n                pointers[id] = new Arrow(id, element, type);\n\n                break;\n            }\n        }\n    }\n\n    public resize(): void {\n        for (let { type, x, y, element } of Object.values(this.pointers))\n            switch (type) {\n                case Opcodes.Pointer.Relative: {\n                    let scale = this.getZoom(),\n                        offsetX = 0,\n                        offsetY = 0;\n\n                    element.css({\n                        left: `${x * scale - offsetX}px`,\n                        top: `${y * scale - offsetY}px`\n                    });\n\n                    break;\n                }\n            }\n    }\n\n    private setSize(element: JQuery): void {\n        let pointer = '/img/pointer.png';\n\n        element.css({\n            top: '30px',\n            width: '64px',\n            height: '64px',\n            margin: 'inherit',\n            marginTop: '-18px',\n            background: `url(\"${pointer}\") no-repeat -4px`\n        });\n    }\n\n    public clean(): void {\n        for (let pointer of Object.values(this.pointers)) pointer.destroy();\n\n        this.pointers = {};\n    }\n\n    private destroy(pointer: Arrow): void {\n        delete this.pointers[pointer.id];\n        pointer.destroy();\n    }\n\n    private set(pointer: Arrow, posX: number, posY: number): void {\n        let { camera, game } = this;\n\n        if (!camera) return;\n\n        let { element } = pointer,\n            { canvasWidth, canvasHeight } = game.renderer,\n            tileSize = game.map.tileSize * this.getZoom(), // 16 * scale\n            x = (posX - camera.x) * this.getZoom(),\n            width = parseInt(element.css('width')),\n            offset = width / 2 - tileSize / 2,\n            y = (posY - camera.y) * this.getZoom() - tileSize,\n            outX = x / canvasWidth,\n            outY = y / canvasHeight;\n\n        if (outX >= 1.5)\n            // Right\n            element.css({\n                left: '',\n                right: 0,\n                top: '50%',\n                bottom: '',\n                transform: 'rotate(-90deg)'\n            });\n        else if (outY >= 1.5)\n            // Bottom\n            element.css({\n                left: '50%',\n                right: '',\n                top: '',\n                bottom: 0,\n                transform: ''\n            });\n        else if (outX <= 0)\n            // Left\n            element.css({\n                left: 0,\n                right: '',\n                top: '50%',\n                bottom: '',\n                transform: 'rotate(90deg)'\n            });\n        else if (outY <= 0)\n            // Top\n            element.css({\n                left: '',\n                right: '50%',\n                top: 0,\n                bottom: '',\n                transform: 'rotate(180deg)'\n            });\n        else\n            element.css({\n                left: `${x - offset}px`,\n                right: '',\n                top: `${y}px`,\n                bottom: '',\n                transform: ''\n            });\n    }\n\n    public setToEntity(entity: Entity): void {\n        let pointer = this.get(entity.instance);\n\n        if (!pointer) return;\n\n        this.set(pointer, entity.x, entity.y);\n    }\n\n    public setToPosition(id: string, x: number, y: number): void {\n        let pointer = this.get(id);\n\n        if (!pointer) return;\n\n        pointer.setPosition(x, y);\n\n        this.set(pointer, x, y);\n    }\n\n    public setRelative(id: string, x: number, y: number): void {\n        let pointer = this.get(id);\n\n        if (!pointer) return;\n\n        let scale = this.getZoom(),\n            offsetX = 0,\n            offsetY = 0;\n\n        pointer.setPosition(x, y);\n\n        pointer.element.css({\n            left: `${x * scale - offsetX}px`,\n            top: `${y * scale - offsetY}px`\n        });\n    }\n\n    public update(): void {\n        for (let pointer of Object.values(this.pointers))\n            switch (pointer.type) {\n                case Opcodes.Pointer.Entity: {\n                    let entity = this.game.entities.get(pointer.id);\n\n                    if (entity) this.setToEntity(entity);\n                    else this.destroy(pointer);\n\n                    break;\n                }\n\n                case Opcodes.Pointer.Location: {\n                    if (pointer.x !== -1 && pointer.y !== -1)\n                        this.set(pointer, pointer.x, pointer.y);\n\n                    break;\n                }\n            }\n    }\n\n    private get(id: string): Arrow | null {\n        let { pointers } = this;\n\n        if (id in pointers) return pointers[id];\n\n        return null;\n    }\n\n    private getZoom(): number {\n        return this.game.camera.zoomFactor;\n    }\n}\n","import spriteData from '../../data/sprites.json';\nimport Animation from '../entity/animation';\nimport Sprite from '../entity/sprite';\nimport log from '../lib/log';\n\nimport type { SpriteData } from '../entity/sprite';\n\nexport default class SpritesController {\n    public sprites: { [id: string]: Sprite } = {};\n    public sparksAnimation: Animation = new Animation('idle_down', 6, 0, 16, 16);\n\n    public constructor() {\n        this.sparksAnimation.setSpeed(120);\n\n        this.load();\n    }\n\n    /**\n     * Iterates through all the sprites in the JSON file\n     * and initializes sprites based on their key and data.\n     */\n\n    public load(): void {\n        // TS doesn't like this for some reason.\n        for (let data of spriteData as SpriteData[]) {\n            let sprite = new Sprite(data);\n\n            this.sprites[data.id] = sprite;\n        }\n\n        log.debug('Finished loading sprite data...');\n\n        this.preloadSprites();\n    }\n\n    /**\n     * Hardcoded function that preloads necessary sprites off the bat.\n     * Things like the death animation has to be loaded as soon as possible.\n     */\n\n    public preloadSprites(): void {\n        this.get('death').load();\n    }\n\n    /**\n     * Grabs a sprite object based on the name string.\n     * @param name The string of the sprite we're attempting to grab.\n     * @returns A sprite object if found, otherwise undefined.\n     */\n\n    public get(name: string): Sprite {\n        return this.sprites[name];\n    }\n\n    /**\n     * @returns The death sprite used for when an entity\n     * dies or sometimes when a player teleports.\n     */\n\n    public getDeath(): Sprite {\n        return this.get('death');\n    }\n}\n","import { Modules } from '@kaetram/common/network';\n\n/**\n * Zoning controller keeps track of the current orientation.\n */\n\nexport default class ZoningController {\n    public direction!: Modules.Orientation | null;\n\n    public reset(): void {\n        this.direction = null;\n    }\n\n    public setUp(): void {\n        this.direction = Modules.Orientation.Up;\n    }\n\n    public setDown(): void {\n        this.direction = Modules.Orientation.Down;\n    }\n\n    public setRight(): void {\n        this.direction = Modules.Orientation.Right;\n    }\n\n    public setLeft(): void {\n        this.direction = Modules.Orientation.Left;\n    }\n\n    public getDirection(): Modules.Orientation {\n        return this.direction!;\n    }\n}\n","import CharacterHandler from '../handler';\n\nimport { Packets, Opcodes } from '@kaetram/common/network';\n\nimport type Map from '../../../map/map';\nimport type Player from './player';\nimport type Game from '../../../game';\nimport type EntitiesController from '../../../controllers/entities';\nimport type { TileIgnore } from '../../../utils/pathfinder';\n\nexport default class Handler extends CharacterHandler {\n    private map: Map;\n\n    private lastStepX = -1;\n    private lastStepY = -1;\n\n    protected override game: Game;\n    protected override entities: EntitiesController;\n\n    public constructor(player: Player) {\n        super(player);\n\n        this.map = player.game.map;\n\n        this.game = player.game;\n        this.entities = player.game.entities;\n    }\n\n    /**\n     * This subclass implementation is used for our current player (the one that we logged in with).\n     * Here we actually send the packets to the server and handle the real game logic.\n     * @param x The x grid coordinate of the tile the player clicked on.\n     * @param y The y grid coordinate of the tile the player clicked on.\n     * @returns The path to the new tile in a 2D array.\n     */\n\n    protected override handleRequestPath(x: number, y: number): number[][] {\n        // Prevent any calculations from being made if the player clicked on the tile they are already on.\n        if (this.character.gridX === x && this.character.gridY === y) return [];\n\n        // Prevent calculations from being made if the player is dead.\n        if (this.character.dead || this.character.frozen) return [];\n\n        // Prevent calculating pathing when we target a mob that is within range.\n        if (this.character.canAttackTarget() && !this.character.trading) return [];\n\n        let isObject = this.map.isObject(x, y);\n\n        // Ignore requests into colliding tiles but allow targetable objects.\n        if (this.map.isColliding(x, y) && !isObject) return [];\n\n        // Sends the packet to the server with the request.\n        this.game.socket.send(Packets.Movement, {\n            opcode: Opcodes.Movement.Request,\n            requestX: x,\n            requestY: y,\n            playerX: this.character.gridX,\n            playerY: this.character.gridY,\n            targetInstance: this.character.target?.instance,\n            following: this.character.following\n        });\n\n        let ignores: TileIgnore[] = [],\n            cursor = '';\n\n        // Treats an object as a character so we can path towards it.\n        if (isObject) {\n            ignores.push({ x, y });\n\n            cursor = this.map.getTileCursor(x, y);\n\n            // Little bit of a hack, but we ignore the tiles around the object for later.\n            if (cursor === 'fishing')\n                ignores.push({ x: x + 1, y }, { x: x - 1, y }, { x, y: y + 1 }, { x, y: y - 1 });\n        }\n\n        return this.game.findPath(this.character, x, y, ignores, cursor);\n    }\n\n    /**\n     * Updates the player's selected tile position and sends a packet to the server\n     * to inform it that the player has started moving.\n     * @param path Contains the array of tiles that the player will move through.\n     */\n\n    protected override handleStartPathing(path: number[][]): void {\n        // The selected tile is the last tile in the path.\n        [this.game.input.selectedX, this.game.input.selectedY] = path[path.length - 1];\n\n        this.character.moving = true;\n        this.game.input.selectedCellVisible = true;\n\n        this.game.socket.send(Packets.Movement, {\n            opcode: Opcodes.Movement.Started,\n            requestX: this.game.input.selectedX,\n            requestY: this.game.input.selectedY,\n            playerX: this.character.gridX,\n            playerY: this.character.gridY,\n            movementSpeed: this.character.movementSpeed,\n            targetInstance: this.character.target?.instance\n        });\n    }\n\n    /**\n     * Subclass implementation of the stop pathing handler. We update all the necessary\n     * information regarding input and player's actions here.\n     * @param x The x grid coordinate of the tile the player stopped on.\n     * @param y The y grid coordinate of the tile the player stopped on.\n     */\n\n    protected override handleStopPathing(x: number, y: number): void {\n        this.entities.registerPosition(this.character);\n\n        // Once stopped, remove the selected tile animation.\n        this.game.input.selectedCellVisible = false;\n\n        // Clipping the camera ensures it's always bound to the nearest tile.\n        this.game.camera.clip();\n\n        // Sends the stop pathing packet to the server\n        this.game.socket.send(Packets.Movement, {\n            opcode: Opcodes.Movement.Stop,\n            playerX: this.character.gridX,\n            playerY: this.character.gridY,\n            targetInstance:\n                this.character.target?.instance || this.game.getEntityAt(x, y)?.instance,\n            orientation: this.character.orientation\n        });\n\n        // TODO - Combine these two packets into the movement packet.\n\n        if (this.character.trading)\n            this.game.socket.send(Packets.Trade, {\n                opcode: Opcodes.Trade.Request,\n                instance: this.character.target?.instance\n            });\n\n        this.game.socket.send(Packets.Target, [\n            this.getTargetType(),\n            this.character.target?.instance || ''\n        ]);\n\n        // ---------------------------------------------------------\n\n        if (this.character.target) {\n            // Orient the player towards the target.\n            this.character.lookAt(this.character.target);\n\n            // Remove the target when we target objects.\n            if (this.character.target.isObject()) this.character.removeTarget();\n\n            // Disable keyboard movement until we let go.\n            (this.character as Player).disableAction = true;\n        }\n\n        this.game.input.setPassiveTarget();\n\n        // Save the player's orientation.\n        this.game.storage.setOrientation(this.character.orientation);\n\n        // Reset the animated tiles when we stop moving.\n        this.game.renderer.resetAnimatedTiles();\n\n        // Reset movement and trading variables\n        this.character.moving = false;\n        this.character.trading = false;\n    }\n\n    /**\n     * Called for every transition of the player from one tile to another. We synchronizew\n     * the camera and update the boundaries (if we don't use centred camera). We also send\n     * a packet to the server to inform it that the player has moved. Lastly we check\n     * if the player can initiate combat (if they targeted an entity).\n     */\n\n    protected override handleStep(): void {\n        // While we have tiles left in our pathing we register the character's position\n        if (this.character.hasNextStep()) this.entities.registerPosition(this.character);\n\n        // Check zoning boundaries if we're using a non-centered camera.\n        if (!this.game.camera.isCentered()) this.game.updateCameraBounds();\n\n        // Used to prevent sending double packets.\n        if (this.lastStepX === this.character.gridX && this.lastStepY === this.character.gridY)\n            return;\n\n        // Send the packet to the server to inform it that the player has moved.\n        this.game.socket.send(Packets.Movement, {\n            opcode: Opcodes.Movement.Step,\n            playerX: this.character.gridX,\n            playerY: this.character.gridY,\n            timestamp: Date.now()\n        });\n\n        // Update the last step coordinates.\n        this.lastStepX = this.character.gridX;\n        this.lastStepY = this.character.gridY;\n\n        // Check if we can initiate combat.\n        if (this.character.canAttackTarget() && !this.character.trading) this.character.stop(true);\n    }\n\n    /**\n     * Updates the animated tiles every second step to get them all\n     * synchronized with one another.\n     */\n\n    protected override handleSecondStep(): void {\n        this.game.renderer.updateAnimatedTiles();\n    }\n\n    /**\n     * Updates the camera position to center on the player.\n     */\n\n    protected override handleMove(): void {\n        if (!this.game.camera.isCentered()) return;\n\n        this.game.camera.centreOn(this.character);\n    }\n\n    /**\n     * This is a temporary function until we move unncessary packets to be handled by the\n     * server side and update the client-side targeting system. This essentially checks\n     * what type of interaction the player is doing.\n     * @returns The interaction type.\n     */\n\n    private getTargetType(): Opcodes.Target {\n        if (!this.character.target) return Opcodes.Target.None;\n\n        // Interaction type for npc and chests.\n        if (this.character.target.isNPC() || this.character.target.isChest())\n            return Opcodes.Target.Talk;\n\n        // Interaction type for objects.\n        if (this.character.target.isObject()) return Opcodes.Target.Object;\n\n        // Interaction for attacking\n        if (this.character.target.isMob() || (this.character.target.isPlayer() && this.game.pvp))\n            return Opcodes.Target.Attack;\n\n        return Opcodes.Target.None;\n    }\n}\n","import mapData from '../../data/maps/map.json';\nimport log from '../lib/log';\nimport Utils, { isInt } from '../utils/util';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type {\n    ProcessedAnimation,\n    ProcessedTileset,\n    RegionData,\n    RegionTile,\n    RegionTileData\n} from '@kaetram/common/types/map';\nimport type Game from '../game';\n\nexport interface CursorTiles {\n    [tileId: number]: string;\n}\n\n// An extension of image with tileset information attached.\ninterface TilesetInfo extends HTMLImageElement {\n    index: number;\n    path: string;\n    firstGid: number;\n    lastGid: number;\n    loaded: boolean;\n}\n\nexport default class Map {\n    public width = mapData.width;\n    public height = mapData.height;\n    public tileSize = mapData.tileSize;\n\n    // Map data\n    public data: RegionTile[] = [];\n    public grid: number[][] = []; // Two dimensional grid array for collisions/pathing\n\n    private high: number[] = mapData.high;\n    private objects: number[] = [];\n    private lights: number[] = [];\n\n    public tilesets: TilesetInfo[] = [];\n    private rawTilesets: ProcessedTileset[] = mapData.tilesets; // Key is tileset id, value is the firstGID\n    private cursorTiles: CursorTiles = {};\n    private animatedTiles: { [tileId: number]: ProcessedAnimation[] } = mapData.animations;\n\n    public mapLoaded = false;\n    public regionsLoaded = 0;\n    private tilesetsLoaded = false;\n\n    private readyCallback?(): void;\n\n    public constructor(private game: Game) {\n        this.load();\n    }\n\n    /**\n     * A simple loop that continuously checks if the map has loaded.\n     * Once it has, it sends a ready callback signal.\n     */\n\n    private ready(): void {\n        if (this.mapLoaded && this.tilesetsLoaded) this.readyCallback?.();\n        else window.setTimeout(() => this.ready(), 100);\n    }\n\n    /**\n     * Uses webworkers to create an empty data and collision\n     * grid based on the map's dimensions. This can be quite\n     * time consuming so we relay it to an external worker\n     * to speed up the task.\n     */\n\n    private load(): void {\n        log.debug('Parsing map with Web Workers...');\n\n        // Store tile size globally into the utils.\n        Utils.tileSize = this.tileSize;\n        Utils.sideLength = this.width / Modules.Constants.MAP_DIVISION_SIZE;\n        Utils.thirdTile = this.tileSize / 3;\n        Utils.tileAndAQuarter = this.tileSize * 1.25;\n\n        let worker = new Worker(new URL('mapworker.ts', import.meta.url), { type: 'classic' });\n\n        // Send the map's width and height to the webworker.\n        worker.postMessage([this.width, this.height]);\n\n        worker.addEventListener('message', (event) => {\n            if (event.data.data) this.data = event.data.data;\n            if (event.data.grid) this.grid = event.data.grid;\n\n            this.loadRegionData();\n\n            this.mapLoaded = true;\n        });\n\n        this.loadTilesets();\n\n        this.ready();\n    }\n\n    /**\n     * Iterates through every region in the data and stores the\n     * information from each region into our local instance.\n     * @param regionData Dictionary containing regionId as key and region data array as value.\n     */\n\n    public loadRegions(regionData: RegionData): void {\n        for (let region in regionData) this.loadRegion(regionData[region], parseInt(region));\n\n        // Save data after we finish parsing it.\n        this.saveMapData();\n\n        // Bind the tile layer textures after we finish parsing the map.\n        if (this.game.useWebGl) this.game.renderer.bindTileLayers();\n    }\n\n    /**\n     * Loads data from all the tiles in the specified region.\n     * Each tile contains the x and y grid coordinate, along with information\n     * about tileIds, collisions, cursor, and objects.\n     * @param data Array of RegionTileData containing the data to load.\n     */\n\n    public loadRegion(data: RegionTileData[], region: number): void {\n        for (let tile of data) {\n            let index = this.coordToIndex(tile.x, tile.y),\n                objectIndex = this.objects.indexOf(index);\n\n            // Store the tile data so that we can render it later.\n            this.data[index] = tile.data;\n\n            // Add collision if the tile is colliding and there's no collision.\n            if (tile.c && !this.isColliding(tile.x, tile.y)) this.grid[tile.y][tile.x] = 1;\n\n            // Remove collision if the tile is not colliding and there's a collision.\n            if (!tile.c && this.isColliding(tile.x, tile.y)) this.grid[tile.y][tile.x] = 0;\n\n            // If the tile has a cursor, we store it in our cursorTiles dictionary.\n            if (tile.cur) this.cursorTiles[index] = tile.cur;\n\n            // If the tile doesn't have a cursor but the index is in our cursorTiles dictionary, we remove it.\n            if (!tile.cur && index in this.cursorTiles) this.cursorTiles[index] = '';\n\n            // If the tile has an object, we store it in our objects array.\n            if (tile.o && objectIndex < 0) this.objects.push(index);\n\n            // If the tile doesn't have an object but the index is in our objects array, we remove it.\n            if (!tile.o && objectIndex > -1) this.objects.splice(objectIndex, 1);\n\n            // Add the tile information to the WebGL renderer if it's active.\n            if (this.game.useWebGl) this.game.renderer.setTile(index, tile.data);\n        }\n\n        // Store the region we just saved into our local storage.\n        this.game.storage.setRegionData(data, region);\n    }\n\n    /**\n     * Iterates through the raw tileset data from the map parser. The key\n     * of the raw tileset data is the tileset id, and the value is the\n     * firstGID. Because loading tilesets occurs asynchronously, we need\n     * to keep track of how many tilesets we've loaded. Once the tilesets\n     * loaded match the number of raw tilesets, we can then toggle the\n     * `tilesetsLoaded` flag so that the map can be loaded (see `ready` function).\n     */\n\n    private loadTilesets(): void {\n        for (let index in this.rawTilesets)\n            this.loadTileset(this.rawTilesets[index], parseInt(index), (tileset: TilesetInfo) => {\n                this.tilesets.push(tileset);\n\n                if (this.tilesets.length === this.rawTilesets.length) {\n                    // Sort tilesets by first gid.\n                    this.tilesets = this.tilesets.sort((a, b) => a.firstGid - b.firstGid);\n\n                    this.tilesetsLoaded = true;\n                }\n            });\n    }\n\n    /**\n     * Handles loading the image for a tileset. Once the image has been loaded\n     * we invoke the callbakc function with the information about the new tileset.\n     * @param tileset Raw tileset data parsed from the map.\n     * @param callback Parsed client tileset of type TilesetInfo.\n     */\n\n    private loadTileset(\n        tileset: ProcessedTileset,\n        index: number,\n        callback: (tileset: TilesetInfo) => void\n    ): void {\n        let tilesetInfo = new Image() as TilesetInfo,\n            path = `/img/tilesets/${tileset.path}`; // tileset path in the client.\n\n        tilesetInfo.crossOrigin = 'Anonymous';\n        tilesetInfo.path = path;\n        tilesetInfo.src = path;\n        tilesetInfo.index = index;\n        tilesetInfo.firstGid = tileset.firstGid;\n        tilesetInfo.lastGid = tileset.lastGid;\n\n        // Listener for when the image has finished loading. Equivalent of `image.onload`\n        tilesetInfo.addEventListener('load', () => {\n            // Prevent uneven tilemaps from loading.\n            if (tilesetInfo.width % this.tileSize > 0)\n                throw new Error(`The tile size is malformed in the tile set: ${tileset.path}`);\n\n            // Mark tileset as loaded.\n            tilesetInfo.loaded = true;\n\n            callback(tilesetInfo);\n        });\n\n        tilesetInfo.addEventListener('error', () => {\n            throw new Error(`Could not find tile set: ${tileset.path}`);\n        });\n\n        /**\n         * A fallback timeout in case the tileset image refuses to load. For some reason\n         * when we try to load tilesets, the callback is not initialzied properly. This\n         * causes the game to hang on the loading screen. Where it gets weirder is that\n         * as long as a `console.log` is present, the callback is initialized properly.\n         * This is a safety net that checks every 500ms if the tileset has loaded.\n         */\n\n        setTimeout(() => {\n            if (tilesetInfo.loaded) return;\n\n            // Recursively call this function until the tileset is loaded.\n            this.loadTileset(tileset, index, callback);\n\n            log.debug(`Retrying to load tileset: ${tileset.path}`);\n        }, 500);\n    }\n\n    /**\n     * Uses IndexedDB to retrieve the stored map data from the previous session(s).\n     * We either receive completed data or empty region information. Once we have\n     * parsed the data, we can then proceed with loading the rest of the game.\n     */\n\n    public loadRegionData(): void {\n        this.game.storage.getRegionData((data) => {\n            // Used for debugging purposes.\n            let keys = Object.keys(data.regionData);\n\n            if (keys.length > 0) {\n                try {\n                    this.loadRegions(data.regionData);\n                } catch {\n                    this.game.storage.clear();\n                }\n\n                this.objects = data.objects;\n                this.cursorTiles = data.cursorTiles;\n\n                this.regionsLoaded = keys.length;\n\n                log.info(`Preloaded map data with ${keys.length} regions.`);\n            }\n\n            // Used for WebGL to load map texture information.\n            this.game.renderer.load();\n        });\n    }\n\n    /**\n     * Saves and stores information about objects and cursor tiles into the local storage.\n     */\n\n    private saveMapData(): void {\n        this.game.storage.setMapData(this.objects, this.cursorTiles);\n    }\n\n    /**\n     * Converts a coordinate (x and y) into an array index.\n     * @returns Index position relative to a 1 dimensional array.\n     */\n\n    public coordToIndex(x: number, y: number): number {\n        return y * this.width + x;\n    }\n\n    /**\n     * Works in reverse to `coordToIndex`. Takes an index\n     * within a one dimensional array and returns the\n     * coordinate variant of that index.\n     * @param index The index of the coordinate\n     */\n\n    public indexToCoord(index: number): Position {\n        return {\n            x: index % this.width,\n            y: Math.floor(index / this.width)\n        };\n    }\n\n    /**\n     * Checks if a coordinate in the grid collision is\n     * marked as a collision.\n     * @param x The x grid coordinate.\n     * @param y The y grid coordinate.\n     * @returns Whether the x and y coordinates in the 2D grid are colliding.\n     */\n\n    public isColliding(x: number, y: number): boolean {\n        if (this.isOutOfBounds(x, y)) return true;\n        if ((this.data[this.coordToIndex(x, y)] as number) < 1) return true;\n\n        return this.grid[y][x] === 1;\n    }\n\n    /**\n     * Converts the x and y grid coordinate parameters into an index and checks\n     * whether that index is contained within our objects array.\n     * @param x The x grid coordinate we are checking.\n     * @param y The y grid coordinate we are checking.\n     * @returns Whether or not the x and y grid index is in our objects array.\n     */\n\n    public isObject(x: number, y: number): boolean {\n        let index = this.coordToIndex(x, y);\n\n        return this.objects.includes(index);\n    }\n\n    /**\n     * Converts the x and y grid coordinate into an index and checks\n     * our cursor tiles dictionary for an entry of the index. If it's not\n     * found, it returns undefined by default.\n     * @param x The x grid coordinate we are checking.\n     * @param y The y grid coordinate we are checking.\n     * @returns The name of the cursor at the tile index if exists, otherwise undefined.\n     */\n\n    public getTileCursor(x: number, y: number): string {\n        let index = this.coordToIndex(x, y);\n\n        return this.cursorTiles[index];\n    }\n\n    /**\n     * Checks if the tileId parameter is part of our high tiles array.\n     * @param tileId The tileId we are checking.\n     * @returns Whether the tileId is contained in our high tiles array.\n     */\n\n    public isHighTile(tileId: number): boolean {\n        return this.high.includes(tileId);\n    }\n\n    /**\n     * Checks if the tileId parameter is part of our lights array.\n     * @param tileId The tileId we are checking.\n     * @returns Whether or not the tileId is contained in our lights array.\n     */\n\n    public isLightTile(tileId: number): boolean {\n        return this.lights.includes(tileId);\n    }\n\n    /**\n     * Checks if there's an entry for the tileId in our animations dictionary.\n     * @param tileId The tileId we are checking animations of.\n     * @returns Whether the tileId is contained in our animations dictionary.\n     */\n\n    public isAnimatedTile(tileId: number): boolean {\n        return tileId in this.animatedTiles;\n    }\n\n    /**\n     * Cached data is represented by the amount of regions loaded.\n     * @returns Whether or not the amount of regions loaded is greater than 0.\n     */\n\n    public hasCachedDate(): boolean {\n        return this.regionsLoaded > 0;\n    }\n\n    /**\n     * Verifies if x and y are integers and whether or not they are within the bounds of\n     * the map. That is, whether x and y are not smaller than 0, and no greater than the\n     * width and height of the map respectively.\n     * @param x The x grid coordinate we are checking.\n     * @param y The y grid coordinate we are checking.\n     * @returns Whether or not the x and y grid coordinates are within the bounds of the map.\n     */\n\n    public isOutOfBounds(x: number, y: number): boolean {\n        return isInt(x) && isInt(y) && (x < 0 || x >= this.width || y < 0 || y >= this.height);\n    }\n\n    /**\n     * Grabs an array of animated tile information based on tileId.\n     * @param tileId THe tileId we are looking for.\n     * @returns A ProcessedAnimation object array from our animated tiles.\n     */\n\n    public getTileAnimation(tileId: number): ProcessedAnimation[] {\n        return this.animatedTiles[tileId];\n    }\n\n    /**\n     * Finds the tileset that the tileId belongs to.\n     * @param tileId The tileId we are trying to determine tileset of.\n     * @returns The tileset of the tileId if found or otherwise undefined.\n     */\n\n    public getTilesetFromId(tileId: number): TilesetInfo | undefined {\n        for (let tileset of this.tilesets)\n            if (tileId >= tileset.firstGid && tileId <= tileset.lastGid) return tileset;\n\n        return undefined;\n    }\n    /**\n     * Callback for when the map is ready to be used (preliminary data is loaded).\n     */\n\n    public onReady(callback: () => void): void {\n        this.readyCallback = callback;\n    }\n}\n","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { inflate } from 'pako';\nimport { Packets, Opcodes, Modules } from '@kaetram/common/network';\n\nimport type Player from '../entity/character/player/player';\nimport type App from '../app';\nimport type Overlays from '../renderer/overlays';\nimport type InfoController from '../controllers/info';\nimport type Game from '../game';\nimport type Map from '../map/map';\nimport type Camera from '../renderer/camera';\nimport type Renderer from '../renderer/renderer';\nimport type InputController from '../controllers/input';\nimport type Socket from './socket';\nimport type PointerController from '../controllers/pointer';\nimport type AudioController from '../controllers/audio';\nimport type EntitiesController from '../controllers/entities';\nimport type BubbleController from '../controllers/bubble';\nimport type MenuController from '../controllers/menu';\nimport type SpritesController from '../controllers/sprites';\nimport type Messages from './messages';\nimport type Entity from '../entity/entity';\nimport type Item from '../entity/objects/item';\nimport type NPC from '../entity/npc/npc';\nimport type Character from '../entity/character/character';\nimport type { PlayerData } from '@kaetram/common/types/player';\nimport type { SerializedSkills, SkillData } from '@kaetram/common/types/skills';\nimport type { EquipmentData, SerializedEquipment } from '@kaetram/common/types/equipment';\nimport type { SerializedAbility, AbilityData } from '@kaetram/common/types/ability';\nimport type {\n    AbilityPacket,\n    AchievementPacket,\n    AnimationPacket,\n    BubblePacket,\n    ChatPacket,\n    CombatPacket,\n    CommandPacket,\n    ContainerPacket,\n    DespawnPacket,\n    EnchantPacket,\n    EquipmentPacket,\n    ExperiencePacket,\n    HealPacket,\n    MovementPacket,\n    NotificationPacket,\n    NPCPacket,\n    OverlayPacket,\n    PointerPacket,\n    PointsPacket,\n    PVPPacket,\n    QuestPacket,\n    RespawnPacket,\n    StorePacket,\n    TeleportPacket,\n    SkillPacket,\n    MinigamePacket,\n    EffectPacket,\n    FriendsPacket,\n    ListPacket,\n    TradePacket,\n    HandshakePacket,\n    GuildPacket,\n    CraftingPacket\n} from '@kaetram/common/types/messages/outgoing';\nimport type { EntityDisplayInfo } from '@kaetram/common/types/entity';\n\nexport default class Connection {\n    /**\n     * Keep all game objects as instances in this class\n     * in order to cut down on length of code when trying\n     * to access them.\n     */\n\n    private app: App;\n    private overlays: Overlays;\n    private info: InfoController;\n    private map: Map;\n    private camera: Camera;\n    private renderer: Renderer;\n    private input: InputController;\n    private socket: Socket;\n    private pointer: PointerController;\n    private audio: AudioController;\n    private entities: EntitiesController;\n    private bubble: BubbleController;\n    private menu: MenuController;\n    private sprites: SpritesController;\n    private messages: Messages;\n\n    private lastEntityListRequest = Date.now();\n\n    /**\n     * Connection controller keeps track of all the incoming packets\n     * and reroutes them to their specific function for organization purposes.\n     */\n\n    public constructor(private game: Game) {\n        this.app = game.app;\n        this.overlays = game.overlays;\n        this.info = game.info;\n        this.map = game.map;\n        this.camera = game.camera;\n        this.renderer = game.renderer;\n        this.input = game.input;\n        this.socket = game.socket;\n        this.pointer = game.pointer;\n        this.audio = game.audio;\n        this.entities = game.entities;\n        this.bubble = game.bubble;\n        this.menu = game.menu;\n        this.sprites = game.sprites;\n        this.messages = this.socket.messages;\n\n        this.app.onFocus(() => this.socket.send(Packets.Focus));\n\n        this.messages.onHandshake(this.handleHandshake.bind(this));\n        this.messages.onWelcome(this.handleWelcome.bind(this));\n        this.messages.onMap(this.handleMap.bind(this));\n        this.messages.onEquipment(this.handleEquipment.bind(this));\n        this.messages.onSpawn(this.entities.create.bind(this.entities));\n        this.messages.onEntityList(this.handleEntityList.bind(this));\n        this.messages.onSync(this.handleSync.bind(this));\n        this.messages.onMovement(this.handleMovement.bind(this));\n        this.messages.onTeleport(this.handleTeleport.bind(this));\n        this.messages.onDespawn(this.handleDespawn.bind(this));\n        this.messages.onCombat(this.handleCombat.bind(this));\n        this.messages.onAnimation(this.handleAnimation.bind(this));\n        this.messages.onPoints(this.handlePoints.bind(this));\n        this.messages.onNetwork(this.handleNetwork.bind(this));\n        this.messages.onChat(this.handleChat.bind(this));\n        this.messages.onCommand(this.handleCommand.bind(this));\n        this.messages.onContainer(this.handleContainer.bind(this));\n        this.messages.onAbility(this.handleAbility.bind(this));\n        this.messages.onQuest(this.handleQuest.bind(this));\n        this.messages.onAchievement(this.handleAchievement.bind(this));\n        this.messages.onNotification(this.handleNotification.bind(this));\n        this.messages.onBlink(this.handleBlink.bind(this));\n        this.messages.onHeal(this.handleHeal.bind(this));\n        this.messages.onExperience(this.handleExperience.bind(this));\n        this.messages.onDeath(this.handleDeath.bind(this));\n        this.messages.onMusic(this.handleMusic.bind(this));\n        this.messages.onNPC(this.handleNPC.bind(this));\n        this.messages.onRespawn(this.handleRespawn.bind(this));\n        this.messages.onTrade(this.handleTrade.bind(this));\n        this.messages.onEnchant(this.handleEnchant.bind(this));\n        this.messages.onGuild(this.handleGuild.bind(this));\n        this.messages.onPointer(this.handlePointer.bind(this));\n        this.messages.onPVP(this.handlePVP.bind(this));\n        this.messages.onPoison(this.handlePoison.bind(this));\n        this.messages.onStore(this.handleStore.bind(this));\n        this.messages.onOverlay(this.handleOverlay.bind(this));\n        this.messages.onCamera(this.handleCamera.bind(this));\n        this.messages.onBubble(this.handleBubble.bind(this));\n        this.messages.onSkill(this.handleSkill.bind(this));\n        this.messages.onUpdate(this.handleUpdate.bind(this));\n        this.messages.onMinigame(this.handleMinigame.bind(this));\n        this.messages.onEffect(this.handleEffect.bind(this));\n        this.messages.onFriends(this.handleFriends.bind(this));\n        this.messages.onRank(this.handleRank.bind(this));\n        this.messages.onCrafting(this.handleCrafting.bind(this));\n    }\n\n    /**\n     * Handles the handshake packet from the server. The handshake signals\n     * to the client that the connection is now established and the client\n     * must send the login packet (guest, registering, or login).\n     */\n\n    private handleHandshake(data: HandshakePacket): void {\n        this.app.updateLoader('Connecting to server');\n\n        // Set the server id and instance\n        this.game.player.instance = data.instance!;\n        this.game.player.serverId = data.serverId!;\n\n        // Guest login doesn't require any credentials, send the packet right away.\n        if (this.app.isGuest())\n            return this.socket.send(Packets.Login, { opcode: Opcodes.Login.Guest });\n\n        let username = this.app.getUsername(),\n            password = this.app.getPassword(),\n            email = this.app.getEmail();\n\n        // Assign username to palyer object (will get overriden after login is completed).\n        this.game.player.name = username.toLowerCase();\n\n        // Send register packet if the user is registering.\n        if (this.app.isRegistering())\n            return this.socket.send(Packets.Login, {\n                opcode: Opcodes.Login.Register,\n                username,\n                password,\n                email\n            });\n\n        // Send login packet if the user is logging in.\n        this.socket.send(Packets.Login, {\n            opcode: Opcodes.Login.Login,\n            username,\n            password\n        });\n    }\n\n    /**\n     * Receives the serialized player data from the server\n     * and begins loading the game instance of the player.\n     * @param data Serialized player data object.\n     */\n\n    private handleWelcome(data: PlayerData): void {\n        this.game.player.load(data);\n\n        this.game.start();\n        this.game.postLoad();\n    }\n\n    /**\n     * Receives the compressed map data from the server. Due to the size of\n     * the map data, we must compress when sending and decompress on the client's\n     * end. We ensure that this map region is saved in the client to prevent\n     * relying on the client always pulling map data.\n     * @param info Compressed region data of the map.\n     */\n\n    private handleMap(info: string): void {\n        let bufferData = window\n                .atob(info)\n                // eslint-disable-next-line unicorn/prefer-spread\n                .split('')\n                // eslint-disable-next-line unicorn/prefer-code-point\n                .map((char) => char.charCodeAt(0)),\n            inflatedString = inflate(new Uint8Array(bufferData), { to: 'string' }),\n            regions = JSON.parse(inflatedString);\n\n        this.map.loadRegions(regions);\n\n        // Used if the client uses low-power mode, forces redrawing of trees.\n        this.renderer.forceRendering = true;\n\n        // Update the animated tiles when we receive new map data.\n        this.renderer.updateAnimatedTiles();\n\n        if (!this.map.hasCachedDate()) this.app.fadeMenu();\n    }\n\n    /**\n     * Receives the equipment packet from the server. When we receive batch\n     * data from the server we update every equipment slot with the new data.\n     * A single equipment is accompanied by a type and serialized slot info.\n     * @param opcode Type of equipment packet we are working with.\n     * @param info Data containing equipment(s) information.\n     */\n\n    private handleEquipment(opcode: Opcodes.Equipment, info: EquipmentPacket): void {\n        switch (opcode) {\n            case Opcodes.Equipment.Batch: {\n                for (let equipment of (info.data as SerializedEquipment).equipments)\n                    this.game.player.equip(equipment);\n\n                break;\n            }\n\n            case Opcodes.Equipment.Equip: {\n                this.game.player.equip(info.data as EquipmentData);\n                break;\n            }\n\n            case Opcodes.Equipment.Unequip: {\n                this.game.player.unequip(info.type!, info.count);\n                break;\n            }\n\n            case Opcodes.Equipment.Style: {\n                this.game.player.setAttackStyle(info.attackStyle!);\n                this.game.player.attackRange = info.attackRange!;\n                break;\n            }\n        }\n\n        this.game.player.sync();\n    }\n\n    /**\n     * Compares the list of entities from the server and removes any enities that are spawned\n     * but no longer contained within the region. This occurs when the player goes from one\n     * region to another, and we are queueing up entities for depsawn.\n     * @param entities A list of strings that contains the instances of the entities in the region.\n     */\n\n    private handleEntityList(opcode: Opcodes.List, info: ListPacket): void {\n        switch (opcode) {\n            case Opcodes.List.Spawns: {\n                let ids = new Set(\n                        Object.values(this.entities.getAll()).map((entity) => entity.instance)\n                    ),\n                    known = new Set(info.entities!.filter((id) => ids.has(id))),\n                    newIds = info.entities!.filter((id) => !known.has(id));\n\n                // Prepare the entities ready for despawning.\n                this.entities.decrepit = Object.values(this.entities.getAll()).filter(\n                    (entity) =>\n                        !known.has(entity.instance) && entity.instance !== this.game.player.instance\n                );\n\n                // Clear the entities in the decrepit queue.\n                this.entities.clean();\n\n                // Send the new id list request to the server.\n                this.socket.send(Packets.Who, newIds);\n                break;\n            }\n\n            case Opcodes.List.Positions: {\n                // Look through all the positions of the entities and their instances.\n                for (let instance in info.positions!) {\n                    let position = info.positions[instance],\n                        entity = this.entities.get<Character>(instance);\n\n                    // No entity found, just skip.\n                    if (!entity || entity.moving || entity.hasPath()) return;\n\n                    /**\n                     * When we detect a mismatch in client-sided and server-sided\n                     * entity positions we teleport the entity to the correct position.\n                     */\n\n                    if (entity.gridX !== position.x || entity.gridY !== position.y)\n                        this.game.teleport(entity, position.x, position.y);\n                }\n            }\n        }\n    }\n\n    /**\n     * Handles the synchronization packet from the server. Synchronization\n     * is used when the player entity undergoes a change and that is\n     * relayed to the nearby players (level change, equipment change, etc.).\n     * @param data Player data object containing new information about the player entity.\n     */\n\n    private handleSync(data: PlayerData): void {\n        let player = this.entities.get<Player>(data.instance);\n\n        // Invalid instance, player not found/not spawned.\n        if (!player || player.teleporting || player.dead || !player.ready) return;\n\n        player.load(data, true);\n\n        player.setSprite(this.game.sprites.get(player.getSpriteName()));\n    }\n\n    /**\n     * Handles the movement packets. These can either be request to move to a position,\n     * a follow request, or a forcibly (optional) stop request. Freeze and stunned states\n     * also get sent alongside the movement packets.\n     * @param opcode The type of movement we are dealing with.\n     * @param info Information such as instance and coordinates of the entity that is moving.\n     */\n\n    private handleMovement(opcode: Opcodes.Movement, info: MovementPacket): void {\n        let entity = this.entities.get<Character>(info.instance),\n            target: Entity;\n\n        /**\n         * We are receiving movement for an entity that doesn't exist,\n         * we need to request an entity list update to the server.\n         */\n        if (!entity) {\n            // Ensures packets are not spammed to the server.\n            if (!this.canRequestEntityList()) return;\n\n            // Update the last entity list request time.\n            this.lastEntityListRequest = Date.now();\n\n            // Request an entity list update from the server.\n            return this.socket.send(Packets.List);\n        }\n\n        switch (opcode) {\n            case Opcodes.Movement.Move: {\n                if (info.forced) entity.stop(true);\n\n                entity.go(info.x!, info.y!, false, info.instance !== this.game.player.instance);\n                break;\n            }\n\n            case Opcodes.Movement.Follow: {\n                target = this.entities.get<Character>(info.target!);\n\n                if (target) {\n                    // Prevent following a target after we've clicked off of it.\n                    if (\n                        entity.instance === this.game.player.instance &&\n                        !this.game.player.hasTarget() &&\n                        !info.forced\n                    )\n                        return;\n\n                    entity.follow(target);\n                }\n\n                break;\n            }\n\n            case Opcodes.Movement.Stop: {\n                if (info.forced) entity.stop(true);\n                break;\n            }\n\n            case Opcodes.Movement.Speed: {\n                entity.movementSpeed = info.movementSpeed!;\n                break;\n            }\n        }\n    }\n\n    /**\n     * Handler for the teleportation packet. Used when a player entity\n     * teleports to a new location.\n     * @param info Instance of the entity, x and y coordinates, and whether to animate.\n     */\n\n    private handleTeleport(info: TeleportPacket): void {\n        let entity = this.entities.get<Character>(info.instance);\n\n        if (!entity?.isMob() && !entity?.isPlayer()) return;\n\n        this.input.selectedCellVisible = false;\n\n        // If the entity is the same as our main entity.\n        let currentPlayer = entity.instance === this.game.player.instance;\n\n        // Stop and freeze the player until teleprtation is complete.\n        entity.stop(true);\n        entity.frozen = true;\n\n        // Clears all bubbles when our main entity teleports.\n        if (currentPlayer) {\n            this.bubble.clean();\n\n            // Disable keyboard actions until teleportation is complete.\n            this.game.player.disableAction = true;\n        } else this.bubble.clear(entity.instance); // Clears bubble of teleporting entity.\n\n        // No animation, skip straight to teleporting.\n        if (!info.withAnimation) return this.game.teleport(entity, info.x, info.y);\n\n        // Copy the entity's sprite temporarily.\n        let entitySprite = entity.sprite.key;\n\n        // Prevent rendering of the sword.\n        entity.teleporting = true;\n\n        // Set the entity's sprite to the death animation sprite.\n        entity.setSprite(this.sprites.getDeath());\n\n        entity.animateDeath(() => {\n            this.game.teleport(entity, info.x, info.y);\n\n            // Reset the animation.\n            entity.animation = null;\n\n            // Restore the entity's sprite.\n            entity.setSprite(this.sprites.get(entitySprite));\n            entity.idle(entity.orientation, true);\n        }, 160);\n    }\n\n    /**\n     * Handler for when we want to despawn an entity.\n     * @param info Contains despawn packet information such as instance and list of regions to ignore.\n     */\n\n    private handleDespawn(info: DespawnPacket): void {\n        let entity = this.entities.get<Character>(info.instance);\n\n        // Could not find the entity.\n        if (!entity) return;\n\n        // If a list of regions is provided, we check the entity is in one of those regions.\n        if (info.regions && !info.regions.includes(entity.region)) return;\n\n        // Handle item despawn separately here.\n        if (entity.isItem()) return this.entities.removeItem(entity);\n\n        // Handle chest and animations here.\n        if (entity.isChest()) return this.entities.removeChest(entity);\n\n        // Handle npc despawn here.\n        if (entity.isNPC()) return this.entities.removeNPC(entity);\n\n        // Despawn the entity.\n        entity.despawn();\n\n        // Removes bubbles from the entity.\n        this.bubble.clear(entity.instance);\n\n        // Clears our client's target.\n        if (this.game.player.hasTarget(entity)) this.game.player.removeTarget();\n\n        // Plays a random kill sound.\n        this.audio.playKillSound(entity);\n\n        // Certain entities will have a special death animation, otherwise we use default.\n        if (!entity.sprite.hasDeathAnimation) entity.setSprite(this.sprites.getDeath());\n\n        // Animate the entity's death.\n        entity.animateDeath(() => this.entities.removeEntity(entity));\n    }\n\n    /**\n     * Combat packet handler. Primarily deals with displaying hit damages\n     * and creating infos on the screen.\n     * @param opcode Type of combat packet we're dealing with.\n     * @param info Contains attacker, target, and damage information.\n     */\n\n    private handleCombat(opcode: Opcodes.Combat, info: CombatPacket): void {\n        let attacker = this.entities.get<Character>(info.instance),\n            target = this.entities.get<Character>(info.target);\n\n        // Could not find the attacker or target.\n        if (!attacker || !target) return;\n\n        if (opcode !== Opcodes.Combat.Hit) return;\n\n        // Check if our client's player is the target or the attacker.\n        let currentPlayerTarget = target.instance === this.game.player.instance,\n            currentPlayerAttacker = attacker.instance === this.game.player.instance,\n            isPoison = info.hit.type === Modules.Hits.Poison,\n            isFreezing = info.hit.type === Modules.Hits.Freezing,\n            isBurning = info.hit.type === Modules.Hits.Burning;\n\n        // Set the terror effect onto the target.\n        if (isPoison) target.addEffect(Modules.Effects.Poisonball);\n\n        // Perform the critical effect onto the target.\n        if (info.hit.type === Modules.Hits.Critical) target.addEffect(Modules.Effects.Critical);\n\n        // Perform the attack animation if the damage type isn't from AOE or poison.\n        if (!info.hit.aoe && !isPoison && !isFreezing && !isBurning) {\n            attacker.lookAt(target);\n            attacker.performAction(attacker.orientation, Modules.Actions.Attack);\n        }\n\n        // If the game client player is the attacker, we play the hit sound effect.\n        if (currentPlayerAttacker && info.hit.damage > 0) this.audio.playHitSound(target);\n\n        // Play the hurt sound effect if the client player is the target.\n        if (currentPlayerTarget && info.hit.damage > 0) this.audio.playSound('hurt');\n\n        // Create the hit info to be displayed above the entity.\n        this.info.create(info.hit.type, info.hit.damage, target.x, target.y, currentPlayerTarget);\n\n        // Flash the target character when a hit occurs.\n        if (info.hit.damage > 0) target.toggleHurt();\n\n        // Show the health bar for both entities.\n        attacker.triggerHealthBar();\n        target.triggerHealthBar();\n    }\n\n    /**\n     * Animates a character based on the provided instance.\n     * @param info Contains instance and what animation to perform.\n     */\n\n    private handleAnimation(info: AnimationPacket): void {\n        let character = this.entities.get<Character>(info.instance);\n\n        if (!character) return;\n\n        character.performAction(character.orientation, info.action);\n    }\n\n    /**\n     * Handles the points packet. Used when a player is being hit\n     * or heals their hit points or mana.\n     * @param info Contains the player instance, hit points, and mana.\n     */\n\n    private handlePoints(info: PointsPacket): void {\n        let character = this.entities.get<Player>(info.instance);\n\n        if (!character || character.dead) return;\n\n        if (info.mana) character.setMana(info.mana, info.maxMana);\n\n        if (info.hitPoints) {\n            character.setHitPoints(info.hitPoints, info.maxHitPoints);\n            this.input.hud.updateCallback?.(info.instance, info.hitPoints);\n        }\n    }\n\n    /**\n     * Handler for the network packet. These are debugging methods such\n     * as latency tests that may be implemented in the future.\n     */\n\n    private handleNetwork(): void {\n        // Send a resposne to the ping back.\n        this.socket.send(Packets.Network, [Opcodes.Network.Pong]);\n    }\n\n    /**\n     * Chat packets can either be static or instance based. Those that are static\n     * are generally used for global messaging system, whereas the instance-based\n     * ones are for nearby players where we want to display a bubble.\n     * @param info Info contains source, message, colour, and whether\n     * or not to display a bubble. Instance is optional but may be contained\n     * when a player sends a chat.\n     */\n\n    private handleChat(info: ChatPacket): void {\n        // Messages with source are static, we add them directly to the chatbox.\n        if (info.source)\n            return this.input.chatHandler.add(info.source, info.message, info.colour, true);\n\n        let entity = this.entities.get<Player>(info.instance!);\n\n        if (!entity) return;\n\n        let { name, rank, x, y } = entity;\n\n        if (rank !== Modules.Ranks.None) name = `[${Modules.RankTitles[rank]}] ${name}`;\n\n        // Add to the chatbox, if global, we prefix it to the entity's name.\n        this.input.chatHandler.add(name, info.message, info.colour);\n\n        // Draw bubble and play audio.\n        if (info.withBubble) {\n            this.bubble.create(info.instance!, info.message);\n            this.bubble.setTo(info.instance!, x, y);\n\n            this.audio.playSound('npctalk', entity);\n        }\n    }\n\n    /**\n     * Hardcoded administrative commands built into the client. When a player\n     * types a special command, the server checks against the player's rank\n     * before sending this packet. These are merely debugging/graphical tests.\n     * @param info Packet contains the command string.\n     */\n\n    private handleCommand(info: CommandPacket): void {\n        if (info.command.includes('toggle') && this.game.player.hasActiveEffect())\n            return this.game.player.removeAllEffects();\n\n        switch (info.command) {\n            case 'debug': {\n                this.renderer.debugging = !this.renderer.debugging;\n                return;\n            }\n        }\n    }\n\n    /**\n     * Receives container information (bank or inventory for now) and updates it.\n     * @param opcode What type of container action we are working with.\n     * @param info Contains array of serialized slots, a single slot, and type of container.\n     */\n\n    private handleContainer(opcode: Opcodes.Container, info: ContainerPacket): void {\n        let container =\n            info.type === Modules.ContainerType.Inventory\n                ? this.menu.getInventory()\n                : this.menu.getBank();\n\n        switch (opcode) {\n            case Opcodes.Container.Batch: {\n                container.batch(info.data!.slots);\n                break;\n            }\n\n            case Opcodes.Container.Add: {\n                container.add(info.slot!);\n                break;\n            }\n\n            case Opcodes.Container.Remove: {\n                container.remove(info.slot!);\n                break;\n            }\n        }\n\n        // Synchronizes all the open menus that have containers.\n        this.menu.synchronize();\n    }\n\n    /**\n     * Handler for when we receive an ability packet. Ability packets contain\n     * batch data or a single ability undergoing a change (generally level).\n     * @param opcode The type of ability packet we are working with.\n     * @param info Contains information in batch about abilities or a single ability serialized information.\n     */\n\n    private handleAbility(opcode: Opcodes.Ability, info: AbilityPacket): void {\n        switch (opcode) {\n            case Opcodes.Ability.Batch: {\n                this.game.player.loadAbilities((info as SerializedAbility).abilities);\n                break;\n            }\n\n            // Update the ability data whenever we receive any information.\n            case Opcodes.Ability.Add:\n            case Opcodes.Ability.Update: {\n                info = info as AbilityData;\n                this.game.player.setAbility(info.key, info.level, info.type, info.quickSlot);\n                break;\n            }\n\n            case Opcodes.Ability.Toggle: {\n                this.game.player.toggleAbility((info as AbilityData).key);\n                break;\n            }\n        }\n\n        this.menu.synchronize('profile');\n    }\n\n    /**\n     * Quest packets are sent when the player logs in and performs\n     * the initial loading in a batch. This contains every quest along with the\n     * key, name, description, and stage. This packet may also receive individual\n     * quest information that updates the stage. Since the quests are already loaded\n     * the individual quest data only contains key, stage, and max stage.\n     * @param opcode What type of quest action we are working with.\n     * @param info Contains quest batch data or individual quest data.\n     */\n\n    private handleQuest(opcode: Opcodes.Quest, info: QuestPacket): void {\n        switch (opcode) {\n            case Opcodes.Quest.Batch: {\n                this.game.player.loadQuests(info.quests!);\n                break;\n            }\n\n            case Opcodes.Quest.Progress: {\n                this.game.player.setQuest(info.key!, info.stage!, info.subStage!);\n                break;\n            }\n        }\n\n        this.menu.getQuests().handle(opcode, info.key);\n    }\n\n    /**\n     * Packet received from the server containing information about the achievements. When\n     * we receive batch data, we relay that to the client. When we receive individual data,\n     * we only update the achievement associated with the provided key. After either of the\n     * aforementioned occurs, we synchronize the menu.\n     * @param opcode What type of action we're taking.\n     * @param info Contains individual achievement data or batch data.\n     */\n\n    private handleAchievement(opcode: Opcodes.Achievement, info: AchievementPacket): void {\n        switch (opcode) {\n            case Opcodes.Achievement.Batch: {\n                this.game.player.loadAchievements(info.achievements!);\n                break;\n            }\n\n            case Opcodes.Achievement.Progress: {\n                this.game.player.setAchievement(\n                    info.key!,\n                    info.stage!,\n                    info.name!,\n                    info.description!\n                );\n                break;\n            }\n        }\n\n        this.menu.getAchievements().handle(opcode, info.key);\n    }\n\n    /**\n     * Notifications are messages sent from the server that display only on the current\n     * player's end. These can either be popups, or chatbox information.\n     * @param opcode Tyhe type of the notification.\n     * @param info Contains message, title, and colour information.\n     */\n\n    private handleNotification(opcode: Opcodes.Notification, info: NotificationPacket): void {\n        switch (opcode) {\n            case Opcodes.Notification.Text: {\n                return this.input.chatHandler.add(\n                    info.source || 'WORLD',\n                    info.message,\n                    info.colour,\n                    true\n                );\n            }\n\n            case Opcodes.Notification.Popup: {\n                return this.menu.getNotification().show(info.title!, info.message, info.colour!);\n            }\n        }\n    }\n\n    /**\n     * Packet that signals to an item instance that it has to start blinking.\n     * The blinking is used to indicate that the item is about to despawn.\n     * @param instance Instance of the item we are trying to start blinking process.\n     */\n\n    private handleBlink(instance: string): void {\n        let item = this.entities.get<Item>(instance);\n\n        item?.blink();\n    }\n\n    /**\n     * The healing packet is called when the player heals their health\n     * or mana. It is used to update the HUD and also display the healing\n     * special effect.\n     * @param info Contains the instance, type of healing (mana or health), and amount.\n     */\n\n    private handleHeal(info: HealPacket): void {\n        let character = this.entities.get<Character>(info.instance);\n\n        if (!character) return;\n\n        switch (info.type) {\n            case 'hitpoints': {\n                this.info.create(Modules.Hits.Heal, info.amount, character.x, character.y);\n\n                character.addEffect(Modules.Effects.Healing);\n                break;\n            }\n\n            case 'mana': {\n                this.info.create(Modules.Hits.Mana, info.amount, character.x, character.y);\n                break;\n            }\n        }\n\n        character.triggerHealthBar();\n    }\n\n    /**\n     * Receives an experience packet from the server. This syncs up the client\n     * with the player's latest information and also displays an appropriate info\n     * depending on the type of experience (combat or skill).\n     * @param opcode The type of experience we are working with.\n     * @param info The amount of experience, level, previous/next experience required\n     * for levelling up. The experience values are used to display to the player how\n     * much experience they will require and calculate percentages.\n     */\n\n    private handleExperience(opcode: Opcodes.Experience, info: ExperiencePacket): void {\n        let player = this.entities.get<Player>(info.instance);\n\n        if (!player) return;\n\n        let isPlayer = player.instance === this.game.player.instance;\n\n        switch (opcode) {\n            case Opcodes.Experience.Sync: {\n                player.level = info.level!;\n                break;\n            }\n\n            case Opcodes.Experience.Skill: {\n                if (isPlayer)\n                    this.info.create(\n                        Modules.Hits.Profession,\n                        info.amount!,\n                        player.x,\n                        player.y,\n                        false,\n                        info.skill,\n                        true\n                    );\n\n                break;\n            }\n        }\n    }\n\n    /**\n     * Receives signal from the server to despawn the player and\n     * display the death scroll. This will get called for as long\n     * as the player doesn't press the respawn button, regardless\n     * of whether or not the player logs out and back in.\n     */\n\n    private handleDeath(): void {\n        // Stop player movement\n        this.game.player.stop(true);\n\n        // Clear all the statuses.\n        this.game.player.removeAllEffects();\n\n        // Remove the minigame interfaces.\n        this.game.minigame.reset();\n\n        // Stops the player from performing actions.\n        this.game.player.teleporting = true;\n\n        // Set the player's sprite to the death animation sprite.\n        this.game.player.setSprite(this.sprites.getDeath());\n\n        // Set health and mana to 0\n        this.game.player.setHitPoints(0);\n        this.game.player.setMana(0);\n\n        // Stop the music playing.\n        this.audio.stopMusic();\n\n        // Perform the death animation.\n        this.game.player.animateDeath(() => {\n            this.game.entities.unregisterPosition(this.game.player);\n\n            this.game.player.despawn();\n\n            this.app.body.classList.add('death');\n        });\n    }\n\n    /**\n     * Receives the new song to update the audio controller with.\n     * @param newSong String of the new song.\n     */\n\n    private handleMusic(newSong?: string): void {\n        this.audio.playMusic(newSong);\n    }\n\n    /**\n     * Receives NPC interaction information. In the most general case, this is about\n     * an NPC that is dispalying text bubbles to the player. Alternatively, this can\n     * be an NPC that shows an UI element (e.g. bank, shop, etc). This may be moved\n     * into a separate packet post-refactor.\n     * @param opcode They type of interaction we are working with.\n     * @param info Contains information about the NPC interaction.\n     */\n\n    private handleNPC(opcode: Opcodes.NPC, info: NPCPacket): void {\n        let npc, soundEffect;\n\n        switch (opcode) {\n            case Opcodes.NPC.Talk: {\n                npc = this.entities.get<NPC>(info.instance!);\n\n                if (!npc) return;\n\n                // Which sound effect to play depending on if conversation is over or not.\n                soundEffect = info.text ? 'npc' : 'npc-end';\n\n                this.audio.playSound(soundEffect, npc);\n\n                this.game.player.disableAction = true;\n\n                // Clear npc's bubbles once conversation is over.\n                if (!info.text) return this.bubble.clear(npc.instance);\n\n                // Create the bubble containing the text.\n                this.bubble.create(npc.instance, info.text);\n                this.bubble.setTo(npc.instance, npc.x, npc.y);\n\n                break;\n            }\n\n            case Opcodes.NPC.Bank: {\n                return this.menu.getBank().show(info.slots!);\n            }\n\n            case Opcodes.NPC.Enchant: {\n                this.menu.getEnchant().show();\n                break;\n            }\n        }\n    }\n\n    /**\n     * Restarts the game and reinitializes the player character during\n     * the respawning process.\n     * @param info Contains the grid x and y coordinates we are transporting\n     * the player to following the respawn.\n     */\n\n    private handleRespawn(info: RespawnPacket): void {\n        this.game.player.setGridPosition(info.x, info.y);\n\n        this.camera.centreOn(this.game.player);\n\n        this.game.player.animation = null;\n        this.game.player.setSprite(this.game.sprites.get(this.game.player.getSpriteName()));\n        this.game.player.idle();\n\n        this.entities.addEntity(this.game.player);\n\n        this.game.player.dead = false;\n        this.game.player.teleporting = false;\n    }\n\n    /**\n     * Handles the logic for trading between two players. Contains information\n     * about what is going on and what to do with the interface.\n     * @param opcode The type of trade action to perform.\n     * @param info Information about the trade.\n     */\n\n    private handleTrade(opcode: Opcodes.Trade, info: TradePacket): void {\n        switch (opcode) {\n            case Opcodes.Trade.Open: {\n                let otherPlayer = this.entities.get<Player>(info.instance!);\n\n                if (!otherPlayer) return;\n\n                return this.menu.getTrade().show(this.game.player, otherPlayer);\n            }\n\n            case Opcodes.Trade.Close: {\n                return this.menu.getTrade().hide(true);\n            }\n\n            case Opcodes.Trade.Add: {\n                return this.menu\n                    .getTrade()\n                    .add(\n                        info.index!,\n                        info.count!,\n                        info.key!,\n                        info.instance !== this.game.player.instance\n                    );\n            }\n\n            case Opcodes.Trade.Remove: {\n                return this.menu\n                    .getTrade()\n                    .remove(info.index!, info.instance !== this.game.player.instance);\n            }\n\n            case Opcodes.Trade.Accept: {\n                return this.menu.getTrade().accept(info.message);\n            }\n        }\n    }\n\n    /**\n     * Enchant packet used to update the user interface.\n     * @param opcode What type of action to perform on the user interface.\n     * @param info Contains index and type of item.\n     */\n\n    private handleEnchant(opcode: Opcodes.Enchant, info: EnchantPacket): void {\n        switch (opcode) {\n            case Opcodes.Enchant.Select: {\n                return this.menu.getEnchant().move(info.index, info.isShard);\n            }\n        }\n    }\n\n    /**\n     * Unimplemented guild packet.\n     */\n\n    private handleGuild(opcode: Opcodes.Guild, info: GuildPacket): void {\n        switch (opcode) {\n            case Opcodes.Guild.Login: {\n                this.game.player.setGuild(info);\n                break;\n            }\n\n            case Opcodes.Guild.Leave: {\n                this.game.player.setGuild();\n                break;\n            }\n        }\n\n        this.menu.getGuilds().handle(opcode, info);\n    }\n\n    /**\n     * Receives pointer information from the server. This can be a pointer at an\n     * entity location, or a static pointer. This function will be updated soon.\n     * @param opcode What type of pointer we are displaying.\n     * @param info Information such as location and instance of the pointer.\n     */\n\n    private handlePointer(opcode: Opcodes.Pointer, info: PointerPacket): void {\n        let entity;\n\n        switch (opcode) {\n            case Opcodes.Pointer.Entity: {\n                entity = this.entities.get(info.instance);\n\n                if (!entity) return;\n\n                this.pointer.create(entity.instance, opcode);\n                this.pointer.setToEntity(entity);\n\n                break;\n            }\n\n            case Opcodes.Pointer.Location: {\n                this.pointer.create(info.instance, opcode);\n                this.pointer.setToPosition(\n                    info.instance,\n                    info.x! * this.map.tileSize,\n                    info.y! * this.map.tileSize\n                );\n\n                break;\n            }\n\n            case Opcodes.Pointer.Relative: {\n                this.pointer.create(info.instance, opcode);\n                this.pointer.setRelative(info.instance, info.x!, info.y!);\n                break;\n            }\n\n            case Opcodes.Pointer.Remove: {\n                this.pointer.clean();\n                break;\n            }\n\n            case Opcodes.Pointer.Button: {\n                this.pointer.create(info.instance, opcode, info.button);\n                break;\n            }\n        }\n    }\n\n    /**\n     * Updates the pvp flag for our client. The actual PVP attacking is handled\n     * server-sided. This just allows the client to target another player.\n     * @param info Contains the instance and pvp status of an entity.\n     */\n\n    private handlePVP(info: PVPPacket): void {\n        this.game.pvp = info.state;\n    }\n\n    /**\n     * Updates the visual poison status of the player (changes the colour of the health bar).\n     * @param type Type of poison we are applying, if -1 then we remove poison status.\n     */\n\n    private handlePoison(type: number): void {\n        this.game.player.setPoison(type !== -1);\n    }\n\n    /**\n     * Opens a store with the data from the server. Stores can only be opened\n     * when there is data and the server validates that the player is next\n     * to the store to prevent cheating.\n     * @param opcode The type of action performed on the store.\n     * @param info Contains information such as store key and items to update.\n     */\n\n    private handleStore(opcode: Opcodes.Store, info: StorePacket): void {\n        switch (opcode) {\n            case Opcodes.Store.Open: {\n                return this.menu.getStore().show(info);\n            }\n\n            case Opcodes.Store.Update: {\n                return this.menu.getStore().update(info);\n            }\n\n            case Opcodes.Store.Select: {\n                return this.menu.getStore().move(info);\n            }\n        }\n    }\n\n    /**\n     *\n     * @param opcode\n     * @param info\n     */\n\n    private handleOverlay(opcode: Opcodes.Overlay, info: OverlayPacket): void {\n        switch (opcode) {\n            case Opcodes.Overlay.Set: {\n                this.overlays.update(info.image);\n                this.renderer.updateDarkMask(info.colour);\n                break;\n            }\n\n            case Opcodes.Overlay.Remove: {\n                this.renderer.removeAllLights();\n                this.overlays.update();\n                break;\n            }\n\n            case Opcodes.Overlay.Lamp: {\n                return this.renderer.addLight(info.light!);\n            }\n        }\n    }\n\n    /**\n     * Handles camera packets such as locking the camera.\n     * @param opcode The type of action we are performing with the camera.\n     */\n\n    private handleCamera(_opcode: Opcodes.Camera): void {\n        //\n    }\n\n    /**\n     * Contains a bubble packet to display. Bubble packets may be used for\n     * a specific entity (given the opcode) or may be assigned to a position\n     * to mock an entity. The latter is generally done when the player\n     * interacts with objects.\n     * @param opcode The type of bubble we are displaying (entity or position).\n     * @param info Contains information such as the text and position of the bubble.\n     */\n\n    private handleBubble(opcode: Opcodes.Bubble, info: BubblePacket): void {\n        if (!info.text) return this.bubble.clear(info.instance);\n\n        let entity = this.entities.get(info.instance);\n        // Check validity of the entity only when the bubble is attached to an entity.\n        if (opcode === Opcodes.Bubble.Entity && !entity) return;\n\n        /**\n         * This works as following: we create a position object if there is no entity found\n         * and we are setting the bubble to a static position. We pass this parameter when\n         * we create a blob so that we can mark it as static. We then determine whether\n         * to use the position object below given that it exists or not (see the ternary below).\n         */\n        let position = entity\n            ? undefined\n            : {\n                  x: info.x! * this.map.tileSize,\n                  y: info.y! * this.map.tileSize\n              };\n\n        // Create the bubble and assign its position.\n        this.bubble.create(info.instance, info.text, info.duration, position);\n        this.bubble.setTo(\n            info.instance,\n            position ? position.x : entity.x,\n            position ? position.y : entity.y\n        );\n    }\n\n    /**\n     * Updates the skills page with the data from the server.\n     * @param info Contains the skill batch data or a specific skill data.\n     */\n\n    private handleSkill(opcode: Opcodes.Skill, info: SkillPacket): void {\n        switch (opcode) {\n            case Opcodes.Skill.Batch: {\n                this.game.player.loadSkills((info as SerializedSkills).skills);\n                break;\n            }\n\n            case Opcodes.Skill.Update: {\n                this.game.player.setSkill(info as SkillData);\n                break;\n            }\n        }\n\n        this.game.menu.synchronize('profile');\n    }\n\n    /**\n     * Contains an array of entities that we are updating the appearance\n     * data of. This includes name colour, scale, and perhaps other things.\n     * @param info Array containing the instance and appearance data.\n     */\n\n    private handleUpdate(info: EntityDisplayInfo[]): void {\n        this.entities.cleanDisplayInfo();\n\n        for (let update of info) {\n            let entity = this.entities.get(update.instance);\n\n            if (!entity) continue;\n\n            if (update.colour) entity.nameColour = update.colour;\n            if (update.scale) entity.customScale = update.scale;\n        }\n    }\n\n    /**\n     * Minigame packets contain information about the kind of visuals to display\n     * onto the screen. For example, the TeamWar minigame requires the countdown\n     * to be displayed in the top of the screen during the lobby sequence, and\n     * in the actual game to display the score for both teams. We use this packet\n     * to signal to the game client what to display and when.\n     * @param info Contains information about the minigame status.\n     */\n\n    private handleMinigame(opcode: Opcodes.Minigame, info: MinigamePacket): void {\n        let { minigame, player } = this.game;\n\n        minigame.type = opcode;\n        minigame.started = !!info.started;\n\n        if (info.countdown) minigame.countdown = info.countdown;\n\n        switch (info.action) {\n            // Game starting packet.\n            case Opcodes.TeamWar.Score: {\n                if (!isNaN(info.redTeamKills!) && !isNaN(info.blueTeamKills!))\n                    minigame.setScore(info.redTeamKills!, info.blueTeamKills!);\n\n                return minigame.setStatus('ingame');\n            }\n\n            // Entering lobby packets\n            case Opcodes.TeamWar.End:\n            case Opcodes.TeamWar.Lobby: {\n                player.nameColour = '';\n                return minigame.setStatus('lobby');\n            }\n\n            // Exiting the entire minigame\n            case Opcodes.TeamWar.Exit: {\n                return minigame.reset();\n            }\n        }\n    }\n\n    /**\n     * Effects are special conditions that can be applied to a player or an entity.\n     * When a player uses the run ability, we may want to display a special effect on\n     * top of modifying their movement speed.\n     * @param opcode The type of effect we are applying.\n     * @param info Information about the entity we are applying the effect to.\n     */\n\n    private handleEffect(opcode: Opcodes.Effect, info: EffectPacket): void {\n        let entity =\n            info.instance === this.game.player.instance\n                ? this.game.player\n                : this.entities.get<Character>(info.instance);\n\n        if (!entity) return;\n\n        switch (opcode) {\n            case Opcodes.Effect.Add: {\n                return entity.addEffect(info.effect);\n            }\n\n            case Opcodes.Effect.Remove: {\n                return entity.removeEffect(info.effect);\n            }\n        }\n    }\n\n    /**\n     * Handles incoming packets relating to the friends list. This is how\n     * we update the client with the latest information about our friends.\n     * @param opcode What type of update we are performing.\n     * @param info Contains information about the packet we are handling.\n     */\n\n    private handleFriends(opcode: Opcodes.Friends, info: FriendsPacket): void {\n        switch (opcode) {\n            case Opcodes.Friends.List: {\n                this.game.player.loadFriends(info.list!);\n                break;\n            }\n\n            case Opcodes.Friends.Add: {\n                this.game.player.addFriend(info.username!, info.status!, info.serverId!);\n                break;\n            }\n\n            case Opcodes.Friends.Status: {\n                this.game.player.setFriendStatus(info.username!, info.status!, info.serverId!);\n                break;\n            }\n        }\n\n        this.menu.getFriends().handle(opcode, info.username, info.status, info.serverId);\n    }\n\n    /**\n     * Handles receiving information about crafting. This is used to synchronize the crafting\n     * user interface with the server. When a player selects an item to craft this\n     * @param opcode Contains the type of crafting action that we want to perform.\n     * @param info Contains the information about the crafting action.\n     */\n\n    private handleCrafting(opcode: Opcodes.Crafting, info: CraftingPacket): void {\n        this.menu.getCrafting().handle(opcode, info);\n    }\n\n    /**\n     * Updates the rank of the current player. Packet contains the new rank.\n     * @param rank The new rank we are updating the player to.\n     */\n\n    private handleRank(rank: Modules.Ranks): void {\n        this.game.player.setRank(rank);\n    }\n\n    /**\n     * Compares the epoch between the last entity list update request and current\n     * time. This is in order to prevent spams to the server and timeout.\n     */\n\n    private canRequestEntityList(): boolean {\n        return Date.now() - this.lastEntityListRequest > 5000; // every 2 seconds\n    }\n}\n","import { Packets } from '@kaetram/common/network';\n\nimport type {\n    AbilityCallback,\n    AchievementCallback,\n    AnimationCallback,\n    BlinkCallback,\n    BubbleCallback,\n    CameraCallback,\n    ChatCallback,\n    CombatCallback,\n    CommandCallback,\n    ContainerCallback,\n    CraftingCallback,\n    DeathCallback,\n    DespawnCallback,\n    EffectCallback,\n    EnchantCallback,\n    EntityListCallback,\n    EquipmentCallback,\n    ExperienceCallback,\n    FriendsCallback,\n    GuildCallback,\n    HandshakeCallback,\n    HealCallback,\n    MapCallback,\n    MinigameCallback,\n    MovementCallback,\n    MusicCallback,\n    NetworkCallback,\n    NotificationCallback,\n    NPCCallback,\n    OverlayCallback,\n    PointerCallback,\n    PointsCallback,\n    PoisonCallback,\n    PVPCallback,\n    QuestCallback,\n    RankCallback,\n    RespawnCallback,\n    SkillCallback,\n    SpawnCallback,\n    StoreCallback,\n    SyncCallback,\n    TeleportCallback,\n    TradeCallback,\n    UpdateCallback,\n    WelcomeCallback\n} from '@kaetram/common/types/messages/outgoing';\nimport type App from '../app';\n\nexport default class Messages {\n    private messages: (() => ((...data: never[]) => void) | undefined)[] = [];\n\n    private handshakeCallback?: HandshakeCallback;\n    private welcomeCallback?: WelcomeCallback;\n    private mapCallback?: MapCallback;\n    private spawnCallback?: SpawnCallback;\n    private equipmentCallback?: EquipmentCallback;\n    private entityListCallback?: EntityListCallback;\n    private syncCallback?: SyncCallback;\n    private movementCallback?: MovementCallback;\n    private teleportCallback?: TeleportCallback;\n    private despawnCallback?: DespawnCallback;\n    private combatCallback?: CombatCallback;\n    private animationCallback?: AnimationCallback;\n    private pointsCallback?: PointsCallback;\n    private networkCallback?: NetworkCallback;\n    private chatCallback?: ChatCallback;\n    private commandCallback?: CommandCallback;\n    private containerCallback?: ContainerCallback;\n    private abilityCallback?: AbilityCallback;\n    private questCallback?: QuestCallback;\n    private achievementCallback?: AchievementCallback;\n    private notificationCallback?: NotificationCallback;\n    private blinkCallback?: BlinkCallback;\n    private healCallback?: HealCallback;\n    private experienceCallback?: ExperienceCallback;\n    private deathCallback?: DeathCallback;\n    private musicCallback?: MusicCallback;\n    private npcCallback?: NPCCallback;\n    private respawnCallback?: RespawnCallback;\n    private tradeCallback?: TradeCallback;\n    private enchantCallback?: EnchantCallback;\n    private guildCallback?: GuildCallback;\n    private pointerCallback?: PointerCallback;\n    private pvpCallback?: PVPCallback;\n    private poisonCallback?: PoisonCallback;\n    private storeCallback?: StoreCallback;\n    private overlayCallback?: OverlayCallback;\n    private cameraCallback?: CameraCallback;\n    private bubbleCallback?: BubbleCallback;\n    private skillCallback?: SkillCallback;\n    private updateCallback?: UpdateCallback;\n    private minigameCallback?: MinigameCallback;\n    private effectCallback?: EffectCallback;\n    private friendsCallback?: FriendsCallback;\n    private rankCallback?: RankCallback;\n    private craftingCallback?: CraftingCallback;\n\n    /**\n     * Do not clutter up the Socket class with callbacks,\n     * have this class here until a better method arises in my head.\n     *\n     * This class should not have any complex functionality, its main\n     * role is to provide organization for packets and increase readability\n     *\n     * Please respect the order of the Packets Enum and arrange functions\n     * accordingly.\n     */\n    public constructor(private app: App) {\n        this.messages[Packets.Handshake] = () => this.handshakeCallback;\n        this.messages[Packets.Welcome] = () => this.welcomeCallback;\n        this.messages[Packets.Spawn] = () => this.spawnCallback;\n        this.messages[Packets.Equipment] = () => this.equipmentCallback;\n        this.messages[Packets.List] = () => this.entityListCallback;\n        this.messages[Packets.Sync] = () => this.syncCallback;\n        this.messages[Packets.Movement] = () => this.movementCallback;\n        this.messages[Packets.Teleport] = () => this.teleportCallback;\n        this.messages[Packets.Despawn] = () => this.despawnCallback;\n        this.messages[Packets.Combat] = () => this.combatCallback;\n        this.messages[Packets.Animation] = () => this.animationCallback;\n        this.messages[Packets.Points] = () => this.pointsCallback;\n        this.messages[Packets.Network] = () => this.networkCallback;\n        this.messages[Packets.Chat] = () => this.chatCallback;\n        this.messages[Packets.Command] = () => this.commandCallback;\n        this.messages[Packets.Container] = () => this.containerCallback;\n        this.messages[Packets.Ability] = () => this.abilityCallback;\n        this.messages[Packets.Quest] = () => this.questCallback;\n        this.messages[Packets.Achievement] = () => this.achievementCallback;\n        this.messages[Packets.Notification] = () => this.notificationCallback;\n        this.messages[Packets.Blink] = () => this.blinkCallback;\n        this.messages[Packets.Heal] = () => this.healCallback;\n        this.messages[Packets.Experience] = () => this.experienceCallback;\n        this.messages[Packets.Death] = () => this.deathCallback;\n        this.messages[Packets.Music] = () => this.musicCallback;\n        this.messages[Packets.NPC] = () => this.npcCallback;\n        this.messages[Packets.Respawn] = () => this.respawnCallback;\n        this.messages[Packets.Trade] = () => this.tradeCallback;\n        this.messages[Packets.Enchant] = () => this.enchantCallback;\n        this.messages[Packets.Guild] = () => this.guildCallback;\n        this.messages[Packets.Pointer] = () => this.pointerCallback;\n        this.messages[Packets.PVP] = () => this.pvpCallback;\n        this.messages[Packets.Poison] = () => this.poisonCallback;\n        this.messages[Packets.Store] = () => this.storeCallback;\n        this.messages[Packets.Map] = () => this.mapCallback;\n        this.messages[Packets.Overlay] = () => this.overlayCallback;\n        this.messages[Packets.Camera] = () => this.cameraCallback;\n        this.messages[Packets.Bubble] = () => this.bubbleCallback;\n        this.messages[Packets.Skill] = () => this.skillCallback;\n        this.messages[Packets.Update] = () => this.updateCallback;\n        this.messages[Packets.Minigame] = () => this.minigameCallback;\n        this.messages[Packets.Effect] = () => this.effectCallback;\n        this.messages[Packets.Friends] = () => this.friendsCallback;\n        this.messages[Packets.Rank] = () => this.rankCallback;\n        this.messages[Packets.Crafting] = () => this.craftingCallback;\n    }\n\n    /**\n     * Parses through the data and calls the appropriate callback.\n     * @param data Packet data containing packet opcode and data.\n     */\n\n    public handleData(data: [Packets, ...never[]]): void {\n        let packet = data.shift()!,\n            message = this.messages[packet]();\n\n        if (message && typeof message === 'function')\n            message.call(this, ...(data as unknown[] as never[]));\n    }\n\n    /**\n     * Packet data received in an array format calls `handleData`\n     * for each iteration of packet data.\n     * @param data Packet data array.\n     */\n\n    public handleBulkData(data: [Packets, ...never[]][]): void {\n        for (let info of data) this.handleData(info);\n    }\n\n    /**\n     * UTF8 messages handler. These are simple messages that are pure\n     * strings. These errors are displayed on the login page.\n     * @param message UTF8 message received from the server.\n     */\n\n    public handleUTF8(message: string): void {\n        this.app.toggleLogin(false);\n\n        switch (message) {\n            case 'worldfull': {\n                this.app.sendError('The servers are currently full!');\n                break;\n            }\n\n            case 'error': {\n                this.app.sendError('The server has responded with an error!');\n                break;\n            }\n\n            case 'development': {\n                this.app.sendError('The game is currently in development mode.');\n                break;\n            }\n\n            case 'disallowed': {\n                this.app.sendError('The server is currently not accepting connections!');\n                break;\n            }\n\n            case 'maintenance': {\n                this.app.sendError('Kaetram is currently under maintenance.');\n                break;\n            }\n\n            case 'userexists': {\n                this.app.sendError('The username you have entered already exists.');\n                break;\n            }\n\n            case 'emailexists': {\n                this.app.sendError('The email you have entered is not available.');\n                break;\n            }\n\n            case 'invalidinput': {\n                this.app.sendError(\n                    'The input you have entered is invalid. Please do not use special characters.'\n                );\n                break;\n            }\n\n            case 'loggedin': {\n                this.app.sendError('The player is already logged in!');\n                break;\n            }\n\n            case 'invalidlogin': {\n                this.app.sendError('You have entered the wrong username or password.');\n                break;\n            }\n\n            case 'toofast': {\n                this.app.sendError('You are trying to log in too fast from the same connection.');\n                break;\n            }\n\n            case 'timeout': {\n                this.app.sendError('You have been disconnected for being inactive for too long.');\n                break;\n            }\n\n            case 'updated': {\n                this.app.sendError('The game has been updated. Please clear your browser cache.');\n                break;\n            }\n\n            case 'cheating': {\n                this.app.sendError(`An error in client-server syncing has occurred.`);\n                break;\n            }\n\n            case 'lost': {\n                this.app.sendError('The connection to the server has been lost.');\n                break;\n            }\n\n            case 'toomany': {\n                this.app.sendError('Too many devices from your IP address are connected.');\n                break;\n            }\n\n            case 'ratelimit': {\n                this.app.sendError('You are sending packets too fast.');\n                break;\n            }\n\n            default: {\n                this.app.sendError('An unknown error has occurred, please submit a bug report.');\n                break;\n            }\n        }\n    }\n\n    /**\n     * Packet callbacks.\n     */\n\n    public onHandshake(callback: HandshakeCallback): void {\n        this.handshakeCallback = callback;\n    }\n\n    public onWelcome(callback: WelcomeCallback): void {\n        this.welcomeCallback = callback;\n    }\n\n    public onSpawn(callback: SpawnCallback): void {\n        this.spawnCallback = callback;\n    }\n\n    public onEquipment(callback: EquipmentCallback): void {\n        this.equipmentCallback = callback;\n    }\n\n    public onEntityList(callback: EntityListCallback): void {\n        this.entityListCallback = callback;\n    }\n\n    public onSync(callback: SyncCallback): void {\n        this.syncCallback = callback;\n    }\n\n    public onMovement(callback: MovementCallback): void {\n        this.movementCallback = callback;\n    }\n\n    public onTeleport(callback: TeleportCallback): void {\n        this.teleportCallback = callback;\n    }\n\n    public onDespawn(callback: DespawnCallback): void {\n        this.despawnCallback = callback;\n    }\n\n    public onCombat(callback: CombatCallback): void {\n        this.combatCallback = callback;\n    }\n\n    public onAnimation(callback: AnimationCallback): void {\n        this.animationCallback = callback;\n    }\n\n    public onPoints(callback: PointsCallback): void {\n        this.pointsCallback = callback;\n    }\n\n    public onNetwork(callback: NetworkCallback): void {\n        this.networkCallback = callback;\n    }\n\n    public onChat(callback: ChatCallback): void {\n        this.chatCallback = callback;\n    }\n\n    public onCommand(callback: CommandCallback): void {\n        this.commandCallback = callback;\n    }\n\n    public onContainer(callback: ContainerCallback): void {\n        this.containerCallback = callback;\n    }\n\n    public onAbility(callback: AbilityCallback): void {\n        this.abilityCallback = callback;\n    }\n\n    public onQuest(callback: QuestCallback): void {\n        this.questCallback = callback;\n    }\n\n    public onAchievement(callback: AchievementCallback): void {\n        this.achievementCallback = callback;\n    }\n\n    public onNotification(callback: NotificationCallback): void {\n        this.notificationCallback = callback;\n    }\n\n    public onBlink(callback: BlinkCallback): void {\n        this.blinkCallback = callback;\n    }\n\n    public onHeal(callback: HealCallback): void {\n        this.healCallback = callback;\n    }\n\n    public onExperience(callback: ExperienceCallback): void {\n        this.experienceCallback = callback;\n    }\n\n    public onDeath(callback: DeathCallback): void {\n        this.deathCallback = callback;\n    }\n\n    public onMusic(callback: MusicCallback): void {\n        this.musicCallback = callback;\n    }\n\n    public onNPC(callback: NPCCallback): void {\n        this.npcCallback = callback;\n    }\n\n    public onRespawn(callback: RespawnCallback): void {\n        this.respawnCallback = callback;\n    }\n\n    public onTrade(callback: TradeCallback): void {\n        this.tradeCallback = callback;\n    }\n\n    public onEnchant(callback: EnchantCallback): void {\n        this.enchantCallback = callback;\n    }\n\n    public onGuild(callback: GuildCallback): void {\n        this.guildCallback = callback;\n    }\n\n    public onPointer(callback: PointerCallback): void {\n        this.pointerCallback = callback;\n    }\n\n    public onPVP(callback: PVPCallback): void {\n        this.pvpCallback = callback;\n    }\n\n    public onPoison(callback: PoisonCallback): void {\n        this.poisonCallback = callback;\n    }\n\n    public onStore(callback: StoreCallback): void {\n        this.storeCallback = callback;\n    }\n\n    public onMap(callback: MapCallback): void {\n        this.mapCallback = callback;\n    }\n\n    public onOverlay(callback: OverlayCallback): void {\n        this.overlayCallback = callback;\n    }\n\n    public onCamera(callback: CameraCallback): void {\n        this.cameraCallback = callback;\n    }\n\n    public onBubble(callback: BubbleCallback): void {\n        this.bubbleCallback = callback;\n    }\n\n    public onSkill(callback: SkillCallback): void {\n        this.skillCallback = callback;\n    }\n\n    public onUpdate(callback: UpdateCallback): void {\n        this.updateCallback = callback;\n    }\n\n    public onMinigame(callback: MinigameCallback): void {\n        this.minigameCallback = callback;\n    }\n\n    public onEffect(callback: EffectCallback): void {\n        this.effectCallback = callback;\n    }\n\n    public onFriends(callback: FriendsCallback): void {\n        this.friendsCallback = callback;\n    }\n\n    public onRank(callback: RankCallback): void {\n        this.rankCallback = callback;\n    }\n\n    public onCrafting(callback: CraftingCallback): void {\n        this.craftingCallback = callback;\n    }\n}\n","import Messages from './messages';\n\nimport log from '../lib/log';\n\nimport { Packets } from '@kaetram/common/network';\n\nimport type Game from '../game';\nimport type { SerializedServer } from '@kaetram/common/types/api';\n\nexport default class Socket {\n    public messages;\n\n    private config;\n    private connection!: WebSocket;\n    private listening = false;\n\n    public constructor(private game: Game) {\n        this.config = game.app.config;\n        this.messages = new Messages(game.app);\n    }\n\n    /**\n     * Asks the hub for a server to connect to.\n     * The connection assumes it is a hub, if it's not,\n     * we default to normal server connection.\n     */\n\n    private async getServer(): Promise<SerializedServer | undefined> {\n        // Skip if hub is disabled in the config.\n        if (!this.config.hub) return;\n\n        // Attempt to get API data from the hub.\n        try {\n            let result = await fetch(`${this.config.hub}/server`);\n\n            return await result.json();\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * Creates a websocket connection to the server.\n     */\n\n    public async connect(server?: SerializedServer): Promise<void> {\n        let { host, port } = server || (await this.getServer()) || this.config,\n            url = this.config.ssl ? `wss://${host}` : `ws://${host}:${port}`;\n\n        // Create a websocket connection with the url generated.\n        this.connection = new WebSocket(url);\n\n        // Handler for when a connection is successfully established.\n        this.connection.addEventListener('open', this.handleConnection.bind(this));\n\n        // Handler for when a message is received.\n        this.connection.addEventListener('message', (event) => this.receive(event.data));\n\n        // Handler for when an error occurs.\n        this.connection.addEventListener('error', () => this.handleConnectionError(host, port));\n\n        // Handler for when a disconnection occurs.\n        this.connection.addEventListener('close', () => this.game.handleDisconnection());\n\n        /**\n         * The audio controller can only be properly initialized when the player interacts\n         * with the website. This is the best possible place to initialize it.\n         */\n\n        this.game.audio.createContext();\n    }\n\n    /**\n     * Parses a JSON string and passes the data onto the respective handlers\n     * @param message JSON string information to be parsed.\n     */\n\n    private receive(message: string): void {\n        if (!this.listening) return;\n\n        if (message.startsWith('[')) {\n            let data = JSON.parse(message);\n\n            if (data.length > 1) this.messages.handleBulkData(data);\n            else this.messages.handleData(data.shift());\n        } else this.messages.handleUTF8(message);\n    }\n\n    /**\n     * Sends a message through the socket to the server.\n     * @param packet The packet ID in number format (see common/network/packets.ts);\n     * @param data Packet data in an array format.\n     */\n\n    public send(packet: number, data?: unknown): void {\n        // Ensure the connection is open before sending.\n        if (this.connection?.readyState !== WebSocket.OPEN) return;\n\n        this.connection.send(JSON.stringify([packet, data]));\n    }\n\n    /**\n     * Handles successful connection and sends a handshake request signal.\n     */\n\n    private handleConnection(): void {\n        this.listening = true;\n\n        log.info('Connection established...');\n\n        this.game.app.updateLoader('Preparing handshake');\n\n        // Send the handshake with the game version.\n        this.send(Packets.Handshake, {\n            gVer: this.config.version\n        });\n    }\n\n    /**\n     * Handle connection error in the event websocket fails.\n     */\n\n    private handleConnectionError(host: string, port: number): void {\n        log.info(`Failed to connect to: ${host}`);\n\n        this.listening = false;\n\n        this.game.app.toggleLogin(false);\n\n        this.game.app.sendError(\n            window.config.debug\n                ? `Couldn't connect to ${host}:${port}`\n                : 'Could not connect to the game server.'\n        );\n    }\n}\n","import { Modules } from '@kaetram/common/network';\nimport $ from 'jquery';\n\nimport type Character from '../entity/character/character';\n\nconst MAXIMUM_ZOOM = 6,\n    DEFAULT_ZOOM = 3,\n    MAX_GRID_WIDTH = 52,\n    MAX_GRID_HEIGHT = 28;\n\nlet MINIMUM_ZOOM = 2.6;\n\nexport default class Camera {\n    // Border is used to determine the screen size of the website (not browser).\n    public border: JQuery = $('#border');\n\n    // x and y are absolute pixel coordinates\n    public x = 0;\n    public y = 0;\n\n    // Grid x and y are the absolute coordinates divided by tileSize.\n    public gridX = 0;\n    public gridY = 0;\n\n    // Grid width and height represent how many grids are visible horizontally and vertically.\n    public gridWidth = 0;\n    public gridHeight = 0;\n\n    // The maximum camera position for the bottom and right edges of the map.\n    private borderX = 0;\n    private borderY = 0;\n\n    // How zoomed in we are.\n    public zoomFactor = 3;\n\n    // Whether to centre the camera on a specific entity.\n    private centered = true;\n\n    // Whether to bound the camera horizontally or vertically.\n    public lockX = false;\n    public lockY = false;\n\n    public constructor(private width: number, private height: number, private tileSize: number) {\n        this.update();\n    }\n\n    /**\n     * Calculates the amount of tiles horizontally and vertically\n     * depending on the dimensions of the screen and the zoom factor.\n     * The border acts as a bounding box for when the camera approaches\n     * edges of the map.\n     */\n\n    public update(): void {\n        let borderWidth = this.border.width()!,\n            borderHeight = this.border.height()!;\n\n        /**\n         * The grid width and height are defined by how many tiles we can fit into\n         * the dimensions of the border. Note that the border is the size of the contents\n         * visible on the website itself, not the size of the browser window. The zoom\n         * factor is divided again to get the amount of grids are visible horizontally\n         * and vertically after the zoom.\n         */\n\n        this.gridWidth = Math.ceil(borderWidth / this.tileSize / this.zoomFactor);\n        this.gridHeight = Math.ceil(borderHeight / this.tileSize / this.zoomFactor);\n\n        this.clamp();\n\n        /**\n         * The border x and y are the boundaries of how far the map can go. The maximum\n         * camera position is from x = 0 and y = 0 (left/top edge of the map), to the maximum possible\n         * position defined by the map width/height minus one screen size. These are proportions\n         * used to bind the camera when we reach the right/bottom edge of the map.\n         */\n\n        this.borderX = (this.width - this.gridWidth) * this.tileSize;\n        this.borderY = (this.height - this.gridHeight) * this.tileSize;\n    }\n\n    /**\n     * Prevents the max grid width and height from exceeding the maximum proportions.\n     * This is used to prevent the camera from rendering too many tiles.\n     */\n\n    private clamp(): void {\n        if (this.gridWidth > MAX_GRID_WIDTH) this.gridWidth = MAX_GRID_WIDTH;\n        if (this.gridHeight > MAX_GRID_HEIGHT) this.gridHeight = MAX_GRID_HEIGHT;\n    }\n\n    /**\n     * Takes two grid coordinates and sets their position onto the camera.\n     * We then use the grid coordinates to calculate the absolute pixel\n     * coordinates by multiplying against the tileSize.\n     * @param gridX The x coordinate in the grid.\n     * @param gridY The y coordinate in the grid.\n     */\n\n    private setGridPosition(gridX: number, gridY: number): void {\n        this.gridX = gridX;\n        this.gridY = gridY;\n\n        this.x = gridX * this.tileSize;\n        this.y = gridY * this.tileSize;\n    }\n\n    /**\n     * Sets the zoom factor of the camera and clamps the limits.\n     * @param zoom The new zoom factor, defaults to DEFAULT_ZOOM value.\n     */\n\n    public setZoom(zoom = DEFAULT_ZOOM): void {\n        this.zoomFactor = zoom;\n\n        if (isNaN(this.zoomFactor)) this.zoomFactor = DEFAULT_ZOOM;\n\n        if (this.zoomFactor > MAXIMUM_ZOOM) this.zoomFactor = MAXIMUM_ZOOM;\n        if (this.zoomFactor < MINIMUM_ZOOM) this.zoomFactor = MINIMUM_ZOOM;\n    }\n\n    /**\n     * A clip takes place when we want to move the camera to the\n     * edges of the nearest tile. For example, if we decentre the\n     * camera while the player is moving, this will leave\n     * the camera in between tiles, we want to clip to the nearest\n     * tile to prevent any issues.\n     */\n\n    public clip(): void {\n        this.setGridPosition(\n            Math.round(this.x / this.tileSize),\n            Math.round(this.y / this.tileSize)\n        );\n    }\n\n    /**\n     * Toggles the centered state of the camera.\n     */\n\n    public center(): void {\n        this.centered = true;\n    }\n\n    /**\n     * Untoggle the camera centration state and clip\n     * the camera to the nearest tile.\n     */\n\n    public decenter(): void {\n        this.centered = false;\n\n        this.clip();\n    }\n\n    /**\n     * The camera is centered about the specified player character. This\n     * is generally the main character playing the game (unless cutscenes)\n     * will be implemented later.\n     * @param character The player entity we are centering the camera on.\n     */\n\n    public centreOn(character: Character): void {\n        let width = Math.floor(this.gridWidth / 2),\n            height = Math.floor(this.gridHeight / 2),\n            nextX = character.x - width * this.tileSize,\n            nextY = character.y - height * this.tileSize;\n\n        /**\n         * We check whether the x and y coordinates that are about\n         * to be calculated are within the boundaries of the map. If\n         * they are, then we update the camera position both horizontally\n         * and vertically.\n         */\n\n        if (nextX >= 0 && nextX <= this.borderX && !this.lockX) {\n            this.x = nextX;\n            this.gridX = Math.round(character.x / this.tileSize) - width;\n        } else this.offsetX(nextX); // Bind to the x edge.\n\n        if (nextY >= 0 && nextY <= this.borderY && !this.lockY) {\n            this.y = nextY;\n            this.gridY = Math.round(character.y / this.tileSize) - height;\n        } else this.offsetY(nextY); // Bind to the y edge.\n    }\n\n    /**\n     * Checks whether the camera is nearing the left or right edge of\n     * the map by comparing against a tileSize or the borderX. We use\n     * the `tileSize` in order to offset the camera binding to the left\n     * edge by one tile. Otherwise the player will see a black border\n     * alongside the left edge of the map. If the upcoming x coordinate\n     * exits the boundaries, we then continuously set the x camera position\n     * to either 0 (for left edge case) or the borderX (for right edge case).\n     * @param nextX The camera x coordinate we are testing against going out of bounds.\n     */\n\n    private offsetX(nextX: number): void {\n        if (nextX <= this.tileSize) {\n            // Left edge case\n            this.x = 0;\n            this.gridX = 0;\n        } else if (nextX >= this.borderX) {\n            // The right edge case\n            this.x = this.borderX;\n            this.gridX = Math.round(this.borderX / this.tileSize);\n        }\n    }\n\n    /**\n     * Similar to `offsetX`, we check against the top of the map and the\n     * bottom of the map and prevent the camera from going out of bounds.\n     * @param nextY The camera y coordinate we are testing against going out of bounds.\n     */\n\n    private offsetY(nextY: number): void {\n        if (nextY <= this.tileSize) {\n            this.y = 0;\n            this.gridY = 0;\n        } else if (nextY >= this.borderY) {\n            this.y = this.borderY;\n            this.gridY = Math.round(this.borderY / this.tileSize);\n        }\n    }\n\n    /**\n     * Shifts the map horizontally or vertically (depending on the direction)\n     * and updates the coordinates accordingly. The +- 3 are added in order\n     * to offset the camera by a few tiles. This is done because otherwise the\n     * player would get caught in a weird zoning loop where the zone that was\n     * just entered would immediately trigger movement to the zone we just left.\n     * @param direction The direction we are moving the camera in.\n     */\n\n    public zone(direction: Modules.Orientation): void {\n        switch (direction) {\n            case Modules.Orientation.Up: {\n                this.setGridPosition(this.gridX, this.gridY - this.gridHeight + 3);\n\n                break;\n            }\n\n            case Modules.Orientation.Down: {\n                this.setGridPosition(this.gridX, this.gridY + this.gridHeight - 3);\n\n                break;\n            }\n\n            case Modules.Orientation.Right: {\n                this.setGridPosition(this.gridX + this.gridWidth - 3, this.gridY);\n\n                break;\n            }\n\n            case Modules.Orientation.Left: {\n                this.setGridPosition(this.gridX - this.gridWidth + 3, this.gridY);\n\n                break;\n            }\n        }\n\n        this.zoneClip();\n    }\n\n    /**\n     * Clip the map to the boundaries of the map if\n     * we zone somewhere outside of the limitations.\n     */\n\n    private zoneClip(): void {\n        if (this.gridX < 0) this.setGridPosition(0, this.gridY);\n\n        if (this.gridX > this.width) this.setGridPosition(this.width, this.gridY);\n\n        if (this.gridY < 0) this.setGridPosition(this.gridX, 0);\n\n        if (this.gridY > this.height) this.setGridPosition(this.gridX, this.height);\n    }\n\n    /**\n     * Zooms in our out the camera. Depending on the zoomAmount, if it's negative\n     * we zoom out, if it's positive we zoom in.\n     * @param zoomAmount Float value we are zooming by.\n     */\n\n    public zoom(zoomAmount = 0): void {\n        let zoom = parseFloat((this.zoomFactor + zoomAmount).toFixed(1));\n\n        this.setZoom(zoom);\n    }\n\n    /**\n     * Updates the minimum zoom when the screen is resized. Mobiles devices\n     * have a smaller screen size so we allow more zooming out. Once the\n     * device returns to normal proportions, we limit the zoom again.\n     */\n\n    public updateMinimumZoom(mobile = false): void {\n        // Update the minimum zoom.\n        MINIMUM_ZOOM = mobile ? 2 : 2.6;\n\n        this.zoom();\n    }\n\n    /**\n     * @returns Whether or not the camera is centered.\n     */\n\n    public isCentered(): boolean {\n        return this.centered;\n    }\n\n    /**\n     * Checks whether the specified x and y coordinates are in the camera's view.\n     * @param x The x grid coordinate.\n     * @param y The y grid coordinate.\n     * @param offsetX How far to the right and left to check outside the bounds.\n     * @param offsetY How far down to check outside the y bounds.\n     * @returns Whether or not the coordinates are within the viewport.\n     */\n\n    public isVisible(x: number, y: number, offsetX: number, offsetY: number): boolean {\n        return (\n            x > this.gridX - offsetX &&\n            x < this.gridX + this.gridWidth &&\n            y > this.gridY - offsetX &&\n            y < this.gridY + this.gridHeight + offsetY\n        );\n    }\n\n    /**\n     * Iterates through every grid coordinate in the view port.\n     * @param callback Callback contains the grid coordinates being iterated in the view.\n     * @param offset How much to look outside the width and height of the viewport.\n     */\n\n    public forEachVisiblePosition(callback: (x: number, y: number) => void, offset = 1): void {\n        for (let y = this.gridY - offset, maxY = y + this.gridHeight + offset * 2; y < maxY; y++)\n            for (let x = this.gridX - offset, maxX = x + this.gridWidth + offset * 2; x < maxX; x++)\n                callback(x, y);\n    }\n}\n","/**\n * Represents the default class for minigame status. It's used by the game world\n * to update the player's status in the minigame.\n */\n\nimport type { Status } from '@kaetram/common/api/minigame';\n\nexport default class Minigame {\n    // TeamWar score variables.\n    public redTeamScore = 0;\n    public blueTeamScore = 0;\n    public started = false;\n\n    /**\n     * @param type Represents the type of minigame we are dealing with. (Opcodes.Minigame)\n     * @param status Whether the player is in-game or in the lobby.\n     * @param countdown Lobby/in-game countdown timer updated from the server.\n     */\n    public constructor(public type = -1, public status: Status = 'exit', public countdown = 180) {}\n\n    /**\n     * Resets the minigame status to default.\n     */\n\n    public reset(): void {\n        this.type = -1;\n        this.status = 'exit';\n        this.started = false;\n    }\n\n    /**\n     * Updates the minigame status.\n     * @param status The new status of the minigame.\n     */\n\n    public setStatus(status: Status): void {\n        this.status = status;\n    }\n\n    /**\n     * Updates the score for the TeamWar minigame.\n     * @param redTeam New red team score.\n     * @param blueTeam New blue team score.\n     */\n\n    public setScore(redTeam: number, blueTeam: number): void {\n        this.redTeamScore = redTeam;\n        this.blueTeamScore = blueTeam;\n    }\n\n    /**\n     * A minigame status exists if the type of minigame is greater than -1.\n     * @returns Whether ot not the type is greater than -1.\n     */\n\n    public exists(): boolean {\n        return this.type > -1;\n    }\n}\n","import log from '../lib/log';\n\nexport default class Overlay {\n    private currentOverlay = '';\n\n    private overlays: { [key: string]: HTMLImageElement } = {\n        fog: this.load('fog')\n    };\n\n    /**\n     * Loads an overlay based on the provided string.\n     * @param name File name of the overlay.\n     * @returns HTML image of the overlay if it exists.\n     */\n\n    private load(name: string): HTMLImageElement {\n        let overlay = new Image(),\n            image = `/img/overlays/${name}.png`;\n\n        overlay.crossOrigin = 'Anonymous';\n        overlay.src = image;\n\n        overlay.addEventListener('load', () => log.debug(`Loaded ${name}`));\n\n        return overlay;\n    }\n\n    /**\n     * @returns Whether or not overlay exists by checking if the string is empty.\n     */\n\n    public hasOverlay(): boolean {\n        return this.currentOverlay !== '';\n    }\n\n    /**\n     * Attempts to grab the current overlay.\n     * @returns The `currentOverlay` in our dictionary. If it\n     * doesn't exist, we just return undefined.\n     */\n\n    public get(): HTMLImageElement {\n        return this.overlays[this.currentOverlay];\n    }\n\n    /**\n     * Updates the `currentOverlay` to the provided string.\n     * @param overlay The new overlay to be set.\n     */\n\n    public update(overlay = ''): void {\n        this.currentOverlay = overlay;\n    }\n}\n","/**\n * Used for organization of WebGL information. We use this to\n * apply shaders and assign it to a WebGLProgram.\n */\n\nimport log from '../../lib/log';\n\ninterface Attributes {\n    [key: string]: number;\n}\n\ninterface UniformAttributes {\n    [key: string]: WebGLUniformLocation;\n}\n\n/**\n * Huge thanks to the creator of gl-tiled for providing this framework. It has\n * been modified by me to use more standard approaches.\n */\n\nexport default class ProgramData {\n    public id = '';\n\n    public program: WebGLProgram;\n\n    // The attributes for the program.\n    public attributes: Attributes = {};\n\n    // The uniform attributes for the program.\n    public uniforms: UniformAttributes = {};\n\n    public constructor(\n        context: WebGLRenderingContext,\n        vertexShader: string,\n        fragmentShader: string,\n        attributes: Attributes = {}\n    ) {\n        this.id = (context.canvas as HTMLCanvasElement).id;\n        this.program = this.compile(context, vertexShader, fragmentShader, attributes)!;\n\n        // Build attribute locations based on the created program.\n        let count = context.getProgramParameter(this.program, context.ACTIVE_ATTRIBUTES);\n\n        for (let i = 0; i < count; i++) {\n            let attribute = context.getActiveAttrib(this.program, i);\n\n            if (!attribute) continue;\n\n            this.attributes[attribute.name] = context.getAttribLocation(\n                this.program,\n                attribute.name\n            );\n        }\n\n        // Build the uniform locations based on the created program.\n        count = context.getProgramParameter(this.program, context.ACTIVE_UNIFORMS);\n\n        for (let i = 0; i < count; i++) {\n            let uniform = context.getActiveUniform(this.program, i);\n\n            // Skip if we cannot get the uniform.\n            if (!uniform) continue;\n\n            // We need to remove the array index from the name.\n            let name = uniform.name.replace('[0]', ''),\n                location = context.getUniformLocation(this.program, name);\n\n            // If the location is valid, add it to the uniforms.\n            if (location) this.uniforms[name] = location;\n        }\n    }\n\n    /**\n     * Used to attach shaders and attributes onto a WebGL rendering context.\n     * @param context The context we want to attach the program to.\n     * @param vertexShader The vertex shader we want to use.\n     * @param fragmentShader The fragment shader we want to use.\n     * @param attributes (Optional) The attributes we want to use.\n     */\n\n    private compile(\n        context: WebGLRenderingContext,\n        vertexShader: string,\n        fragmentShader: string,\n        attributes: Attributes = {}\n    ): WebGLProgram | undefined {\n        // Compile both the vertex and fragment shaders and store the results.\n        let glVertex = this.compileShader(context, context.VERTEX_SHADER, vertexShader),\n            glFragment = this.compileShader(context, context.FRAGMENT_SHADER, fragmentShader),\n            program = context.createProgram();\n\n        if (!program) {\n            log.error('Could not create WebGL program.');\n\n            return;\n        }\n\n        // Attach the shaders to the program.\n        context.attachShader(program, glVertex!);\n        context.attachShader(program, glFragment!);\n\n        // Iterate through the attributes and bind them to the program.\n        for (let key in attributes) context.bindAttribLocation(program, attributes[key], key);\n\n        // Link the program and check for errors.\n        context.linkProgram(program);\n\n        if (!context.getProgramParameter(program, context.LINK_STATUS)) {\n            log.error(`Could not link the WebGL program: ${context.getProgramInfoLog(program)}`);\n\n            context.deleteProgram(program);\n            context.deleteShader(glVertex!);\n            context.deleteShader(glFragment!);\n\n            return;\n        }\n\n        // Delete the shaders since we no longer need them.\n        context.deleteShader(glVertex!);\n        context.deleteShader(glFragment!);\n\n        return program;\n    }\n\n    /**\n     * Compiles the shader and returns it.\n     * @param context The context for which we want to compile the shader.\n     * @param type The type of shader we want to compile.\n     * @param source The source code for the shader.\n     * @returns The compiled shader object.\n     */\n\n    private compileShader(\n        context: WebGLRenderingContext,\n        type: number,\n        source: string\n    ): WebGLShader | undefined {\n        let shader = context.createShader(type);\n\n        // If we cannot create a shader, return undefined.\n        if (!shader) {\n            log.error(`Failed to create shader of type ${type}`);\n\n            return;\n        }\n\n        context.shaderSource(shader, source);\n        context.compileShader(shader);\n\n        // We could not compile the shader properly.\n        if (!context.getShaderParameter(shader, context.COMPILE_STATUS)) {\n            log.error(`Failed to compile shader: ${context.getShaderInfoLog(shader)}`);\n\n            return;\n        }\n\n        return shader;\n    }\n}\n","/**\n * Class object for organizing and storing information about tilesets. This contains\n * preliminary data for tilesets that shaders or WebGL contexts can use.\n */\n\nimport log from '../../lib/log';\n\nimport type Map from '../../map/map';\n\nexport default class Tileset {\n    public textures: WebGLTexture[] = [];\n\n    public constructor(private map: Map, private context: WebGLRenderingContext) {\n        // Create the textures for each tileset.\n        for (let tileset of this.map.tilesets) this.createTexture(tileset);\n    }\n\n    /**\n     * Creates a tileset texture and binds it to class specified WebGL context. Since we are using\n     * two contexts (one for background and one for foreground), this will be called for each\n     * respective context.\n     * @param context The context that we want to bind the texture information to.\n     * @param image The image that we want to use for the texture.\n     */\n\n    public createTexture(image: HTMLImageElement): void {\n        let texture = this.context.createTexture();\n\n        // Verify that the texture was created.\n        if (!texture || !image)\n            return log.error(`Failed to create texture for tileset: ${image.src}`);\n\n        // Bind and apply the texture to the context\n        this.context.bindTexture(this.context.TEXTURE_2D, texture);\n        this.context.texImage2D(\n            this.context.TEXTURE_2D,\n            0,\n            this.context.RGBA,\n            this.context.RGBA,\n            this.context.UNSIGNED_BYTE,\n            image\n        );\n\n        // Apply the texture parameters to the context.\n        this.context.texParameteri(\n            this.context.TEXTURE_2D,\n            this.context.TEXTURE_MAG_FILTER,\n            this.context.NEAREST\n        );\n        this.context.texParameteri(\n            this.context.TEXTURE_2D,\n            this.context.TEXTURE_MIN_FILTER,\n            this.context.NEAREST\n        );\n        this.context.texParameteri(\n            this.context.TEXTURE_2D,\n            this.context.TEXTURE_WRAP_S,\n            this.context.CLAMP_TO_EDGE\n        );\n        this.context.texParameteri(\n            this.context.TEXTURE_2D,\n            this.context.TEXTURE_WRAP_T,\n            this.context.CLAMP_TO_EDGE\n        );\n\n        // Append the texture to the list of textures.\n        this.textures.push(texture);\n\n        log.debug(`Created texture for tileset: ${image.src}`);\n    }\n\n    /**\n     * Iterates through all the textures.\n     */\n\n    public forEachTexture(callback: (texture: WebGLTexture, index: number) => void): void {\n        for (let i = 0; i < this.textures.length; i++) callback(this.textures[i], i);\n    }\n}\n","import type { RotatedTile } from '@kaetram/common/types/map';\nimport type Map from '../../map/map';\n\n/**\n * A layer is a class object that corresponds with a layer in the map data. This is used to\n * structure the tile map data and organize it into layers. Layers are generated on the go,\n * which means that if the area of the map contains 2 layers, then 2 layers will be generated.\n * If the player steps into an area that contains 3 layers, another layer object will be created\n * and added to the map.\n */\n\nenum FlipFlags {\n    FlippedAntiDiagonal = 0x20_00_00_00,\n    FlippedVertical = 0x40_00_00_00,\n    FlippedHorizontal = 0x80_00_00_00\n}\n\nexport default class Layer {\n    /**\n     * The background texture is for the normal tiles that are rendered on top of each other.\n     * The foreground layer are tiles that are rendered on top of the background layer and that\n     * the player is behind. Since I am still experimenting with WebGL I might be able to incorporate\n     * all of the rendering in one canvas in the nearby future. Please have patience.\n     */\n\n    // The texture data for each index in the layer.\n    public backgroundData: Uint8Array;\n    public foregroundData: Uint8Array;\n\n    // The texture object for foreground and background.\n    public backgroundTexture!: WebGLTexture;\n    public foregroundTexture!: WebGLTexture;\n\n    public constructor(private map: Map) {\n        this.backgroundData = new Uint8Array(this.map.width * this.map.height * 4);\n        this.foregroundData = new Uint8Array(this.map.width * this.map.height * 4);\n\n        // Fill the texture data with 255's\n        this.backgroundData.fill(255);\n        this.foregroundData.fill(255);\n    }\n\n    /**\n     * Binds the texture to the WebGL context. The foreground flag determines which texture\n     * data we want to bind to the context.\n     * @param context The context that we want to bind the texture to.\n     * @param program The shader program that we want to bind the texture to.\n     * @param foreground Whether we want to bind the foreground or background texture.\n     */\n\n    public bindTexture(\n        context: WebGLRenderingContext,\n        program: WebGLProgram,\n        foreground = false\n    ): void {\n        // Create the textures if they do not exist.\n        if (!this.backgroundTexture && !foreground)\n            this.backgroundTexture = context.createTexture()!;\n        if (!this.foregroundTexture && foreground)\n            this.foregroundTexture = context.createTexture()!;\n\n        context.bindTexture(\n            context.TEXTURE_2D,\n            foreground ? this.foregroundTexture : this.backgroundTexture\n        );\n\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MAG_FILTER, context.NEAREST);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_MIN_FILTER, context.NEAREST);\n\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_S, context.CLAMP_TO_EDGE);\n        context.texParameteri(context.TEXTURE_2D, context.TEXTURE_WRAP_T, context.CLAMP_TO_EDGE);\n\n        // Use the background program to draw the map.\n        context.useProgram(program);\n\n        // Upload the texture data to the GPU.\n        context.texImage2D(\n            context.TEXTURE_2D,\n            0,\n            context.RGBA,\n            this.map.width,\n            this.map.height,\n            0,\n            context.RGBA,\n            context.UNSIGNED_BYTE,\n            foreground ? this.foregroundData : this.backgroundData\n        );\n    }\n\n    /**\n     * Clears a tile from the texture data at a provided index.\n     * @param index The index at which we want to clear the tile.\n     */\n\n    public clear(index: number): void {\n        // Increase the index.\n        index *= 4;\n\n        this.backgroundData[index] =\n            this.backgroundData[index + 1] =\n            this.backgroundData[index + 2] =\n            this.backgroundData[index + 3] =\n                255;\n\n        this.foregroundData[index] =\n            this.foregroundData[index + 1] =\n            this.foregroundData[index + 2] =\n            this.foregroundData[index + 3] =\n                255;\n    }\n\n    /**\n     * We add a tile to the specific texture data based on the provided index and value.\n     * @param index Represents the index at which the tile will be added (index * 4 for the buffer.)\n     * @param tile Contains information about the tile, this can be a flat tile (number value) or a rotated\n     * tile with flags applied to it. Depending on the context we extract the information and apply it to the\n     * texture data.\n     * @param foreground Whether we want to add the tile to the foreground or background texture data.\n     */\n\n    public addTile(index: number, tile: number | RotatedTile, flipped = false): void {\n        // Grab the index in the respective texture data array.\n        let tileId = flipped ? (tile as RotatedTile).tileId : (tile as number),\n            textureData = this.map.isHighTile(tileId) ? this.foregroundData : this.backgroundData,\n            dataIndex = index * 4;\n\n        // If the tileId is 0 or invalid it means it's an empty tile, so we just update the texture data with 255.\n        if (!tileId) {\n            textureData[dataIndex] =\n                textureData[dataIndex + 1] =\n                textureData[dataIndex + 2] =\n                textureData[dataIndex + 3] =\n                    255;\n            return;\n        }\n\n        // Extract the information from the tileset and apply it to the texture data.\n        let tileset = this.map.getTilesetFromId(tileId)!;\n\n        // If the tileset is invalid, then we just return.\n        if (!tileset) return;\n\n        let relativeId = tileId - tileset.firstGid - 1,\n            tilesWidth = tileset.width / this.map.tileSize;\n\n        // Write the texture information to the texture data array.\n        textureData[dataIndex] = relativeId % tilesWidth; // tile's x coordinate in the tileset\n        textureData[dataIndex + 1] = Math.floor(relativeId / tilesWidth); // tile's y coordinate in the tileset\n        textureData[dataIndex + 2] = tileset.index; // tileset index\n        textureData[dataIndex + 3] = flipped ? this.getFlippedFlag(tile as RotatedTile) : 0; // tile flags\n    }\n\n    /**\n     * Calcualtes the flip flags for rendering rotated tiles.\n     * @param flag The rotated tile that contains the flags.\n     * @returns The bit flag after applying all transformations.\n     */\n\n    private getFlippedFlag(tile: RotatedTile): number {\n        return (\n            (tile.h ? FlipFlags.FlippedHorizontal >> 28 : 0) |\n            (tile.v ? FlipFlags.FlippedVertical >> 28 : 0) |\n            (tile.d ? FlipFlags.FlippedAntiDiagonal >> 28 : 0)\n        );\n    }\n}\n","import type { ProcessedAnimation } from '@kaetram/common/types/map';\n\nexport default class Tile {\n    public animationIndex = 0;\n    private lastTime = 0;\n\n    public constructor(\n        public id: number, // The tileId\n        public index: number, // Index position of the tile.\n        public animationInfo: ProcessedAnimation[],\n        public isFlipped = false\n    ) {}\n\n    /**\n     * Animates a tile when the time elapsed since the last update is\n     * greater than the duration of the animation. We change the tileId\n     * when this update occurs and increment the animationIndex. Once\n     * we exhaust all the animations in the tile, we reset the animationIndex.\n     * @param time The current time in milliseconds (sent from the client updater).\n     */\n\n    public animate(time: number): void {\n        if (time - this.lastTime > this.animationInfo[this.animationIndex].duration) {\n            this.id = this.animationInfo[this.animationIndex].tileId;\n\n            this.lastTime = time;\n\n            if (this.animationIndex >= Object.keys(this.animationInfo).length - 1)\n                this.animationIndex = 0;\n            else this.animationIndex++;\n        }\n    }\n}\n","class t{constructor(t=0,e=0){this.x=t,this.y=e}copy(){return new t(this.x,this.y)}dot(t){return t.x*this.x+t.y*this.y}sub(e){return new t(this.x-e.x,this.y-e.y)}add(e){return new t(this.x+e.x,this.y+e.y)}mul(e){return new t(this.x*e,this.y*e)}inv(){return this.mul(-1)}dist2(t){return(this.x-t.x)**2+(this.y-t.y)**2}normalize(){var e=Math.sqrt(this.length2());return new t(this.x/e||0,this.y/e||0)}length2(){return this.x**2+this.y**2}toString(){return`${this.x},${this.y}`}inBound(t,e){return t.x<this.x&&this.x<e.x&&t.y<this.y&&this.y<e.y}}function e(t,e,a){var r=`illuminated-${t}`,s=document.querySelector(`#${r}`);s||((s=document.createElement(\"canvas\")).id=r,s.width=e,s.height=a,s.style.display=\"none\",document.body.append(s));var i=s.getContext(\"2d\");return i.clearRect(0,0,s.width,s.height),s.width=e,s.height=a,{canvas:s,ctx:i,w:e,h:a}}function a(t,e,a){var[r]=e;if(!r)throw new Error(\"There are no points to draw a path of.\");t.moveTo(r.x,r.y);for(var s=1,i=e.length;s<i;++s)r=e[s],t.lineTo(r.x,r.y);!a&&e.length>2&&([r]=e,t.lineTo(r.x,r.y))}var r=(()=>{var t=document.createElement(\"canvas\");t.width=1,t.height=1;var e=t.getContext(\"2d\");return(t,a=1)=>{e.clearRect(0,0,1,1),e.fillStyle=t,e.fillRect(0,0,1,1);var[r,s,i]=e.getImageData(0,0,1,1).data;return`rgba(${[r,s,i,a]})`}})(),s=(()=>{var t=document.createElement(\"canvas\");t.width=1,t.height=1;var e=t.getContext(\"2d\");function a(t){var e=t.toString(16);return 1===e.length&&(e=`0${e}`),e}return t=>{e.clearRect(0,0,1,1),e.fillStyle=t,e.fillRect(0,0,1,1);var[r,s,i,n]=e.getImageData(0,0,1,1).data;return{color:`#${a(r)}${a(s)}${a(i)}`,alpha:Math.round(1e3*n/255)/1e3}}})();function i(e,a,r){var s,i,n,h,o=1e-6,l=[];\"number\"==typeof a?n=(s=a)*s+(i=r||0)*i:(s=a.x,i=a.y,n=a.length2());var c=i*Math.sqrt(n-e*e),d=Math.acos((-e*s+c)/n),u=Math.acos((-e*s-c)/n),v=e*Math.cos(d),f=e*Math.sin(d),p=e*Math.cos(u),g=e*Math.sin(u);h=new t(s+p,i+g),l.push(h);var m=h.length2();h=new t(s+v,i-f),l.push(h);var y=h.length2();if(Math.abs(m-y)<o)return l;h=new t(s+p,i-g),l.push(h);var w=h.length2();if(Math.abs(y-w)<o)return[h,l[1]];if(Math.abs(m-w)<o)return[l[0],h];h=new t(s+v,i+f),l.push(h);var x=h.length2();return Math.abs(w-x)<o?[l[2],h]:Math.abs(y-x)<o?[l[1],h]:Math.abs(m-x)<o?[l[0],h]:l}var n,h=(t,e,a)=>{if(!e.has(t))throw TypeError(\"Cannot \"+a)},o=(t,e,a)=>(h(t,e,\"read from private field\"),a?a.call(t):e.get(t));class l{constructor(t={}){((t,e,a)=>{if(e.has(t))throw TypeError(\"Cannot add the same private member more than once\");e instanceof WeakSet?e.add(t):e.set(t,a)})(this,n,void 0);var{lights:e,color:a}=t;this.lights=null!=e?e:[],this.color=null!=a?a:\"rgba(0,0,0,0.9)\"}compute(t,a){var r,s,i,l;o(this,n)&&o(this,n).w===t&&o(this,n).h===a||(r=this,s=n,i=e(\"dm\",t,a),h(r,s,\"write to private field\"),l?l.call(r,i):s.set(r,i));var{ctx:c}=o(this,n);for(var d of(c.save(),c.clearRect(0,0,t,a),c.fillStyle=this.color,c.fillRect(0,0,t,a),c.globalCompositeOperation=\"destination-out\",this.lights))d.mask(c);c.restore()}render(t){t.drawImage(o(this,n).canvas,0,0)}getCanvas(){return o(this,n).canvas}}n=new WeakMap;var c=Math.PI*(3-Math.sqrt(5)),d=2*Math.PI;class u{constructor(t={}){this.uniqueId=0;var{diffuse:e}=t;this.diffuse=null!=e?e:.8}bounds(){return{topLeft:new t,bottomRight:new t}}cast(t,e,a){}path(t){}contains(t){return!1}}class v extends u{constructor(e={}){super(e);var{center:a,radius:r}=e;this.center=null!=a?a:new t,this.radius=null!=r?r:20}cast(t,e,r){var{center:s,radius:n}=this,h=s.sub(e),o=i(n,h),[l,c]=o,d=l.add(e),u=c.add(e),{bottomRight:v,topLeft:f}=r,p=(v.x-f.x+(v.y-f.y))/2;h=h.normalize().mul(p),l=l.normalize().mul(p),c=c.normalize().mul(p);var g=d.add(h),m=u.add(h),y=d.add(l),w=u.add(c),x=Math.atan2(h.x,-h.y);t.beginPath(),a(t,[u,w,m,g,y,d],!0),t.arc(s.x,s.y,n,x,x+Math.PI),t.fill()}path(t){var{center:e,radius:a}=this;t.arc(e.x,e.y,a,0,d)}bounds(){var{center:e,radius:a}=this;return{topLeft:new t(e.x-a,e.y-a),bottomRight:new t(e.x+a,e.y+a)}}contains(t){var{center:e,radius:a}=this;return t.dist2(e)<a*a}}var f,p,g=(t,e,a)=>{if(!e.has(t))throw TypeError(\"Cannot \"+a)},m=(t,e,a)=>(g(t,e,\"read from private field\"),a?a.call(t):e.get(t)),y=(t,e,a)=>{if(e.has(t))throw TypeError(\"Cannot add the same private member more than once\");e instanceof WeakSet?e.add(t):e.set(t,a)},w=(t,e,a,r)=>(g(t,e,\"write to private field\"),r?r.call(t,a):e.set(t,a),a);class x{constructor(e={}){y(this,f,void 0),y(this,p,void 0);var{position:a,distance:r,diffuse:s}=e;this.position=null!=a?a:new t,this.distance=null!=r?r:100,this.diffuse=null!=s?s:.8}render(t){}mask(t){var e=this.getVisibleMaskCache(),{x:a,y:r}=this.position;t.drawImage(e.canvas,Math.round(a-e.w/2),Math.round(r-e.h/2))}bounds(){var{position:e,distance:a}=this,{x:r,y:s}=e;return{topLeft:new t(r-a,s-a),bottomRight:new t(r+a,s+a)}}center(){var{distance:e}=this;return new t(e,e)}forEachSample(t){t(this.position)}getVisibleMaskCache(){var t=Math.floor(1.4*this.distance),a=`${t}`;if(m(this,f)!==a){w(this,f,a),w(this,p,e(`vm${this.id}`,2*t,2*t));var{ctx:r,w:s,h:i}=m(this,p),n=r.createRadialGradient(t,t,0,t,t,t);n.addColorStop(0,\"rgba(0,0,0,1)\"),n.addColorStop(1,\"rgba(0,0,0,0)\"),r.fillStyle=n,r.fillRect(0,0,s,i)}return m(this,p)}getHashCache(){return[this.distance,this.diffuse].toString()}}f=new WeakMap,p=new WeakMap;var b,M,C,R=(t,e,a)=>{if(!e.has(t))throw TypeError(\"Cannot \"+a)},S=(t,e,a)=>(R(t,e,\"read from private field\"),a?a.call(t):e.get(t)),E=(t,e,a)=>{if(e.has(t))throw TypeError(\"Cannot add the same private member more than once\");e instanceof WeakSet?e.add(t):e.set(t,a)},k=(t,e,a,r)=>(R(t,e,\"write to private field\"),r?r.call(t,a):e.set(t,a),a);class T extends x{constructor(t={}){super(t),E(this,b,0),E(this,M,void 0),E(this,C,void 0);var e,a,r,s,{id:i,color:n,radius:h,samples:o,angle:l,roughness:c}=t;this.id=null!=i?i:0,this.color=null!=n?n:\"rgba(250,220,150,0.8)\",this.radius=null!=h?h:0,this.samples=null!=o?o:1,this.angle=null!=l?l:0,this.roughness=null!=c?c:0,0===this.id&&(this.id=++(e=this,a=b,{set _(t){k(e,a,t,r)},get _(){return S(e,a,s)}})._)}getHashCache(){return[this.color,this.distance,this.diffuse,this.angle,this.roughness,this.samples,this.radius].toString()}center(){var{angle:e,roughness:a,distance:r}=this;return new t((1-Math.cos(e)*a)*r,(1+Math.sin(e)*a)*r)}bounds(){var{angle:e,roughness:a,distance:r,position:s}=this,{x:i,y:n}=new t(Math.cos(e),-Math.sin(e)).mul(a*r);return{topLeft:new t(s.x+i-r,s.y+n-r),bottomRight:new t(s.x+i+r,s.y+n+r)}}mask(e){var{angle:a,roughness:r,distance:s,position:i}=this,{canvas:n,w:h,h:o}=this.getVisibleMaskCache(),{x:l,y:c}=new t(Math.cos(a),-Math.sin(a)).mul(r*s);e.drawImage(n,Math.round(i.x+l-h/2),Math.round(i.y+c-o/2))}getGradientCache(t){var a=this.getHashCache();if(S(this,M)===a)return S(this,C);k(this,M,a);var{distance:s,id:i,radius:n,color:h}=this,o=Math.round(s),l=2*o,c=e(`gc${i}`,l,l),{ctx:d,w:u,h:v}=c,f=d.createRadialGradient(t.x,t.y,0,o,o,o);return f.addColorStop(Math.min(1,n/s),h),f.addColorStop(1,r(h,0)),d.fillStyle=f,d.fillRect(0,0,u,v),k(this,C,c),c}render(t){var{x:e,y:a}=this.position,r=this.center(),{canvas:s}=this.getGradientCache(r);t.drawImage(s,Math.round(e-r.x),Math.round(a-r.y))}forEachSample(e){for(var{samples:a,radius:r,position:s}=this,i=0,n=a;i<n;++i){var h=i*c,o=Math.sqrt(i/a)*r,l=new t(Math.cos(h)*o,Math.sin(h)*o);e(s.add(l))}}}b=new WeakMap,M=new WeakMap,C=new WeakMap;var $,I,L=(t,e,a)=>{if(!e.has(t))throw TypeError(\"Cannot \"+a)},W=(t,e,a)=>(L(t,e,\"read from private field\"),a?a.call(t):e.get(t)),z=(t,e,a)=>{if(e.has(t))throw TypeError(\"Cannot add the same private member more than once\");e instanceof WeakSet?e.add(t):e.set(t,a)},q=(t,e,a,r)=>(L(t,e,\"write to private field\"),r?r.call(t,a):e.set(t,a),a);class B{constructor(t={}){z(this,$,void 0),z(this,I,void 0);var{light:e,objects:a}=t;this.light=null!=e?e:new x,this.objects=null!=a?a:[]}createCache(t,a){q(this,$,e(\"lc\",t,a)),q(this,I,e(\"lcc\",t,a))}compute(t,e){W(this,$)&&W(this,$).w===t&&W(this,$).h===e||this.createCache(t,e);var{ctx:a}=W(this,$);a.save(),a.clearRect(0,0,a.canvas.width,a.canvas.height),this.light.render(a),a.globalCompositeOperation=\"destination-out\",this.cast(a),a.restore()}cast(t){var{ctx:e,w:a,h:r,canvas:s}=W(this,I),{light:i}=this,n=i.samples;e.clearRect(0,0,a,r),e.fillStyle=`rgba(0,0,0,${Math.round(100/n)/100})`;var h=i.bounds(),{topLeft:o,bottomRight:l}=h,{objects:c}=this;for(var d of(i.forEachSample((t=>{for(var a=0,r=c.length;a<r;++a)if(c[a].contains(t))return void e.fillRect(o.x,o.y,l.x-o.x,l.y-o.y);for(var s of c)s.cast(e,t,h)})),c)){var{diffuse:u}=d;u*=i.diffuse,e.fillStyle=`rgba(0,0,0,${1-u})`,e.beginPath(),d.path(e),e.fill()}t.drawImage(s,0,0)}render(t){t.drawImage(W(this,$).canvas,0,0)}getCanvas(){return W(this,$).canvas}}$=new WeakMap,I=new WeakMap;class P extends u{constructor(t={}){super(t);var{points:e}=t;this.points=null!=e?e:[]}bounds(){var[t]=this.points;if(!t)throw new Error(\"There are no points to calculate the boundaries of.\");for(var e=t.copy(),a=e.copy(),r=1,s=this.points.length;r<s;++r){var{x:i,y:n}=this.points[r];i>a.x&&(a.x=i),n>a.y&&(a.y=n),i<e.x&&(e.x=i),n<e.y&&(e.y=n)}return{topLeft:e,bottomRight:a}}contains(t){for(var{points:e}=this,{length:a}=e,r=a-1,{x:s,y:i}=t,n=!1,h=0;h<a;h++){var{x:o,y:l}=e[r],{x:c,y:d}=e[h];(d<i&&l>=i||l<i&&d>=i)&&(c<=s||o<=s)&&c+(i-d)/(l-d)*(o-c)<s&&(n=!n),r=h}return n}path(t){a(t,this.points)}cast(t,e,r){var{bottomRight:s,topLeft:i}=r,n=(s.x-i.x+(s.y-i.y))/2;this.forEachVisibleEdges(e,r,((r,s,i,h,o)=>{var l=i.inv().dot(o)/o.length2(),c=(l<0?r:l>1?s:r.add(o.mul(l))).sub(e);c=c.normalize().mul(n);var d=r.add(c),u=s.add(c),v=r.add(i.normalize().mul(n)),f=s.add(h.normalize().mul(n));t.beginPath(),a(t,[r,s,f,u,d,v]),t.fill()}))}forEachVisibleEdges(e,a,r){for(var s,{points:i}=this,n=i[i.length-1],h=0,o=i.length;h<o;++h,n=s)if(s=i[h],n.inBound(a.topLeft,a.bottomRight)){var l=n.sub(e),c=s.sub(e),d=s.sub(n);new t(d.y,-d.x).dot(l)<0&&r(n,s,l,c,d)}}}class V extends P{constructor(e={}){super(e);var{a:a,b:r}=e;this.a=null!=a?a:new t,this.b=null!=r?r:new t,this.syncFromAB()}syncFromAB(){this.points=[this.a,this.b]}}class F extends P{constructor(e={}){super(e);var{topLeft:a,bottomRight:r}=e;this.topLeft=null!=a?a:new t,this.bottomRight=null!=r?r:new t,this.syncFromTopleftBottomright()}syncFromTopleftBottomright(){var{topLeft:e,bottomRight:a}=this,r=new t(a.x,e.y),s=new t(e.x,a.y);this.points=[e,r,a,s]}fill(t){var[{x:e,y:a},,{x:r,y:s}]=this.points;t.rect(e,a,r-e,s-a)}}export{l as DarkMask,v as DiscObject,c as GOLDEN_ANGLE,T as Lamp,x as Light,B as Lighting,V as LineObject,u as OpaqueObject,P as PolygonObject,F as RectangleObject,t as Vec2,d as _2PI,e as createCanvasAnd2dContext,s as extractColorAndAlpha,r as getRGBA,i as getTan2,a as path};\n//# sourceMappingURL=illuminated.mjs.map\n","import Tile from './tile';\n\nimport Utils from '../utils/util';\nimport Character from '../entity/character/character';\nimport { isMobile, isTablet } from '../utils/detect';\n\nimport { Modules } from '@kaetram/common/network';\nimport { DarkMask, Vec2, Lamp, Lighting } from 'illuminated';\n\nimport type Game from '../game';\nimport type Map from '../map/map';\nimport type Camera from './camera';\nimport type Splat from './infos/splat';\nimport type Entity from '../entity/entity';\nimport type Sprite from '../entity/sprite';\nimport type Item from '../entity/objects/item';\nimport type Player from '../entity/character/player/player';\nimport type { SerializedLight } from '@kaetram/common/types/light';\nimport type { RegionTile, RotatedTile } from '@kaetram/common/types/map';\n\ninterface RendererLight {\n    origX: number;\n    origY: number;\n    diff: number;\n    relative: boolean;\n    computed: boolean;\n}\n\ntype RendererLamp = RendererLight & Lamp;\n\nexport type ContextType = '2d' | 'webgl';\nexport interface RendererLighting extends RendererLight, Lighting {\n    light: RendererLamp;\n}\n\nexport type ContextCallback = (context: CanvasRenderingContext2D) => void;\n\nexport default class Renderer {\n    public background = document.querySelector<HTMLCanvasElement>('#background')!;\n    protected foreground = document.querySelector<HTMLCanvasElement>('#foreground')!;\n    protected overlay = document.querySelector<HTMLCanvasElement>('#overlay')!;\n    protected textCanvas = document.querySelector<HTMLCanvasElement>('#text-canvas')!;\n    protected entities = document.querySelector<HTMLCanvasElement>('#entities')!;\n    protected cursor = document.querySelector<HTMLCanvasElement>('#cursor')!;\n\n    // Store all canvases for easy iteration\n    protected canvases: HTMLCanvasElement[] = [\n        this.background,\n        this.foreground,\n        this.overlay,\n        this.textCanvas,\n        this.entities,\n        this.cursor\n    ];\n\n    // Create the contexts based on the canvases.\n    protected entitiesContext: CanvasRenderingContext2D = this.entities.getContext('2d')!;\n    protected overlayContext: CanvasRenderingContext2D = this.overlay.getContext('2d')!;\n    protected textContext: CanvasRenderingContext2D = this.textCanvas.getContext('2d')!;\n    protected cursorContext: CanvasRenderingContext2D = this.cursor.getContext('2d')!;\n\n    protected allContexts = [\n        this.entitiesContext,\n        this.overlayContext,\n        this.textContext,\n        this.cursorContext\n    ];\n\n    // We split contexts into two arrays, one for tilemap rendering and one for the rest.\n    protected contexts = [this.entitiesContext, this.textContext, this.overlayContext];\n\n    // Zooming buttons\n    private zoomIn: HTMLElement = document.querySelector('#zoom-in')!;\n    private zoomOut: HTMLElement = document.querySelector('#zoom-out')!;\n\n    protected map: Map;\n    protected camera: Camera;\n\n    // Variables used for calculating multiple things\n    public tileSize = Utils.tileSize;\n    public actualTileSize = Utils.tileSize;\n\n    // Screen dimensions\n    public screenWidth = 0;\n    public screenHeight = 0;\n\n    // Canvas dimensions\n    public canvasWidth = 0;\n    public canvasHeight = 0;\n\n    // Animated tiles\n    public animateTiles = true;\n    protected animatedTiles: { [index: number]: Tile } = {};\n\n    // Lighting\n    protected lightings: RendererLighting[] = [];\n    protected darkMask: DarkMask = new DarkMask({\n        lights: [],\n        color: 'rgba(0, 0, 0, 0.84)'\n    });\n\n    // Toggles for rendering\n    public debugging = false;\n    public stopRendering = false;\n    public forceRendering = false;\n    public drawNames = true;\n    public drawLevels = true;\n\n    // Default values\n    public fontSize = 10;\n\n    // Detect functions\n    public mobile = isMobile();\n    public tablet = isTablet();\n\n    // FPS variables\n    protected time = Date.now();\n    protected fps = 0;\n    protected frameCount = 0;\n\n    // Static sprites\n    protected shadowSprite!: Sprite;\n    protected sparksSprite!: Sprite;\n    protected silverMedal!: Sprite;\n    protected goldMedal!: Sprite;\n    protected crownArtist!: Sprite;\n    protected crownTier1!: Sprite;\n    protected crownTier2!: Sprite;\n    protected crownTier3!: Sprite;\n    protected crownTier4!: Sprite;\n    protected crownTier5!: Sprite;\n    protected crownTier6!: Sprite;\n    protected crownTier7!: Sprite;\n\n    public constructor(protected game: Game) {\n        this.map = game.map;\n        this.camera = game.camera;\n\n        this.tileSize = game.map.tileSize;\n        this.actualTileSize = this.tileSize * this.camera.zoomFactor;\n\n        // Load the sizes of the canvases\n        this.loadSizes();\n\n        // Load the static sprites\n        this.loadStaticSprites();\n\n        // Event listeners for zooming in and out\n        this.zoomIn.addEventListener('click', () => this.game.zoom(0.2));\n        this.zoomOut.addEventListener('click', () => this.game.zoom(-0.2));\n    }\n\n    /**\n     * Superclass implementation for the WebGL renderer. We start loading\n     * textures after the map has completed loading the tilesets.\n     */\n\n    public load(): void {\n        //\n    }\n\n    /**\n     * The screen width/height are calculated according to the dimensions\n     * obtained from the camera. The canvas sizes are calculated according\n     * to the screen width and height with the zoom factor applied. After\n     * calculating the canvas size, we apply that onto each of the canvases.\n     */\n\n    private loadSizes(): void {\n        // Actual tile size is the tile size times the zoom factor.\n        this.actualTileSize = this.tileSize * this.camera.zoomFactor;\n\n        // Screen width in pixels is the amount of grid spaces times the tile size.\n        this.screenWidth = this.camera.gridWidth * this.tileSize;\n        this.screenHeight = this.camera.gridHeight * this.tileSize;\n\n        // Canvas width is the screen width multiplied by the zoom factor.\n        this.canvasWidth = this.screenWidth * this.camera.zoomFactor;\n        this.canvasHeight = this.screenHeight * this.camera.zoomFactor;\n\n        // Update the dark mask sizes\n        this.darkMask.compute(this.canvasWidth, this.canvasHeight);\n\n        // Iterate through the canvases and apply the new size.\n        this.forEachCanvas((canvas: HTMLCanvasElement) => {\n            canvas.width = this.canvasWidth;\n            canvas.height = this.canvasHeight;\n        });\n    }\n\n    /**\n     * Loads statically used sprites that are only necessary\n     * in the renderer. The shadow gets displayed under each\n     * entity, and the sparks are displayed around items.\n     */\n\n    public loadStaticSprites(): void {\n        this.shadowSprite = this.game.sprites.get('shadow16')!;\n\n        if (!this.shadowSprite.loaded) this.shadowSprite.load();\n\n        this.sparksSprite = this.game.sprites.get('sparks')!;\n\n        if (!this.sparksSprite.loaded) this.sparksSprite.load();\n\n        this.silverMedal = this.game.sprites.get('silvermedal')!;\n\n        if (!this.silverMedal.loaded) this.silverMedal.load();\n\n        this.goldMedal = this.game.sprites.get('goldmedal')!;\n\n        if (!this.goldMedal.loaded) this.goldMedal.load();\n\n        this.crownArtist = this.game.sprites.get('crown-artist')!;\n\n        if (!this.crownArtist.loaded) this.crownArtist.load();\n\n        this.crownTier1 = this.game.sprites.get('crown-tier1')!;\n\n        if (!this.crownTier1.loaded) this.crownTier1.load();\n\n        this.crownTier2 = this.game.sprites.get('crown-tier2')!;\n\n        if (!this.crownTier2.loaded) this.crownTier2.load();\n\n        this.crownTier3 = this.game.sprites.get('crown-tier3')!;\n\n        if (!this.crownTier3.loaded) this.crownTier3.load();\n\n        this.crownTier4 = this.game.sprites.get('crown-tier4')!;\n\n        if (!this.crownTier4.loaded) this.crownTier4.load();\n\n        this.crownTier5 = this.game.sprites.get('crown-tier5')!;\n\n        if (!this.crownTier5.loaded) this.crownTier5.load();\n\n        this.crownTier6 = this.game.sprites.get('crown-tier6')!;\n\n        if (!this.crownTier6.loaded) this.crownTier6.load();\n\n        this.crownTier7 = this.game.sprites.get('crown-tier7')!;\n\n        if (!this.crownTier7.loaded) this.crownTier7.load();\n    }\n\n    /**\n     * Prepares the renderer for screen resizing. This is automatically\n     * called through a HTML5 callback for when the screen undergoes a change.\n     * We recalculate all the dimensions and positions of the canvas elements.\n     * We also request that all cells are redrawn by clearing the cache.\n     */\n\n    public resize(): void {\n        // Always check if we are on mobile on resizing.\n        this.mobile = isMobile();\n\n        // Update camera grid width and height.\n        this.camera.update();\n\n        // Update the camera minimum zoom limits.\n        this.camera.updateMinimumZoom(this.mobile);\n\n        // Recalculate canvas sizes.\n        this.loadSizes();\n\n        // Re-calculate visible animated tiles.\n        this.updateAnimatedTiles();\n\n        // Dimensions may mess with centration, so we force it.\n        this.camera.centreOn(this.game.player);\n\n        // Prevents blank screen flickers when resizing.\n        this.forceRendering = true;\n\n        // Cursor may get stuck on when resizing from desktop to mobile proportions.\n        this.clearScreen(this.cursorContext);\n    }\n\n    /**\n     * Rendering function is implemented by each subclass implementation of the\n     * renderer class. This is called by the game loop to render the game.\n     */\n\n    public render(): void {\n        this.clear();\n        this.save();\n\n        this.removeSmoothing();\n\n        this.drawDebugging();\n\n        this.drawOverlays();\n\n        this.drawHoveringCell();\n\n        this.drawSelectedCell();\n\n        this.drawEntities();\n\n        this.drawInfos();\n\n        this.drawCursor();\n\n        this.drawMinigameGUI();\n\n        this.restore();\n    }\n\n    // -------------- Drawing Functions --------------\n\n    /**\n     * Draws the debugging menu when the global variable\n     * `debugging` is set to true.\n     */\n\n    private drawDebugging(): void {\n        if (!this.debugging) return;\n\n        this.drawFPS();\n        this.drawPathing();\n\n        if (this.mobile) return;\n\n        // No need to debug this on mobile.\n        this.drawPosition();\n        this.drawCollisions();\n    }\n\n    /**\n     * Overlays are images drawn on top of the game. They are generally\n     * used in conjunction with the lighting system to give a shadow\n     * effect or dark room effect. When overlays are present, the light\n     * system is enabled.\n     */\n\n    private drawOverlays(): void {\n        // Overlay image cold not be found.\n        if (!this.game.overlays.hasOverlay()) return;\n\n        let image = this.game.overlays.get();\n\n        // Draw only if there is an overlay image.\n        if (image) this.overlayContext.drawImage(image, 0, 0, this.canvasWidth, this.canvasHeight);\n\n        this.overlayContext.globalCompositeOperation = 'lighter';\n\n        // Draw each lighting\n        this.forEachLighting((lighting) => {\n            if (this.inRadius(lighting)) this.drawLighting(lighting);\n        });\n\n        // Essentially makes the overlay be drawn on top of everything.\n        this.overlayContext.globalCompositeOperation = 'source-over';\n        this.darkMask.render(this.overlayContext);\n    }\n\n    /**\n     * Draws the currently highlighted tile cell that the mouse\n     * is hovering over. This is feedback to the player so they\n     * know what cell will be selected.\n     */\n\n    private drawHoveringCell(): void {\n        if (this.mobile) return;\n\n        let { input } = this.game,\n            location = input.getCoords();\n\n        if (this.isSelectedCell(location.gridX, location.gridY)) return;\n\n        let isColliding = this.map.isColliding(location.gridX, location.gridY);\n\n        this.drawCellHighlight(\n            location.gridX,\n            location.gridY,\n            isColliding ? 'rgba(230, 0, 0, 0.7)' : input.targetColour\n        );\n    }\n\n    /**\n     * Highlights a cell at the selected x and y grid\n     * coordinates. This is the green or red spinning\n     * target animation.\n     */\n\n    private drawSelectedCell(): void {\n        if (!this.game.input.selectedCellVisible || this.game.input.keyMovement) return;\n\n        // let posX = this.game.input.selectedX,\n        //     posY = this.game.input.selectedY,\n        let targetData = this.game.input.getTargetData(); // target data\n\n        if (targetData) {\n            this.entitiesContext.save();\n            this.setCameraView(this.entitiesContext);\n\n            this.entitiesContext.drawImage(\n                targetData.sprite.image,\n                targetData.x,\n                targetData.y,\n                targetData.width,\n                targetData.height,\n                targetData.dx,\n                targetData.dy,\n                targetData.dw,\n                targetData.dh\n            );\n\n            this.entitiesContext.restore();\n        }\n    }\n\n    /**\n     * Iterates through all the visible entities and\n     * draws them.\n     */\n\n    private drawEntities(): void {\n        // Stop drawing entities when dead.\n        if (this.game.player.dead) return;\n\n        this.setCameraView(this.entitiesContext);\n\n        this.forEachVisibleEntity((entity: Entity) => {\n            // Skip entities that aren't properly loaded or are invisible.\n            if (!entity.sprite?.loaded || !entity.animation || !entity.isVisible()) return;\n\n            this.drawEntity(entity);\n        });\n    }\n\n    /**\n     * Infos are drawn when a player is in combat and the hitsplat\n     * displays on top of it or the targeted entity. They are also\n     * used for healing, exp gain, and poison. These are floating\n     * pieces of text that slowly fade as time passes.\n     */\n\n    private drawInfos(): void {\n        if (this.game.info.isEmpty()) return;\n\n        this.game.info.forEachInfo((info: Splat) => {\n            this.textContext.save();\n            this.setCameraView(this.textContext);\n            this.textContext.globalAlpha = info.opacity;\n            this.drawText(\n                `${info.getText()}`,\n                Math.floor(info.x + 8),\n                Math.floor(info.y),\n                true,\n                info.fill,\n                info.stroke,\n                26\n            );\n            this.textContext.restore();\n        });\n    }\n\n    /**\n     * Draws the cursor at the coordinates extracted from the input\n     * controller. The mouse coordinates represent the absolute position\n     *  on the screen, not the position relative to the camera.\n     */\n\n    private drawCursor(): void {\n        if (this.tablet || this.mobile || this.game.input.isMouseRendered()) return;\n\n        let { cursor, mouse } = this.game.input;\n\n        if (!cursor || !mouse) return;\n\n        // Prepare the context for drawing.\n        this.clearScreen(this.cursorContext);\n        this.cursorContext.save();\n\n        if (cursor.loaded)\n            this.cursorContext.drawImage(\n                cursor.image,\n                0,\n                0,\n                this.tileSize,\n                this.tileSize,\n                mouse.x,\n                mouse.y,\n                this.actualTileSize,\n                this.actualTileSize\n            );\n        // Load the mouse if it doesn't exist.\n        else cursor.load();\n\n        this.cursorContext.restore();\n\n        this.game.input.saveMouse();\n    }\n\n    /**\n     * Calculates the FPS and draws it on the top-left of the screen.\n     */\n\n    private drawFPS(): void {\n        this.calculateFPS();\n        this.drawText(`FPS: ${this.fps}`, 10, 61, false, 'white');\n    }\n\n    /**\n     * Calculates the number of frames that have accrued\n     * in one second. We compare the current epoch against\n     * the last recorded epoch and measure the amount of\n     * frames that pass within a 1 second difference.\n     */\n\n    private calculateFPS(): void {\n        let currentTime = Date.now(),\n            timeDiff = currentTime - this.time;\n\n        // Reset frame count every 1 second and store that as fps.\n        if (timeDiff >= 1000) {\n            this.fps = this.frameCount;\n            this.frameCount = 0;\n            this.time = currentTime;\n        }\n\n        // Increment the frame count.\n        this.frameCount++;\n    }\n\n    /**\n     * Draws debugging inforamtion such as the current grid coordinate,\n     * as well as the index of that coordinate. If the player is hovering\n     * over an entity, it displays that entity's coordinates and indexes\n     * as well as their instance and attack range (if present).\n     */\n\n    private drawPosition(): void {\n        let { player, input } = this.game;\n\n        // Draw our current player's grid coordinates and tile index.\n        this.drawText(\n            `x: ${player.gridX} y: ${player.gridY} tileIndex: ${this.map.coordToIndex(\n                player.gridX,\n                player.gridY\n            )} movementSpeed: ${player.movementSpeed}`,\n            10,\n            81,\n            false,\n            'white'\n        );\n\n        this.drawText(`zoomFactor: ${this.camera.zoomFactor}`, 10, 141, false, 'white');\n\n        // Draw information about the entity we're hovering over.\n        if (input.hovering && input.entity) {\n            // Draw the entity's grid coordinates and tile index.\n            this.drawText(\n                `x: ${input.entity.gridX} y: ${input.entity.gridY} instance: ${input.entity.instance}`,\n                10,\n                101,\n                false,\n                'white'\n            );\n\n            // Draw the entity's attack range.\n            if (input.entity.attackRange)\n                this.drawText(`att range: ${input.entity.attackRange}`, 10, 121, false, 'white');\n        }\n    }\n\n    /**\n     * Draws a highlight around every tile cell that is colliding.\n     */\n\n    private drawCollisions(): void {\n        /**\n         * Iterate through each visible position within boundaries of the map\n         * and determine if the tile is within the map's collision grid.\n         */\n\n        this.camera.forEachVisiblePosition((x, y) => {\n            if (this.map.isOutOfBounds(x, y)) return;\n\n            // Only draw tiles in the collision grid that are marked as colliding.\n            if (this.map.grid[y][x] !== 0) this.drawCellHighlight(x, y, 'rgba(50, 50, 255, 0.5)');\n        });\n    }\n\n    /**\n     * Draws the currently calculated path that the player will\n     * be taking. Highlights the upcoming tile cells in the path.\n     */\n\n    private drawPathing(): void {\n        if (!this.game.player.hasPath()) return;\n\n        for (let path of this.game.player.path!)\n            this.drawCellHighlight(path[0], path[1], 'rgba(50, 255, 50, 0.5)');\n    }\n\n    /**\n     * Renders an entity according to the grid position, and zoom factor.\n     * @param entity The entity we are drawing.\n     */\n\n    private drawEntity(entity: Entity): void {\n        let frame = entity.animation?.frame,\n            dx = entity.x * this.camera.zoomFactor,\n            dy = entity.y * this.camera.zoomFactor,\n            flipX = dx + this.actualTileSize,\n            flipY = dy + entity.sprite.height;\n\n        this.entitiesContext.save();\n\n        if (entity.angled && !entity.isProjectile()) entity.angle *= Math.PI / 180;\n\n        // Update the entity fading onto the context.\n        if (entity.fading) this.entitiesContext.globalAlpha = entity.fadingAlpha;\n\n        // Handle flipping since we use the same sprite for right/left.\n        if (entity.spriteFlipX) {\n            this.entitiesContext.translate(flipX, dy);\n            this.entitiesContext.scale(-1, 1);\n        } else if (entity.spriteFlipY) {\n            this.entitiesContext.translate(dx, flipY);\n            this.entitiesContext.scale(1, -1);\n        } else this.entitiesContext.translate(dx, dy);\n\n        // Scale the entity to the current zoom factor.\n        this.entitiesContext.scale(this.camera.zoomFactor, this.camera.zoomFactor);\n\n        // Scale the entity again if it has a custom scaling associated with it.\n        if (entity.customScale) this.entitiesContext.scale(entity.customScale, entity.customScale);\n\n        // Rotate using the entity's angle.\n        if (entity.angled) this.entitiesContext.rotate(entity.getAngle());\n\n        // Draw the entity shadowf\n        if (entity.hasShadow()) {\n            this.entitiesContext.globalCompositeOperation = 'source-over';\n\n            this.entitiesContext.drawImage(\n                this.shadowSprite.image,\n                0,\n                0,\n                this.shadowSprite.width,\n                this.shadowSprite.height,\n                0,\n                entity.shadowOffsetY,\n                this.shadowSprite.width,\n                this.shadowSprite.height\n            );\n        }\n\n        this.entitiesContext.drawImage(\n            entity.sprite.image,\n            frame!.x,\n            frame!.y,\n            entity.sprite.width,\n            entity.sprite.height,\n            entity.sprite.offsetX,\n            entity.sprite.offsetY,\n            entity.sprite.width,\n            entity.sprite.height\n        );\n\n        this.drawEntityFore(entity);\n\n        this.entitiesContext.restore();\n\n        this.drawHealth(entity as Character);\n\n        if (!this.game.overlays.hasOverlay()) this.drawName(entity as Player & Item);\n    }\n\n    /**\n     * This function is responsible for drawing special effects\n     * on top of the entity (after rendering). It will primarily\n     * be used for the paper-doll effect of drawing weapon and\n     * armour sprites on top of the player characters.\n     */\n\n    private drawEntityFore(entity: Entity): void {\n        if (entity.isItem()) return this.drawSparks();\n\n        if (!(entity instanceof Character)) return;\n\n        if (entity.isPlayer()) this.drawWeapon(entity as Player);\n        if (entity.hasActiveEffect()) this.drawEffects(entity);\n    }\n\n    /**\n     * Draws the weapon sprite on top of the player entity. We skip\n     * this function if there is no weapon, the player is dead, or\n     * they are teleporting.\n     * @param player The player we are drawing the weapon for.\n     */\n\n    private drawWeapon(player: Player): void {\n        if (!player.hasWeapon() || player.dead || player.teleporting) return;\n\n        let weapon = this.game.sprites.get(player.getWeaponSpriteName());\n\n        if (!weapon) return;\n\n        if (!weapon.loaded) weapon.load();\n\n        let animation = player.animation!,\n            weaponAnimations = weapon.animations[animation.name];\n\n        if (!weaponAnimations) return;\n\n        let { frame, row } = animation,\n            index =\n                frame.index < weaponAnimations.length\n                    ? frame.index\n                    : frame.index % weaponAnimations.length,\n            weaponX = weapon.width * index,\n            weaponY = weapon.height * row,\n            weaponWidth = weapon.width,\n            weaponHeight = weapon.height;\n\n        this.entitiesContext.drawImage(\n            weapon.image,\n            weaponX,\n            weaponY,\n            weaponWidth,\n            weaponHeight,\n            weapon.offsetX,\n            weapon.offsetY,\n            weaponWidth,\n            weaponHeight\n        );\n    }\n\n    /**\n     * Goes through all the status effects and draws them on top of the character.\n     * @param character The character we are drawing the effect of.\n     */\n\n    private drawEffects(character: Character): void {\n        for (let key of character.statusEffects) {\n            // Do not draw the freezing effect if the character has a snow potion effect.\n            if (key === Modules.Effects.Freezing && character.hasEffect(Modules.Effects.SnowPotion))\n                continue;\n\n            // Do not draw the burning effect if the character has a fire potion effect.\n            if (key === Modules.Effects.Burning && character.hasEffect(Modules.Effects.FirePotion))\n                continue;\n\n            let effect = character.getEffect(key);\n\n            if (!effect) continue;\n\n            let sprite = this.game.sprites.get(effect.key);\n\n            if (!sprite.loaded) sprite.load();\n\n            let { animation } = effect,\n                { index } = animation.frame,\n                x = sprite.width * index,\n                y = sprite.height * animation.row;\n\n            this.entitiesContext.drawImage(\n                sprite.image,\n                x,\n                y,\n                sprite.width,\n                sprite.height,\n                sprite.offsetX,\n                sprite.offsetY,\n                sprite.width,\n                sprite.height\n            );\n\n            animation.update(this.game.time);\n        }\n    }\n\n    /**\n     * Draws the sprites sparks on top of items\n     * to give them the sparkle effect.\n     */\n\n    private drawSparks(): void {\n        let { sparksAnimation } = this.game.entities.sprites,\n            sparksFrame = sparksAnimation.frame;\n\n        this.entitiesContext.drawImage(\n            this.sparksSprite.image,\n            this.sparksSprite.width * sparksFrame.index,\n            this.sparksSprite.height * sparksAnimation.row,\n            this.sparksSprite.width,\n            this.sparksSprite.height,\n            0,\n            0,\n            this.sparksSprite.width,\n            this.sparksSprite.height\n        );\n    }\n\n    /**\n     * Draws a special medal above the player's name.\n     * @param key The key of the medal we are drawing.\n     * @param x The x coordinate on the screen we are drawing at.\n     * @param y The y coordinate on the screen we are drawing at.\n     */\n\n    private drawMedal(key: string, x: number, y: number): void {\n        let medal = this.getMedal(key);\n\n        if (!medal) return;\n\n        this.textContext.drawImage(\n            medal.image,\n            0,\n            0,\n            medal.width,\n            medal.height,\n            (x - 5) * this.camera.zoomFactor,\n            (y - 17) * this.camera.zoomFactor,\n            medal.width * 2,\n            medal.height * 2\n        );\n    }\n\n    /**\n     * Draws the health bar above the entity character provided.\n     * @param entity The character we are drawing the health bar for.\n     */\n\n    private drawHealth(entity: Character): void {\n        if (!entity.hitPoints || entity.hitPoints < 0 || !entity.healthBarVisible) return;\n\n        let barLength = this.tileSize,\n            healthX = entity.x * this.camera.zoomFactor - barLength / 2 + 8,\n            healthY = (entity.y - entity.sprite.height / 4) * this.camera.zoomFactor,\n            healthWidth = Math.round(\n                (entity.hitPoints / entity.maxHitPoints) * barLength * this.camera.zoomFactor\n            ),\n            healthHeight = 2 * this.camera.zoomFactor;\n\n        this.textContext.save();\n        this.setCameraView(this.textContext);\n        this.textContext.strokeStyle = 'rbga(0, 0, 0, 1)';\n        this.textContext.lineWidth = 1;\n        this.textContext.strokeRect(\n            healthX,\n            healthY,\n            barLength * this.camera.zoomFactor,\n            healthHeight\n        );\n        this.textContext.fillStyle = 'rgba(253, 0, 0, 1)';\n        this.textContext.fillRect(healthX, healthY, healthWidth, healthHeight);\n        this.textContext.restore();\n    }\n\n    /**\n     * Draws an itme name for a player or item entity.\n     * @param entity The entity we're drawing the name for.\n     */\n\n    private drawName(entity: Player & Item): void {\n        if (\n            entity.hidden ||\n            entity.healthBarVisible ||\n            !entity.level ||\n            !entity.drawNames() ||\n            (!this.drawNames && !this.drawLevels)\n        )\n            return;\n\n        let colour = entity.wanted ? 'red' : 'white';\n\n        // If entity has any rank aside from default then we use their colour.\n        if (entity.rank !== Modules.Ranks.None) colour = Modules.RankColours[entity.rank];\n\n        // Draw the yellow name above the entity if it's the same entity as our current player.\n        if (entity.instance === this.game.player.instance) colour = 'rgba(252,218,92, 1)';\n\n        if (entity.nameColour) colour = entity.nameColour;\n\n        this.textContext.save();\n        this.setCameraView(this.textContext);\n        this.textContext.font = '11px AdvoCut';\n\n        if (entity.hasCounter) {\n            // TODO - Move this countdown elsewhere.\n            if (this.game.time - entity.countdownTime > 1000) {\n                entity.countdownTime = this.game.time;\n                entity.counter--;\n            }\n\n            if (entity.counter <= 0) entity.hasCounter = false;\n\n            this.drawText(entity.counter.toString(), entity.x + 8, entity.y - 10, true, colour);\n        } else {\n            let x = entity.x + 8,\n                y = entity.y - Math.floor(entity.sprite.height / 5);\n\n            if (this.drawNames && entity instanceof Character) {\n                let nameY = this.drawLevels && !entity.isNPC() ? y - 7 : y - 4;\n\n                this.drawText(entity.name, x, nameY, true, colour, 'rbga(0, 0, 0, 1)');\n\n                // Draw the medal if the entity has one.\n                if (entity.hasMedal()) this.drawMedal(entity.getMedalKey(), x, nameY);\n            }\n\n            if (this.drawLevels && (entity.isMob() || entity.isPlayer()))\n                this.drawText(`Level ${entity.level}`, x, y, true, colour, 'rbga(0, 0, 0, 1)');\n\n            if (entity.isItem() && entity.count > 1)\n                this.drawText(entity.count.toString(), x, y, true, colour);\n        }\n\n        this.textContext.restore();\n    }\n\n    private drawMinigameGUI(): void {\n        if (!this.game.minigame.exists()) return;\n\n        switch (this.game.minigame.status) {\n            case 'lobby': {\n                this.drawText(\n                    this.game.minigame.started\n                        ? `There is a game in progress: ${this.game.minigame.countdown} seconds`\n                        : `Game starts in ${this.game.minigame.countdown} seconds`,\n                    this.textCanvas.width / 6,\n                    30,\n                    true,\n                    'white'\n                );\n                return;\n            }\n\n            case 'ingame': {\n                this.drawText(\n                    `Red: ${this.game.minigame.redTeamScore}`,\n                    this.textCanvas.width / 6 - 20,\n                    30,\n                    true,\n                    'red'\n                );\n\n                this.drawText(\n                    `Blue: ${this.game.minigame.blueTeamScore}`,\n                    this.textCanvas.width / 6 + 20,\n                    30,\n                    true,\n                    'blue'\n                );\n\n                this.drawText(\n                    `Time left: ${this.game.minigame.countdown} seconds`,\n                    this.textCanvas.width / 6,\n                    50,\n                    true,\n                    'white'\n                );\n\n                return;\n            }\n        }\n    }\n\n    protected drawLighting(lighting: RendererLighting): void {\n        if (lighting.relative) {\n            let lightX =\n                    (lighting.light.origX - this.camera.x / this.tileSize) * this.actualTileSize,\n                lightY =\n                    (lighting.light.origY - this.camera.y / this.tileSize) * this.actualTileSize;\n\n            lighting.light.position = new Vec2(lightX, lightY);\n            lighting.compute(this.canvasWidth, this.canvasHeight);\n            this.darkMask.compute(this.canvasWidth, this.canvasHeight);\n        } else if (!lighting.computed) {\n            lighting.compute(this.canvasWidth, this.canvasHeight);\n            lighting.computed = true;\n        }\n\n        lighting.render(this.overlayContext);\n    }\n\n    // -------------- Drawing Methods --------------\n\n    /**\n     * Draws a highlight about a cell.\n     * @param x The x grid coordinate of the cell.\n     * @param y The y grid coordinate of the cell.\n     * @param colour The colour in rgba format.\n     */\n\n    private drawCellHighlight(x: number, y: number, colour: string): void {\n        this.drawCellRect(x * this.actualTileSize, y * this.actualTileSize, colour);\n    }\n\n    /**\n     * Drawns a cell rectangle at a specified position (relative to the zooming.).\n     * @param x The x coordinate of the cell.\n     * @param y The y coordinate of the cell.\n     * @param colour The colour in rgba format.\n     */\n\n    private drawCellRect(x: number, y: number, colour: string): void {\n        this.entitiesContext.save();\n        this.setCameraView(this.entitiesContext);\n\n        this.entitiesContext.lineWidth = 2 * this.camera.zoomFactor;\n\n        this.entitiesContext.translate(x + 4, y + 2);\n\n        this.entitiesContext.strokeStyle = colour;\n        this.entitiesContext.strokeRect(0, 0, this.actualTileSize - 8, this.actualTileSize - 8);\n\n        this.entitiesContext.restore();\n    }\n\n    /**\n     * Draws text at a specified position (relative to the zooming.).\n     * @param text The string text to draw.\n     * @param x The x coordinate of the text.\n     * @param y The y coordinate of the text.\n     * @param centered Whether or not we want the text to be centered.\n     * @param colour The colour of the text in rgba format.\n     * @param strokeColour The colour of the stroke in rgba format.\n     * @param fontSize (Optional) The font size of the text.\n     */\n\n    private drawText(\n        text: string,\n        x: number,\n        y: number,\n        centered: boolean,\n        colour: string,\n        strokeColour?: string,\n        fontSize: number = this.fontSize\n    ): void {\n        let strokeSize = 3,\n            context = this.textContext;\n\n        context.save();\n\n        if (centered) context.textAlign = 'center';\n\n        // Decrease font size relative to zoom out.\n        fontSize += this.camera.zoomFactor * 2;\n\n        context.strokeStyle = strokeColour || 'rgba(55, 55, 55, 1)';\n        context.lineWidth = strokeSize;\n        context.font = `${fontSize}px AdvoCut`;\n        context.strokeText(text, x * this.camera.zoomFactor, y * this.camera.zoomFactor);\n        context.fillStyle = colour || 'white';\n        context.fillText(text, x * this.camera.zoomFactor, y * this.camera.zoomFactor);\n\n        context.restore();\n    }\n\n    // -------------- Light Management --------------\n\n    /**\n     * Calculates the dark mask effect for the overlay.\n     * @param color What colour we want the overlay to have, generally this is\n     * a black rgb(0,0,0) with an alpha to give the effect of darkness.\n     */\n\n    public updateDarkMask(color = 'rgba(0, 0, 0, 0.5)'): void {\n        this.darkMask.color = color;\n        this.darkMask.compute(this.canvasWidth, this.canvasHeight);\n    }\n\n    /**\n     * Adds a new light to the rendering screen.\n     * @param info Contains information about the light we are adding.\n     */\n\n    public addLight(info: SerializedLight): void {\n        let light = new Lamp(\n                this.getLightData(info.x, info.y, info.distance, info.diffuse, info.colour)\n            ) as RendererLamp,\n            lighting = new Lighting({\n                light\n                // diffuse: light.diffuse\n            }) as RendererLighting;\n\n        light.origX = light.position.x;\n        light.origY = light.position.y;\n\n        light.diff = Math.round(light.distance / this.tileSize);\n\n        if (this.hasLighting(lighting)) return;\n\n        lighting.relative = true;\n\n        this.lightings.push(lighting);\n        this.darkMask.lights.push(light);\n\n        this.drawLighting(lighting);\n        this.darkMask.compute(this.canvasWidth, this.canvasHeight);\n    }\n\n    public removeAllLights(): void {\n        this.lightings = [];\n        this.darkMask.lights = [];\n\n        this.darkMask.compute(this.canvasWidth, this.canvasHeight);\n    }\n\n    public removeNonRelativeLights(): void {\n        for (let i in this.lightings)\n            if (!this.lightings[i].light.relative) {\n                let index = parseInt(i);\n\n                this.lightings.splice(index, 1);\n                this.darkMask.lights.splice(index, 1);\n            }\n\n        this.darkMask.compute(this.canvasWidth, this.canvasHeight);\n    }\n\n    private hasLighting(lighting: RendererLighting): boolean {\n        for (let { light } of this.lightings)\n            if (\n                lighting.light.origX === light.origX &&\n                lighting.light.origY === light.origY &&\n                lighting.light.distance === light.distance\n            )\n                return true;\n\n        return false;\n    }\n\n    // -------------- Context Management --------------\n\n    /**\n     * Image smoothing is automatically applied to a 2D\n     * rendering canvas. We must manually disable it for\n     * each time we draw onto the context.\n     */\n\n    private removeSmoothing(): void {\n        this.forAllContexts((context) => {\n            context.imageSmoothingQuality = 'low';\n            context.imageSmoothingEnabled = false;\n        });\n    }\n\n    /**\n     * Iterates through each context and clears the entire frame.\n     */\n\n    private clear(): void {\n        this.forEachContext(this.clearScreen);\n    }\n\n    /**\n     * Clears the screen given a specified context.\n     * @param context The context that we want to clear the contents of.\n     */\n\n    protected clearScreen(context: CanvasRenderingContext2D): void {\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n    }\n\n    /**\n     * Iterates through each context and saves the current state.\n     */\n\n    private save(): void {\n        this.forEachContext((context: CanvasRenderingContext2D) => context.save());\n    }\n\n    /**\n     * Restores all contexts to their previous values (to when we last saved).\n     */\n\n    private restore(): void {\n        this.forEachContext((context: CanvasRenderingContext2D) => context.restore());\n    }\n\n    // -------------- Setters --------------\n\n    /**\n     * Changes the brightness at a canvas style level for each canvas available.\n     * @param level The level of the brightness.\n     */\n\n    public setBrightness(level: number): void {\n        if (level < 0 || level > 100) return;\n\n        this.forEachCanvas((canvas: HTMLCanvasElement) => {\n            canvas.style.background = `rgba(0,0,0,${0.25 - level / 200})`;\n        });\n    }\n\n    /**\n     * Synchronizes the camera view onto the a specified context. This translates\n     * the context relative to where the camera is currently positioned.\n     * @param context The context that we are setting the camera view for.\n     */\n\n    protected setCameraView(context: CanvasRenderingContext2D): void {\n        // Stop if we are not rendering or if there is no camera.\n        if (!this.camera || this.stopRendering) return;\n\n        context.translate(\n            -this.camera.x * this.camera.zoomFactor,\n            -this.camera.y * this.camera.zoomFactor\n        );\n    }\n\n    // -------------- Getters and Checkers --------------\n\n    protected getX(index: number, width: number): number {\n        if (index === 0) return 0;\n\n        return index % width === 0 ? width - 1 : (index % width) - 1;\n    }\n\n    /**\n     * Checks whether a light source is in the radius of the camera.\n     * @param lighting The light source we are checking for.\n     * @returns Whether or not the light source is in the camera radius.\n     */\n\n    private inRadius(lighting: RendererLighting): boolean {\n        let position = {\n            x: lighting.light.origX,\n            y: lighting.light.origY,\n            diff: lighting.light.diff\n        };\n\n        return (\n            position.x > this.camera.gridX - position.diff &&\n            position.x < this.camera.gridX + this.camera.gridWidth + position.diff &&\n            position.y > this.camera.gridY - position.diff &&\n            position.y < this.camera.gridY + this.camera.gridHeight + position.diff\n        );\n    }\n\n    /**\n     * A flipped tile is any tile that contains a flip\n     * flag or transpose flag.\n     * @param tileInfo Tile data received from the server.\n     * @returns Whether or not the tile contains and flip flags.\n     */\n\n    protected isFlipped(tileInfo: RotatedTile): boolean {\n        if (!tileInfo) return false;\n\n        return tileInfo.v || tileInfo.h || tileInfo.d;\n    }\n\n    /**\n     * Low power mode is activated when both the camera centration and\n     * animated tiles are turned off. This is for devices that cannot\n     * sustain the constant re-drawing of the frame every second.\n     */\n\n    protected isLowPowerMode(): boolean {\n        return !this.camera.isCentered() && !this.animateTiles;\n    }\n\n    /**\n     * Checks if the currently request coordinates are that of a cell\n     * that was already selected (has the animation onto it). We want\n     * to prevent drawing a target cell onto a cell that's being selected.\n     * @param x The x grid coordinate we are checking.\n     * @param y The y grid coordinate we are checking.\n     * @returns Whether the x and y coordinates are the same as the input\n     * selected x and y coordinates.\n     */\n\n    private isSelectedCell(x: number, y: number): boolean {\n        return this.game.input.selectedX === x && this.game.input.selectedY === y;\n    }\n\n    /**\n     * Given a key we return the sprite associated with the medal.\n     * @param key The key of the medal.\n     * @returns A sprite element or undefined if the key is invalid.\n     */\n\n    protected getMedal(key: string): Sprite | undefined {\n        switch (key) {\n            case 'goldmedal': {\n                return this.goldMedal;\n            }\n\n            case 'silvermedal': {\n                return this.silverMedal;\n            }\n\n            case 'crown-artist': {\n                return this.crownArtist;\n            }\n\n            case 'crown-tier1': {\n                return this.crownTier1;\n            }\n\n            case 'crown-tier2': {\n                return this.crownTier2;\n            }\n\n            case 'crown-tier3': {\n                return this.crownTier3;\n            }\n\n            case 'crown-tier4': {\n                return this.crownTier4;\n            }\n\n            case 'crown-tier5': {\n                return this.crownTier5;\n            }\n\n            case 'crown-tier6': {\n                return this.crownTier6;\n            }\n\n            case 'crown-tier7': {\n                return this.crownTier7;\n            }\n        }\n    }\n\n    /**\n     * Creates a partial lamp object given the specified data.\n     * @param x The x grid position of the light.\n     * @param y The y grid position of the light.\n     * @param distance How far the light can reach.\n     * @param diffuse How much the light can diffuse.\n     * @param color The color of the light.\n     * @returns A partial lamp object.\n     */\n\n    private getLightData(\n        x: number,\n        y: number,\n        distance: number,\n        diffuse: number,\n        color: string\n    ): Partial<Lamp> {\n        return {\n            position: new Vec2(x, y),\n            distance,\n            diffuse,\n            color,\n            radius: 0,\n            samples: 2,\n            roughness: 0,\n            angle: 0\n        };\n    }\n\n    // -------------- Update functions --------------\n\n    /**\n     * Used for synchronization of all animated tiles when the player\n     * stops moving or every couple of steps.\n     */\n\n    public resetAnimatedTiles(): void {\n        // Reset the animation frame index for each animated tile.\n        for (let tile in this.animatedTiles) this.animatedTiles[tile].animationIndex = 0;\n    }\n\n    /**\n     * Iterates through all the currently visible tiles and appends tiles\n     * that are animated to our list of animated tiles. This function ensures\n     * that animated tiles are initialzied only once and stored for the\n     * duration of the client's session.\n     */\n\n    public updateAnimatedTiles(): void {\n        if (!this.animateTiles) return;\n\n        this.forEachVisibleTile((tile: RegionTile, index: number) => {\n            let isFlipped = this.isFlipped(tile as RotatedTile);\n\n            if (isFlipped) tile = (tile as RotatedTile).tileId;\n\n            /**\n             * We don't want to reinitialize animated tiles that already exist\n             * and are within the visible camera proportions. This way we can parse\n             * it every time the tile moves slightly.\n             */\n\n            if (!this.map.isAnimatedTile(tile as number)) return;\n\n            /**\n             * Push the pre-existing tiles.\n             */\n\n            if (!(index in this.animatedTiles))\n                this.animatedTiles[index] = new Tile(\n                    tile as number,\n                    index,\n                    this.map.getTileAnimation(tile as number),\n                    isFlipped\n                );\n        }, 2);\n    }\n\n    /**\n     * Superclass implementation for updating the tile at a specified\n     * index. This is implemented by the WebGL renderer to update the\n     * tile in the buffer.\n     * @param index The index at which to update the tile.\n     * @param data The data with which to update the tile.\n     */\n\n    public setTile(index: number, data: RegionTile): void {\n        // unimplemented\n    }\n\n    /**\n     * Superclass implementation used by the WebGL renderer when we\n     * want to update the texture information. This is used for\n     * updating the tile layer texture for each layer.\n     */\n\n    public bindTileLayers(): void {\n        //\n    }\n\n    /**\n     * Iterates through each of the animated tiles.\n     * @param callback Returns the tile object for that animated tile.\n     */\n\n    protected forEachAnimatedTile(callback: (tile: Tile) => void): void {\n        for (let tile in this.animatedTiles) callback(this.animatedTiles[tile]);\n    }\n\n    /**\n     * Iterates through all the indexes in the current camera view. The offset\n     * is used to look `offset` amount of tiles outside the camera view.\n     * @param callback The current index that is being parsed in the view.\n     * @param offset How much to look outside the boundaries of the map.\n     */\n\n    protected forEachVisibleIndex(callback: (index: number) => void, offset?: number): void {\n        this.camera.forEachVisiblePosition((x, y) => {\n            if (!this.map.isOutOfBounds(x, y)) callback(this.map.coordToIndex(x, y));\n        }, offset);\n    }\n\n    /**\n     * Iterates through all the indexes and extracts the tile data at that\n     * specified index by iterating through each tile array (if present) or\n     * returning the tile data from the map.\n     * @param callback Returns a region tile object containing rendering information\n     * such as tileId, x, y, and flip flags. The index is the positioning in the map.\n     * @param offset How much to look outside the visible camera proportions.\n     */\n\n    protected forEachVisibleTile(\n        callback: (data: RegionTile, index: number) => void,\n        offset?: number\n    ): void {\n        if (!this.map?.mapLoaded) return;\n\n        this.forEachVisibleIndex((index) => {\n            let indexData = this.map.data[index];\n\n            if (Array.isArray(indexData)) for (let data of indexData) callback(data, index);\n            else if (this.map.data[index]) callback(this.map.data[index], index);\n        }, offset);\n    }\n\n    /**\n     * Iterates through each visible entity in the map boundaries and that\n     * is present on the rendering grid.\n     * @param callback The entity object currently being iterated.\n     */\n\n    protected forEachVisibleEntity(callback: (entity: Entity) => void): void {\n        let { grids } = this.game.entities;\n\n        this.camera.forEachVisiblePosition((x, y) => {\n            if (!this.map.isOutOfBounds(x, y) && grids.renderingGrid[y][x])\n                for (let entity of Object.values(grids.renderingGrid[y][x])) callback(entity);\n        });\n    }\n\n    /**\n     * Iterates through each light currently loaded.\n     * @param callback The light currently being iterated.\n     */\n\n    private forEachLighting(callback: (lighting: RendererLighting) => void): void {\n        for (let lighting in this.lightings) callback(this.lightings[lighting]);\n    }\n\n    /**\n     * Iterates through all of the canvases available. Generally used for\n     * updating dimensions.\n     * @param callback Canvas currently being iterated.\n     */\n\n    protected forEachCanvas(callback: (canvas: HTMLCanvasElement) => void): void {\n        for (let canvas in this.canvases) callback(this.canvases[canvas]);\n    }\n\n    /**\n     * Iterates through all of the drawing contexts available.\n     * We cast `CanvasRenderingContext2D` because this is the subclass implementation\n     * that will use those variants of the contexts.\n     * @param callback The context being iterated.\n     */\n\n    private forAllContexts(callback: ContextCallback): void {\n        for (let context in this.allContexts)\n            callback(this.allContexts[context] as CanvasRenderingContext2D);\n    }\n\n    /**\n     * Iterates through all of the contexts used for drawing mouse, entities, and text.\n     * @param callback The context being iterated.\n     */\n\n    private forEachContext(callback: ContextCallback): void {\n        for (let context in this.contexts)\n            callback(this.contexts[context] as CanvasRenderingContext2D);\n    }\n}\n","import ProgramData from './shader';\nimport Tileset from './tileset';\nimport Layer from './layer';\n\nimport Renderer from '../renderer';\nimport LayerVertex from '../shaders/layer.vert';\nimport LayerFragment from '../shaders/layer.frag';\n\nimport type Game from '../../game';\nimport type { RegionTile, RotatedTile } from '@kaetram/common/types/map';\n\n/**\n * Huge thanks to the developer of `gl-tiled` for the point of reference in\n * creating a WebGL 2D tilemap renderer.\n * GitHub Repository: https://github.com/englercj/gl-tiled\n */\n\ninterface BlendMode {\n    func: number[];\n    equation: number;\n}\n\nexport default class WebGL extends Renderer {\n    // Override for context types and use webgl\n    private backContext: WebGLRenderingContext = this.background.getContext('webgl')!;\n    private foreContext: WebGLRenderingContext = this.foreground.getContext('webgl')!;\n\n    // Drawing contexts, where we load tileset textures and draw the map.\n    private drawingContexts = [this.backContext, this.foreContext];\n\n    // Program data that contains the shader information for tiling.\n    private backShader!: ProgramData;\n    private foreShader!: ProgramData;\n\n    // Storage for tileset textures and layer information.\n    private tilesets: { [canvas: string]: Tileset } = {};\n    private layers: Layer[] = [];\n\n    // Vertices, indices, buffers...\n    private tilesetIndices: Int32Array = new Int32Array();\n    private tilesetTileSizeBuffer: Float32Array = new Float32Array();\n    private tilesetOffsetBuffer: Float32Array = new Float32Array();\n    private inverseTilesetTextureSizeBuffer: Float32Array = new Float32Array();\n\n    private inverseTileCount: Float32Array = new Float32Array(2);\n\n    private backQuadBuffer: WebGLBuffer = this.backContext.createBuffer()!;\n    private foreQuadBuffer: WebGLBuffer = this.foreContext.createBuffer()!;\n\n    private quadVertices = new Float32Array([\n        //x  y  u  v\n        // eslint-disable-next-line prettier/prettier\n        -1, -1, 0, 1,\n         1, -1, 1, 1,\n         1,  1, 1, 0,\n        -1, -1, 0, 1,\n         1,  1, 1, 0,\n        -1,  1, 0, 0,\n    ]);\n\n    private attributeIndices = {\n        aPosition: 0,\n        aTexture: 1\n    };\n\n    // Blending\n    private blendMode: BlendMode = {\n        func: [WebGLRenderingContext.SRC_ALPHA, WebGLRenderingContext.ONE_MINUS_SRC_ALPHA],\n        equation: WebGLRenderingContext.FUNC_ADD\n    };\n\n    public constructor(game: Game) {\n        super(game);\n    }\n\n    /**\n     * Loads the tileset texture information for each rendering context. The back\n     * and the front are used to separate high tiles from low tiles to give the\n     * effect of z-index in a 2D environment.\n     */\n\n    public override load(): void {\n        let tilesetCount = this.map.tilesets.length;\n\n        // Initialize the shaders and format the fragment shader.\n        this.backShader = new ProgramData(\n            this.backContext,\n            LayerVertex,\n            this.getFragmentShader(tilesetCount)\n        );\n        this.foreShader = new ProgramData(\n            this.foreContext,\n            LayerVertex,\n            this.getFragmentShader(tilesetCount)\n        );\n\n        // Set the tileset texture indices.\n        this.tilesetIndices = new Int32Array(tilesetCount);\n        this.tilesetTileSizeBuffer = new Float32Array(tilesetCount * 2);\n        this.tilesetOffsetBuffer = new Float32Array(tilesetCount * 2);\n        this.inverseTilesetTextureSizeBuffer = new Float32Array(tilesetCount * 2);\n\n        // Initialize the tileset buffers\n        for (let i = 0; i < tilesetCount; i++) {\n            // Sets the index starting from 1 for the tileset texture.\n            this.tilesetIndices[i] = i + 1;\n\n            this.tilesetTileSizeBuffer[i * 2] = this.map.tileSize;\n            this.tilesetTileSizeBuffer[i * 2 + 1] = this.map.tileSize;\n\n            /**\n             * These are used for tile spacing and margin that Tiled provides. I'm\n             * adding these since I just want the gl-tiled renderer to work.\n             */\n\n            this.tilesetOffsetBuffer[i * 2] = 0;\n            this.tilesetOffsetBuffer[i * 2 + 1] = 0;\n\n            // Apply inverse width and height of the tileset texture.\n            this.inverseTilesetTextureSizeBuffer[i * 2] = 1 / this.map.tilesets[i].width;\n            this.inverseTilesetTextureSizeBuffer[i * 2 + 1] = 1 / this.map.tilesets[i].height;\n        }\n\n        // Set the inverse tile count.\n        this.inverseTileCount[0] = 1 / this.map.width;\n        this.inverseTileCount[1] = 1 / this.map.height;\n\n        // Load the buffer data...\n        this.forEachDrawingContext((context: WebGLRenderingContext) => {\n            this.tilesets[(context.canvas as HTMLCanvasElement).id] = new Tileset(\n                this.map,\n                context\n            );\n\n            // Create the buffer for each context\n            this.bindBuffer(context);\n\n            // Bind the tileset textures to the context.\n            this.bindTexture(context);\n\n            // Bind the tile shaders to the context.\n            this.bindTileShaders(context);\n        });\n    }\n\n    /**\n     * The `setTile` function handles information from the map to update a tile\n     * at a specific index. We do this so that we are always in sync with the\n     * information we receive from the server. Instead of loading the entire map\n     * as a batch, we can load the map in chunks and update the map as we receive\n     * information from the server.\n     * @param index The index at which we want to update the tile.\n     * @param data The data we want to update the tile with, may be an array or a number.\n     */\n\n    public override setTile(index: number, data: RegionTile): void {\n        // Clear all the tiles of every layer at the specified index.\n        this.clearTile(index);\n\n        // Add the tile if it is not an array\n        if (!Array.isArray(data)) return this.addTile(index, data);\n\n        // If we find an array tile then we need to iterate through the array and pass the data to the layers.\n        for (let tileIndex in data) this.addTile(index, data[tileIndex], parseInt(tileIndex));\n    }\n\n    /**\n     * Creates the quad buffer for the specified context.\n     * @param context The context we are creating the buffer for.\n     */\n\n    private bindBuffer(context: WebGLRenderingContext): void {\n        context.bindBuffer(context.ARRAY_BUFFER, this.getQuadBuffer(context));\n        context.bufferData(context.ARRAY_BUFFER, this.quadVertices, context.STATIC_DRAW);\n    }\n\n    /**\n     * Binds the texture of the tile layer to the specified context.\n     * @param context The context we are binding the texture to.\n     */\n\n    private bindTexture(context: WebGLRenderingContext): void {\n        for (let layer of this.layers)\n            layer.bindTexture(\n                context,\n                this.getShader(context).program,\n                !this.isBackgroundContext(context)\n            );\n    }\n\n    /**\n     * Binds the tile layer shaders to the context for drawing tile data.\n     * @param context The context we are binding the shaders to.\n     */\n\n    public bindTileShaders(context: WebGLRenderingContext): void {\n        let shader = this.getShader(context);\n\n        context.useProgram(shader.program);\n\n        let inverseTileSize: Float32Array = new Float32Array([\n            1 / this.map.tileSize,\n            1 / this.map.tileSize\n        ]);\n\n        context.uniform1i(shader.uniforms.uLayer, 0);\n        context.uniform2fv(shader.uniforms.uInverseLayerTileSize!, inverseTileSize);\n\n        for (let index = 0; index < this.tilesetIndices.length; index++)\n            context.uniform1i(\n                context.getUniformLocation(shader.program, `uTilesets[${index}]`),\n                this.tilesetIndices[index]\n            );\n\n        context.uniform2fv(shader.uniforms.uTilesetTileSize!, this.tilesetTileSizeBuffer);\n        context.uniform2fv(shader.uniforms.uTilesetTileOffset!, this.tilesetOffsetBuffer);\n        context.uniform2fv(\n            shader.uniforms.uInverseTilesetTextureSize!,\n            this.inverseTilesetTextureSizeBuffer\n        );\n    }\n\n    /**\n     * Override for the `bindTileLayers` function. We use this function after we\n     * finish loading regions to signal to the drawing contexts that we need to\n     * re-bind the tile layers with the new texture data.\n     */\n\n    public override bindTileLayers(): void {\n        this.forEachDrawingContext((context: WebGLRenderingContext) => this.bindTexture(context));\n    }\n\n    /**\n     * Override for the canvas resizing so that it handles view port\n     * for WebGL contexts.\n     */\n\n    public override resize(): void {\n        super.resize();\n\n        this.forEachDrawingContext((context: WebGLRenderingContext) => {\n            // Scaling and viewport\n            let viewPort = new Float32Array([this.screenWidth, this.screenHeight]),\n                shader = this.getShader(context);\n\n            context.viewport(0, 0, context.canvas.width, context.canvas.height);\n\n            context.uniform2fv(shader.uniforms.uViewportSize, viewPort);\n            context.uniform1f(shader.uniforms.uInverseTileScale, 1 / this.camera.zoomFactor);\n        });\n    }\n\n    /**\n     * Override for rendering tiles.\n     */\n\n    public override render(): void {\n        this.draw();\n\n        super.render();\n    }\n\n    /**\n     * Draws the triangles responsible for rendering the map texture.\n     * @param x Optional parameter to draw at a specific x coordinate.\n     * @param y Optional parameter to draw at a specific y coordinate.\n     */\n\n    private draw(x = this.camera.x, y = this.camera.y): void {\n        this.forEachDrawingContext((context: WebGLRenderingContext) => {\n            context.enable(context.BLEND);\n            context.blendEquation(this.blendMode.equation);\n            context.blendFunc(this.blendMode.func[0], this.blendMode.func[1]);\n\n            // Bindings\n            context.bindBuffer(context.ARRAY_BUFFER, this.getQuadBuffer(context));\n            context.enableVertexAttribArray(this.attributeIndices.aPosition);\n            context.enableVertexAttribArray(this.attributeIndices.aTexture);\n            context.vertexAttribPointer(\n                this.attributeIndices.aPosition,\n                2,\n                context.FLOAT,\n                false,\n                16,\n                0\n            );\n            context.vertexAttribPointer(\n                this.attributeIndices.aTexture,\n                2,\n                context.FLOAT,\n                false,\n                16,\n                8\n            );\n\n            this.tilesets[(context.canvas as HTMLCanvasElement).id].forEachTexture(\n                (texture: WebGLTexture, index: number) => {\n                    context.activeTexture(context.TEXTURE1 + index);\n                    context.bindTexture(context.TEXTURE_2D, texture);\n                }\n            );\n\n            context.activeTexture(context.TEXTURE0);\n\n            let shader = this.getShader(context);\n\n            // Bind the tile layer shaders to the context.\n            context.useProgram(shader.program);\n\n            // Uniforms for the tile shader layer... move these later\n            context.uniform1f(shader.uniforms.uAlpha, 1);\n            context.uniform1i(shader.uniforms.uRepeatTiles, 1);\n            context.uniform2fv(shader.uniforms.uInverseLayerTileCount, this.inverseTileCount);\n\n            context.uniform2f(shader.uniforms.uOffset, x, y);\n\n            // Do the actual drawing.\n            for (let layer of this.layers) {\n                context.bindTexture(\n                    context.TEXTURE_2D,\n                    this.isBackgroundContext(context)\n                        ? layer.backgroundTexture\n                        : layer.foregroundTexture\n                );\n                context.drawArrays(context.TRIANGLES, 0, 6);\n            }\n        });\n    }\n\n    /**\n     * Handles the creation and applying of tiles to the layers. If the layer doesn't\n     * exist then we create it. This ensures that we only create the layers that are\n     * actually used.\n     * @param index The index of the tile (in the tilemap).\n     * @param tileId The value of the tileId.\n     * @param layerIndex Which layer index we are drawing to.\n     */\n\n    private addTile(index: number, tile: number | RotatedTile, layerIndex = 0): void {\n        if (!this.layers[layerIndex]) this.layers[layerIndex] = new Layer(this.map);\n\n        this.layers[layerIndex].addTile(index, tile, this.isFlipped(tile as RotatedTile));\n    }\n\n    /**\n     * Used for clearing a tile from all the layers when we want to dynamically\n     * update a piece of the map.\n     * @param index The index at which we are clearing the tile.\n     */\n\n    private clearTile(index: number): void {\n        for (let layer of this.layers) layer.clear(index);\n    }\n\n    /**\n     * Checks whether or not the context is the background context.\n     * @param context The context that we are checking.\n     * @returns Whether or not the context is the background context.\n     */\n\n    private isBackgroundContext(context: WebGLRenderingContext): boolean {\n        return (context.canvas as HTMLCanvasElement).id === 'background';\n    }\n\n    /**\n     * Grabs the appropriate shader based on the context specified.\n     * @param context The context we are grabbing the shader for.\n     * @returns The shader program data for the context.\n     */\n\n    private getShader(context: WebGLRenderingContext): ProgramData {\n        return this.isBackgroundContext(context) ? this.backShader : this.foreShader;\n    }\n\n    /**\n     * Grabs the buffer based on the provided context parameter.\n     * @param context The context we are grabbing the buffer for.\n     * @returns The WebGL buffer that is associated with the context.\n     */\n\n    private getQuadBuffer(context: WebGLRenderingContext): WebGLBuffer {\n        return this.isBackgroundContext(context) ? this.backQuadBuffer : this.foreQuadBuffer;\n    }\n\n    /**\n     * Since we do not support dynamically allocating array sizes in the fragment shader\n     * we need to do some hacking and manually update the constant value.\n     * @param count The number of tilesets that we are using.\n     * @returns The formatted string of the fragment shader.\n     */\n\n    private getFragmentShader(count: number): string {\n        return LayerFragment.replace('TILESET_COUNT', count.toString());\n    }\n\n    /**\n     * Iterates through all the drawing contexts (backContext and foreContext).\n     * @param callback The context being iterated.\n     */\n\n    private forEachDrawingContext(callback: (context: WebGLRenderingContext) => void): void {\n        for (let context in this.drawingContexts) callback(this.drawingContexts[context]);\n    }\n}\n","import Renderer from './renderer';\n\nimport type Game from '../game';\nimport type { ContextCallback } from './renderer';\nimport type { RegionTile, RotatedTile } from '@kaetram/common/types/map';\n\nenum TileFlip {\n    Horizontal,\n    Vertical,\n    Diagonal\n}\n\ninterface RendererTile {\n    relativeTileId: number;\n    setWidth: number;\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n}\n\ninterface RendererCell {\n    dx: number;\n    dy: number;\n    width: number;\n    height: number;\n}\n\nexport default class Canvas extends Renderer {\n    private renderedFrame = [-1, -1];\n\n    // Used for storing and caching tile information.\n    private tiles: { [id: string]: RendererTile } = {};\n    private cells: { [id: number]: RendererCell } = {};\n\n    // Override for the context types\n    private backContext: CanvasRenderingContext2D = this.background.getContext('2d')!;\n    private foreContext: CanvasRenderingContext2D = this.foreground.getContext('2d')!;\n\n    private drawingContexts = [this.backContext, this.foreContext];\n\n    public constructor(game: Game) {\n        super(game);\n\n        this.allContexts.push(this.backContext, this.foreContext);\n    }\n\n    /**\n     * Override for the resizing function where we also\n     * handle clearing up the canvases and tiling.\n     */\n\n    public override resize(): void {\n        super.resize();\n\n        // Clear all the cells so they're redrawn.\n        this.cells = {};\n    }\n\n    /**\n     * Override for the rendering function. We do our Canvas2D rendering here.\n     */\n\n    public override render(): void {\n        if (this.stopRendering) return;\n\n        super.render();\n\n        this.draw();\n    }\n\n    // ---------- Drawing Functions ----------\n\n    /**\n     * Background and foreground drawing function. Here we iterate\n     * through all the tile visibles (every tile in the camera's view)\n     * and draw them onto the foreground and background canvases depending\n     * on the tileId's property (we compare to see if the tile id is that\n     * of a high tile in the map).\n     */\n\n    private draw(): void {\n        if (this.hasRenderedFrame()) return;\n\n        this.clearDrawing();\n        this.saveDrawing();\n\n        // Draw the default background colour\n        this.backContext.fillStyle = 'rgba(9, 10, 20, 1)';\n        this.backContext.fillRect(0, 0, this.background.width, this.background.height);\n\n        // Sets the view according to the camera.\n        this.updateDrawingView();\n\n        this.forEachVisibleTile((tile: RegionTile, index: number) => {\n            let flips: number[] = this.getFlipped(tile as RotatedTile);\n\n            // Extract the tileId from the animated region tile.\n            if (flips.length > 0) tile = (tile as RotatedTile).tileId;\n\n            // Determine the layer of the tile depending on if it is a high tile or not.\n            let isHighTile = this.map.isHighTile(tile as number),\n                context = (\n                    isHighTile ? this.foreContext : this.backContext\n                ) as CanvasRenderingContext2D;\n\n            // Only do the lighting logic if there is an overlay.\n            if (this.game.overlays.hasOverlay()) {\n                let isLightTile = this.map.isLightTile(tile as number);\n\n                context = isLightTile ? (this.overlayContext as CanvasRenderingContext2D) : context;\n            }\n\n            /**\n             * Draws the animated tiles first so they display behind potential\n             * high tiles. We check if the current index contains an animated tile\n             * and if we are currently animating tiles before proceeding.\n             */\n            if (index in this.animatedTiles && this.animateTiles) {\n                // Advance the timing of the animated tiles with the current epoch.\n                this.animatedTiles[index].animate(this.game.time);\n\n                // Prevent double draws when drawing flipped animated tiles.\n                if (flips.length === 0 && this.animatedTiles[index].isFlipped) return;\n\n                this.drawTile(\n                    context,\n                    this.animatedTiles[index].id,\n                    this.animatedTiles[index].index,\n                    flips\n                );\n            }\n\n            // Skip animated tiles unless we disable animations, then just draw the tile once.\n            if (!this.map.isAnimatedTile(tile as number) || !this.animateTiles)\n                this.drawTile(context, (tile as number) - 1, index, flips);\n        });\n\n        this.saveFrame();\n        this.restoreDrawing();\n    }\n\n    // ---------- Primitive Drawing Functions ----------\n\n    /**\n     * Draws a tile with a specified tileId, at a specified index. The flips\n     * represent an array of transformations that the tile can undergo. If the\n     * array is empty, then there are no transformations.\n     * @param context The canvas that we are drawing the tile on.\n     * @param tileId The tile id is used to extract the tile from the tileset.\n     * @param cellId The cell id is the index of the tile in the map.\n     * @param flips An array containing transformations the tile will undergo.\n     */\n\n    private drawTile(\n        context: CanvasRenderingContext2D,\n        tileId: number,\n        index: number,\n        flips: number[] = []\n    ): void {\n        if (tileId < 0) return;\n\n        let tileset = this.map.getTilesetFromId(tileId);\n\n        if (!tileset) return;\n\n        /**\n         * To prevent redrawing and reculating the same tile, we\n         * cache the tileId in our list of tiles. These are heavy\n         * calculations that we attempt to prevent from occurring\n         * every frame. The same applies for the cells below.\n         */\n\n        if (!(tileId in this.tiles)) {\n            let setWidth = tileset.width / this.tileSize,\n                relativeTileId = tileId - tileset.firstGid;\n\n            this.tiles[tileId] = {\n                relativeTileId,\n                setWidth,\n                x: this.getX(relativeTileId + 1, setWidth) * this.tileSize,\n                y: Math.floor(relativeTileId / setWidth) * this.tileSize,\n                width: this.tileSize,\n                height: this.tileSize\n            };\n        }\n\n        /**\n         * Cell cache stores data about every index coordinate the player\n         * has explored. This may create overhead in terms of memory usage,\n         * but it is a necessary optimization.\n         */\n\n        if (!(index in this.cells) || flips.length > 0)\n            this.cells[index] = {\n                dx: this.getX(index + 1, this.map.width) * this.actualTileSize,\n                dy: Math.floor(index / this.map.width) * this.actualTileSize,\n                width: this.actualTileSize,\n                height: this.actualTileSize\n            };\n\n        this.drawImage(context, tileset, this.tiles[tileId], this.cells[index], flips);\n    }\n\n    /**\n     * Responsible for drawing an image at a specified tile index.\n     * @param context The Canvas2D context we are drawing the image on.\n     * @param image The image source to draw from (tileset).\n     * @param tile The renderer tile containing information such as x, y, width, height, etc.\n     * @param cell The renderer cell containing information such as dx, dy, width, height, flips.\n     */\n\n    private drawImage(\n        context: CanvasRenderingContext2D,\n        image: CanvasImageSource,\n        tile: RendererTile,\n        cell: RendererCell,\n        flips: number[] = []\n    ): void {\n        let dx = 0,\n            dy = 0,\n            isFlipped = flips.length > 0;\n\n        /**\n         * A tile rotation or flip is a combination of horizontal\n         * and vertical flips, with a transpose that rotates the tile\n         * 90 degrees. A transpose in our case is a rotation, followed by\n         * a horizontal flip. When a tile undergoes any transformation,\n         * we use these combinations to change its drawing.\n         */\n\n        if (isFlipped) {\n            ({ dx, dy } = cell);\n\n            // Save the context when we begin tile translations.\n            context.save();\n\n            // Store our delta x if we need to transpose.\n            let tempX = dx;\n\n            // Iterate through every type of flip in our array.\n            for (let index = 0; index < flips.length; index++)\n                switch (flips[index]) {\n                    case TileFlip.Horizontal: {\n                        // Flip the context2d horizontally\n                        dx = -dx - cell.width;\n                        context.scale(-1, 1);\n\n                        break;\n                    }\n\n                    case TileFlip.Vertical: {\n                        // Flip the context2d vertically\n                        dy = -dy - cell.height;\n                        context.scale(1, -1);\n\n                        break;\n                    }\n\n                    case TileFlip.Diagonal: {\n                        // A diagonal flip is actually a transpose of 90deg clockwise.\n                        context.rotate(Math.PI / 2);\n                        context.translate(0, -cell.height);\n\n                        (dx = dy), (dy = -tempX);\n\n                        /**\n                         * Explanation: After we perform a diagonal permutation (that is, we rotate the tile\n                         * 90 degrees to the right, the horizontal and vertical flags become inverted). That is,\n                         * performing a horizontal flip after rotating performs a vertical flip when observed\n                         * in the rendering context. The following ensures that a horizontal flip is performed only\n                         * when the next available flip is horizontal (essentially performing two horizontals in a row.)\n                         */\n\n                        if (flips[index + 1] === TileFlip.Horizontal)\n                            flips.push(TileFlip.Horizontal);\n                        else flips.push(TileFlip.Vertical);\n\n                        break;\n                    }\n                }\n        }\n\n        context.drawImage(\n            image,\n            tile.x, // Source X\n            tile.y, // Source Y\n            tile.width, // Source Width\n            tile.height, // Source Height\n            dx || cell.dx, // Destination X\n            dy || cell.dy, // Destination Y\n            cell.width, // Destination Width\n            cell.height // Destination Height\n        );\n\n        if (isFlipped) context.restore();\n    }\n\n    // ---------- Rendering Functions ----------\n\n    /**\n     * Checks whether or not the current frame has already been rendererd in order\n     * to prevent drawing when there is no movement during low power mode.\n     * @returns Whether or not the current frame has been rendered.\n     */\n\n    private hasRenderedFrame(): boolean {\n        if (this.forceRendering || !this.isLowPowerMode()) return false;\n\n        if (this.stopRendering) return true;\n\n        return this.renderedFrame[0] === this.camera.x && this.renderedFrame[1] === this.camera.y;\n    }\n\n    // ---------- Context Manipulation Functions ----------\n\n    /**\n     * Iterates through the drawing contexts (low and high tiles) and clears the entire frame.\n     */\n\n    private clearDrawing(): void {\n        this.forEachDrawingContext(this.clearScreen);\n    }\n\n    /**\n     * Iterates through just the drawing contexts (low and high tiles) and saves the current state.\n     */\n\n    private saveDrawing(): void {\n        this.forEachDrawingContext((context: CanvasRenderingContext2D) => context.save());\n    }\n\n    /**\n     * Saves the currently rendered frame in order to prevent unnecessary redraws\n     * during low power mode.\n     */\n\n    private saveFrame(): void {\n        if (!this.isLowPowerMode()) return;\n\n        this.renderedFrame[0] = this.camera.x;\n        this.renderedFrame[1] = this.camera.y;\n\n        this.forceRendering = false;\n    }\n\n    /**\n     * Iterates through just the drawing contexts (low and high tiles) and restores them.\n     */\n\n    private restoreDrawing(): void {\n        this.forEachDrawingContext((context: CanvasRenderingContext2D) => context.restore());\n    }\n\n    /**\n     * Iterates through the drawing contexts (used for tiling) and sets the camera position.\n     */\n\n    private updateDrawingView(): void {\n        this.forEachDrawingContext((context: CanvasRenderingContext2D) =>\n            this.setCameraView(context)\n        );\n    }\n\n    // ---------- Getters and Checkers ----------\n\n    /**\n     * Checks if a tile is a flipped tile and extracts\n     * all the flags based on the tile data. Returns an\n     * array containing all the flip flags.\n     * @param tile The region tile we are checking.\n     * @returns An array containing all flip flags in order.\n     */\n\n    public getFlipped(tile: RotatedTile): number[] {\n        let flips: number[] = [];\n\n        // Return empty if tile doesn't contain flip flags.\n        if (!this.isFlipped(tile)) return flips;\n\n        if (tile.v) flips.push(TileFlip.Vertical);\n        if (tile.d) flips.push(TileFlip.Diagonal);\n        if (tile.h) flips.push(TileFlip.Horizontal);\n\n        return flips;\n    }\n\n    // ---------- Iterative Functions ----------\n\n    /**\n     * Iterates through all the drawing contexts (backContext and foreContext).\n     * @param callback The context being iterated.\n     */\n\n    private forEachDrawingContext(callback: ContextCallback): void {\n        for (let context in this.drawingContexts)\n            callback(this.drawingContexts[context] as CanvasRenderingContext2D);\n    }\n}\n","import Character from '../entity/character/character';\nimport Projectile from '../entity/objects/projectile';\n\nimport { Modules } from '@kaetram/common/network';\n\nimport type SpritesController from '../controllers/sprites';\nimport type Entity from '../entity/entity';\nimport type Game from '../game';\n\nexport default class Updater {\n    private tileSize: number;\n\n    private sprites: SpritesController;\n\n    public constructor(private game: Game) {\n        this.tileSize = game.map.tileSize;\n\n        this.sprites = game.sprites;\n    }\n\n    public update(): void {\n        // Stop updating\n        if (this.game.player.dead) return;\n\n        this.updateEntities();\n        this.updateKeyboard();\n        this.updateAnimations();\n        this.updateInfos();\n        this.updateBubbles();\n        this.updateSounds();\n    }\n\n    /**\n     * Iterates through all the entities and updates their animation data.\n     * If an entity is moving, we process that movement and update the entity's position.\n     */\n\n    private updateEntities(): void {\n        this.game.entities.forEachEntity((entity: Entity) => {\n            // Nothing to render if no sprite is loaded.\n            if (!entity.sprite?.loaded) return;\n\n            this.updateFading(entity);\n\n            entity.animation?.update(this.game.time);\n\n            // Handle projectile instances separately.\n            if (entity instanceof Projectile) {\n                let mDistance = entity.speed * entity.getTimeDiff(),\n                    dx = entity.target.x - entity.x, // delta x current position to target\n                    dy = entity.target.y - entity.y, // delta y current position to target\n                    tDistance = Math.sqrt(dx * dx + dy * dy), // pythagorean theorem uwu\n                    amount = mDistance / tDistance;\n\n                // Always angle the projectile towards the target.\n                entity.updateAngle();\n\n                if (amount > 1) amount = 1;\n\n                // Increment the projectile's position.\n                entity.x += dx * amount;\n                entity.y += dy * amount;\n\n                if (tDistance < 5) entity.impact();\n\n                entity.lastUpdate = this.game.time;\n\n                return;\n            }\n\n            // Only characters receive pathing/movement updates.\n            if (!(entity instanceof Character)) return;\n\n            // If a movement transition is in progress, we just update that transition.\n            if (entity.movement.inProgress) return entity.movement.step(this.game.time);\n\n            // Do not update if no pathing is in progress.\n            if (!entity.hasPath()) return;\n\n            // Check if the type of movement is on the x or y axis.\n            let isHorizontal =\n                    entity.orientation === Modules.Orientation.Left ||\n                    entity.orientation === Modules.Orientation.Right,\n                isVertical =\n                    entity.orientation === Modules.Orientation.Up ||\n                    entity.orientation === Modules.Orientation.Down,\n                isLeft,\n                isUp;\n\n            // Determine the specific direction for the movement.\n            if (isHorizontal) isLeft = entity.orientation === Modules.Orientation.Left;\n            if (isVertical) isUp = entity.orientation === Modules.Orientation.Up;\n\n            /**\n             * Here we essentially start a transition update loop for an entity. Depending\n             * on the entity's movement speed, we increment the entity's x/y position by a\n             * single pixel. We proceed to do this for the length of the tile size. For example\n             * for a movement speed of 100, the entity will traverse a tile of size 16x16 pixels\n             * in 100 milliseconds.\n             */\n\n            entity.movement.start(\n                this.game.time,\n                isHorizontal ? entity.x + (isLeft ? -1 : 1) : entity.y + (isUp ? -1 : 1),\n                isHorizontal\n                    ? entity.x + (isLeft ? -this.tileSize : this.tileSize)\n                    : entity.y + (isUp ? -this.tileSize : this.tileSize),\n                entity.movementSpeed,\n                (value) => {\n                    if (isHorizontal) entity.x = value;\n                    if (isVertical) entity.y = value;\n\n                    // Callback for when an entity has moved.\n                    entity.moved();\n                },\n                () => {\n                    if (isHorizontal) entity.x = entity.movement.endValue;\n                    if (isVertical) entity.y = entity.movement.endValue;\n\n                    // Callback for an entity movement.\n                    entity.moved();\n                    entity.nextStep();\n                }\n            );\n        });\n    }\n\n    /**\n     * Fading occurs when an entity first spawns into\n     * the world. It essentially gradually increases the\n     * alpha of the entity until it is fully visible\n     * when it first spawns into the world.\n     * @param entity The entity we are fading in for.\n     */\n\n    private updateFading(entity: Entity): void {\n        if (!entity.fading) return;\n\n        let { time } = this.game,\n            dt = time - entity.fadingTime;\n\n        if (dt > entity.fadingDuration) {\n            entity.fading = false;\n            entity.fadingAlpha = 1;\n        } else entity.fadingAlpha = dt / entity.fadingDuration;\n    }\n\n    /**\n     * Updater for key input. When we toggle an arrow key\n     * or WSAD key, we monitor the status of the move conditionals\n     * within the player character. Depending on which one is active,\n     * we change the player's current position and let the input\n     * controller handle the movement itself.\n     */\n\n    private updateKeyboard(): void {\n        let { player, input } = this.game,\n            position = {\n                x: -1,\n                y: -1,\n                gridX: player.gridX,\n                gridY: player.gridY\n            };\n\n        /**\n         * Disables updating when the player is already moving as to not spam\n         * packets. If the player is frozen the input is ignored.\n         */\n        if (player.moving || player.teleporting || player.frozen || !player.hasKeyboardMovement())\n            return;\n\n        if (player.moveUp) position.gridY--;\n        else if (player.moveDown) position.gridY++;\n        else if (player.moveRight) position.gridX++;\n        else if (player.moveLeft) position.gridX--;\n\n        input.keyMove(position);\n    }\n\n    /**\n     * Updates the target animation (spinning tile selected animation) and\n     * the sparks animation displayed around items.\n     */\n\n    private updateAnimations(): void {\n        let target = this.game.input.targetAnimation;\n\n        if (target && this.game.input.selectedCellVisible) target.update(this.game.time);\n\n        if (!this.sprites) return;\n\n        let sparks = this.sprites.sparksAnimation;\n\n        sparks?.update(this.game.time);\n    }\n\n    /**\n     * Runs the info update with the current game time.\n     */\n\n    private updateInfos(): void {\n        this.game.info.update(this.game.time);\n    }\n\n    /**\n     * Updates the bubbles displayed around entities\n     * and posts the current game time.\n     */\n\n    private updateBubbles(): void {\n        this.game.bubble?.update(this.game.time);\n\n        this.game.pointer?.update();\n    }\n\n    /**\n     * Updates the music controller's directional audio.\n     */\n\n    private updateSounds() {\n        this.game.audio.updatePlayerListener();\n    }\n}\n","export type PosTuple = [x: number, y: number];\n\nexport type FunctionTypes = 'Diagonal' | 'Euclidean' | 'DiagonalFree' | 'EuclideanFree' | 'DEFAULT';\n\ninterface Result {\n    x: number;\n    y: number;\n    f?: number;\n    g?: number;\n    v?: number;\n    p?: Result;\n}\n\ntype Successor = (\n    $N: boolean,\n    $S: boolean,\n    $E: boolean,\n    $W: boolean,\n    N: number,\n    S: number,\n    E: number,\n    W: number,\n    grid: number[][],\n    rows: number,\n    cols: number,\n    result: Result[],\n    i: number\n) => Result[];\n\ntype MathFunction = (\n    start: Position,\n    end: Position,\n    f1: (...values: number[]) => number,\n    f2: (...values: number[]) => number\n) => number;\n\n/**\n * A* (A-Star) algorithm for a path finder\n * @author  Andrea Giammarchi\n * @license Mit Style License\n */\n\nfunction AStar(\n    grid: number[][],\n    start: [number, number],\n    end: [number, number],\n    f: FunctionTypes\n): number[][] {\n    let cols = grid[0].length,\n        rows = grid.length,\n        limit = cols * rows,\n        f2 = Math.max,\n        list: { [key: number]: number } = {},\n        result: [x: number, y: number][] = [],\n        open: Result[] = [\n            {\n                x: start[0],\n                y: start[1],\n                f: 0,\n                g: 0,\n                v: start[0] + start[1] * cols\n            }\n        ],\n        length = 1,\n        distance: MathFunction,\n        find: Successor,\n        current: Result,\n        next: Result[],\n        endPos = { x: end[0], y: end[1], v: end[0] + end[1] * cols };\n\n    switch (f) {\n        case 'Diagonal':\n        case 'Euclidean': {\n            find = diagonalSuccessors;\n        }\n        case 'DiagonalFree': {\n            distance = diagonal;\n            break;\n        }\n\n        case 'EuclideanFree': {\n            f2 = Math.sqrt;\n            distance = euclidean;\n            break;\n        }\n\n        default: {\n            distance = manhattan;\n            find = nothingToDo;\n            break;\n        }\n    }\n\n    find ||= diagonalSuccessorsFree;\n\n    do {\n        if (length > 100)\n            // Don't let it get too crazy.\n            return [];\n\n        let max = limit,\n            min = 0;\n\n        for (let i = 0; i < length; ++i) {\n            let openF = open[i].f!;\n\n            if (openF < max) {\n                max = openF;\n                min = i;\n            }\n        }\n\n        [current] = open.splice(min, 1);\n        if (current.v === endPos.v) {\n            let i = (length = 0);\n\n            do result[i++] = [current.x, current.y];\n            while ((current = current.p!));\n\n            result.reverse();\n        } else {\n            --length;\n            next = successors(find, current.x, current.y, grid, rows, cols);\n\n            for (let i = 0, j = next.length; i < j; ++i) {\n                let adj = next[i];\n\n                adj.p = current;\n                adj.f = adj.g = 0;\n                adj.v = adj.x + adj.y * cols;\n\n                if (!(adj.v in list)) {\n                    adj.f =\n                        (adj.g = current.g! + distance(adj, current, Math.abs, f2)) +\n                        distance(adj, endPos, Math.abs, f2);\n\n                    open[length++] = adj;\n                    list[adj.v] = 1;\n                }\n            }\n        }\n    } while (length);\n\n    return result;\n}\n\nlet diagonalSuccessors: Successor = ($N, $S, $E, $W, N, S, E, W, grid, _rows, _cols, result, i) => {\n        if ($N) {\n            $E && !grid[N][E] && (result[i++] = { x: E, y: N });\n            $W && !grid[N][W] && (result[i++] = { x: W, y: N });\n        }\n        if ($S) {\n            $E && !grid[S][E] && (result[i++] = { x: E, y: S });\n            $W && !grid[S][W] && (result[i++] = { x: W, y: S });\n        }\n\n        return result;\n    },\n    diagonalSuccessorsFree: Successor = (\n        $N,\n        $S,\n        $E,\n        $W,\n        N,\n        S,\n        E,\n        W,\n        grid,\n        rows,\n        cols,\n        result,\n        i\n    ) => {\n        $N = N > -1;\n        $S = S < rows;\n        $E = E < cols;\n        $W = W > -1;\n\n        if ($E) {\n            $N && !grid[N][E] && (result[i++] = { x: E, y: N });\n            $S && !grid[S][E] && (result[i++] = { x: E, y: S });\n        }\n        if ($W) {\n            $N && !grid[N][W] && (result[i++] = { x: W, y: N });\n            $S && !grid[S][W] && (result[i++] = { x: W, y: S });\n        }\n\n        return result;\n    },\n    nothingToDo: Successor = (_$N, _$S, _$E, _$W, _N, _S, _E, _W, _grid, _rows, _cols, result) =>\n        result;\n\nfunction successors(\n    find: Successor,\n    x: number,\n    y: number,\n    grid: number[][],\n    rows: number,\n    cols: number\n) {\n    let N = y - 1,\n        S = y + 1,\n        E = x + 1,\n        W = x - 1,\n        $N = N > -1 && !grid[N][x],\n        $S = S < rows && !grid[S][x],\n        $E = E < cols && !grid[y][E],\n        $W = W > -1 && !grid[y][W],\n        result = [],\n        i = 0;\n\n    $N && (result[i++] = { x, y: N });\n    $E && (result[i++] = { x: E, y });\n    $S && (result[i++] = { x, y: S });\n    $W && (result[i++] = { x: W, y });\n\n    return find($N, $S, $E, $W, N, S, E, W, grid, rows, cols, result, i);\n}\n\nlet diagonal: MathFunction = (start, end, f1, f2) => f2(f1(start.x - end.x), f1(start.y - end.y)),\n    euclidean: MathFunction = (start, end, _f1, f2) => {\n        let x = start.x - end.x,\n            y = start.y - end.y;\n\n        return f2(x * x + y * y);\n    },\n    manhattan: MathFunction = (start, end, f1) => f1(start.x - end.x) + f1(start.y - end.y);\n\nexport default AStar;\n","import AStar from '../lib/astar';\n\nimport type { FunctionTypes } from '../lib/astar';\n\n/**\n * A* pathfinder implementation. We essentially use the grid from the map\n * to calculate pathfinding within the game. The ignores work by temporarily\n * ignoring a collision tile in the grid (removing it) and re-adding it once\n * the pathinding is calculated (re-adding it using `clearIgnores`).\n */\n\nexport interface TileIgnore {\n    x: number;\n    y: number;\n    fake?: boolean;\n}\nexport default class PathFinder {\n    private mode: FunctionTypes = 'DEFAULT';\n\n    /**\n     * Finds and returns a pathing from the startX and startY (representing\n     * grid coordinates) to the endX and endY. We use the collision grid\n     * directly from the map to find the path.\n     * @param grid Collision grid from the map object (updated based on region data).\n     * @param startX Starting grid X coordinate.\n     * @param startY Starting grid Y coordinate.\n     * @param endX Ending grid X coordinate.\n     * @param endY Ending grid Y coordinate.\n     * @returns An 2D array of grid coordinates representing the path. Each entry\n     * contains an array of [x, y] coordinates.\n     */\n\n    public find(\n        grid: number[][],\n        startX: number,\n        startY: number,\n        endX: number,\n        endY: number,\n        ignores: TileIgnore[] = []\n    ): number[][] {\n        // Parse through the ignores and remove collision from the grid.\n        this.handleIgnore(grid, ignores, true);\n\n        // Store the result as a variable so we can re-add collision to the grid.\n        let result = AStar(grid, [startX, startY], [endX, endY], this.mode);\n\n        // Parse through the ignores and re-add collision to the grid.\n        this.handleIgnore(grid, ignores);\n\n        return result;\n    }\n\n    /**\n     * Responsible for handling the ignore based on the state parameter\n     * provided. When we need to ignore, we remove collision from the map grid,\n     * and when we need to unignore, we add collision back to the map grid.\n     * @param grid Collision grid from the map object.\n     * @param ignored Whether or not to remove or add collision to the grid.\n     */\n\n    private handleIgnore(grid: number[][], ignores: TileIgnore[], ignored = false): void {\n        for (let ignore of ignores) {\n            // Skip invalid ignores.\n            if (ignore.x < 0 || ignore.y < 0) continue;\n\n            /**\n             * This functionally essentially marks colliding tile as non-colliding so that the pathfinder\n             * can find a path to said tile. There are instances however, where we want to mark nearby\n             * tiles as non-colliding, which also includes non-colliding tiles. What happens is that when\n             * we re-add collision to the grid, we re-add collision to the non-colliding tiles as well.\n             * We mark these tiles as `fake` so that we can ignore them when re-adding collision to the grid.\n             */\n\n            if (ignore.fake) continue;\n\n            if (grid[ignore.y][ignore.x] === 0) ignore.fake = true;\n\n            grid[ignore.y][ignore.x] = ignored ? 0 : 1;\n        }\n    }\n}\n","import AudioController from './controllers/audio';\nimport BubbleController from './controllers/bubble';\nimport EntitiesController from './controllers/entities';\nimport InfoController from './controllers/info';\nimport InputController from './controllers/input';\nimport MenuController from './controllers/menu';\nimport Pointer from './controllers/pointer';\nimport SpritesController from './controllers/sprites';\nimport Zoning from './controllers/zoning';\nimport Player from './entity/character/player/player';\nimport Handler from './entity/character/player/handler';\nimport Map from './map/map';\nimport Connection from './network/connection';\nimport Socket from './network/socket';\nimport Camera from './renderer/camera';\nimport Minigame from './renderer/minigame';\nimport Overlays from './renderer/overlays';\nimport WebGL from './renderer/webgl/webgl';\nimport Canvas from './renderer/canvas';\nimport Updater from './renderer/updater';\nimport Pathfinder from './utils/pathfinder';\nimport { agent } from './utils/detect';\n\nimport { Packets } from '@kaetram/common/network';\n\nimport type App from './app';\nimport type Entity from './entity/entity';\nimport type Storage from './utils/storage';\nimport type Character from './entity/character/character';\nimport type { TileIgnore } from './utils/pathfinder';\n\nexport default class Game {\n    public player: Player;\n    public storage: Storage;\n\n    public map: Map;\n    public camera: Camera;\n\n    public zoning: Zoning = new Zoning();\n    public overlays: Overlays = new Overlays();\n    public pathfinder: Pathfinder = new Pathfinder();\n\n    public info: InfoController = new InfoController();\n    public sprites: SpritesController;\n\n    public minigame: Minigame = new Minigame();\n\n    public renderer: WebGL | Canvas;\n    public input: InputController;\n\n    public socket: Socket;\n    public pointer: Pointer;\n    public updater: Updater;\n    public audio: AudioController;\n    public entities: EntitiesController;\n    public bubble: BubbleController;\n    public menu: MenuController;\n\n    public connection: Connection;\n\n    public time = Date.now();\n    public lastTime = Date.now();\n\n    public started = false;\n    public ready = false;\n    public pvp = false;\n    public useWebGl = false;\n\n    public constructor(public app: App) {\n        this.storage = app.storage;\n\n        this.player = new Player('', this);\n\n        this.map = new Map(this);\n        this.camera = new Camera(this.map.width, this.map.height, this.map.tileSize);\n        this.sprites = new SpritesController();\n\n        this.renderer = this.useWebGl ? new WebGL(this) : new Canvas(this);\n        this.menu = new MenuController(this);\n        this.input = new InputController(this);\n        this.socket = new Socket(this);\n        this.pointer = new Pointer(this);\n        this.updater = new Updater(this);\n        this.audio = new AudioController(this);\n        this.entities = new EntitiesController(this);\n        this.bubble = new BubbleController(this);\n        this.connection = new Connection(this);\n\n        app.sendStatus('Loading game');\n\n        this.map.onReady(() => app.ready());\n\n        app.onLogin(this.socket.connect.bind(this.socket));\n        app.onResize(this.resize.bind(this));\n        app.onRespawn(this.respawn.bind(this));\n\n        this.player.onSync(this.handlePlayerSync.bind(this));\n    }\n\n    /**\n     * Starts the game by fading the main menu out\n     * and beginning the game loop `tick()`.\n     */\n\n    public start(): void {\n        if (this.started) return;\n\n        this.started = true;\n\n        this.tick();\n    }\n\n    /**\n     * Tick is a recursive function that calls for as long as the\n     * game is running. We use `requestAnimationFrame` to get the\n     * browser to call us back at the next available opportunity.\n     */\n\n    private tick(): void {\n        this.time = Date.now();\n\n        this.renderer.render();\n        this.updater.update();\n\n        if (this.started) requestAnimationFrame(() => this.tick());\n    }\n\n    /**\n     * This method is responsible for handling sudden\n     * disconnects of a player whilst in the game, not\n     * menu-based errors.\n     */\n\n    public handleDisconnection(): void {\n        if (!this.app.isMenuHidden()) return;\n\n        location.reload();\n    }\n\n    /**\n     * Handles synchronization for the player client-sided.\n     * This is called whenever the player undergoes a change\n     * in experience, level, equipment, etc. Note that this\n     * synchronization is different from the Sync packet\n     * that is received in `connection.ts.` That packet\n     * is synchronization of other player characters, this one\n     * involves our current client's player character.\n     */\n\n    private handlePlayerSync(): void {\n        this.menu.synchronize();\n\n        // Update sprite\n        this.player.setSprite(this.sprites.get(this.player.getSpriteName()));\n    }\n\n    /**\n     * Call this after the player has been welcomed\n     * by the server and the client received the connection.\n     */\n    public postLoad(): void {\n        this.entities.addEntity(this.player);\n\n        this.player.setSprite(this.sprites.get(this.player.getSpriteName()));\n        this.player.idle();\n\n        if (this.storage) {\n            this.player.setOrientation(this.storage.data.player.orientation);\n            this.camera.setZoom(this.storage.data.player.zoom);\n\n            this.renderer.resize();\n        }\n\n        this.camera.centreOn(this.player);\n\n        this.player.handler = new Handler(this.player);\n\n        this.renderer.updateAnimatedTiles();\n\n        this.socket.send(Packets.Ready, {\n            regionsLoaded: this.map.regionsLoaded,\n            userAgent: agent\n        });\n\n        if (this.storage.data.new) {\n            this.storage.data.new = false;\n            this.storage.save();\n        }\n\n        if (this.map.hasCachedDate()) this.app.fadeMenu();\n    }\n\n    /**\n     * Determines a path from the character's current position to the\n     * specified `x` and `y` grid coordinate parameters.\n     * @param character The character we are finding the path for.\n     * @param x The destination x grid coordinate.\n     * @param y The destination y grid coordinate.\n     * @param ignores The list of character objects that we are ignoring.\n     * @returns A 2D array of grid coordinates that represent the path.\n     */\n\n    public findPath(\n        character: Character,\n        x: number,\n        y: number,\n        ignores: TileIgnore[] = [],\n        cursor = ''\n    ): number[][] {\n        let path: number[][] = [];\n\n        path = this.pathfinder.find(this.map.grid, character.gridX, character.gridY, x, y, ignores);\n\n        // Stop if there is no path.\n        if (path.length === 0) return path;\n\n        // Special case for fishing where we remove the last path if it is colliding.\n        if (cursor === 'fishing') {\n            let last = path[path.length - 2];\n\n            // Remove if there is a collision  at the last path only (to allow fishing from a distance).\n            if (this.map.isColliding(last[0], last[1])) path.pop();\n        }\n\n        return path;\n    }\n\n    /**\n     * Used for when the player has selected low power mode and we do not\n     * actively centre the camera on the character. We check the boundaries\n     * of the camera and if the character approaches them we move the camera\n     * in the next quadrant.\n     */\n\n    public updateCameraBounds(): void {\n        // We are not using non-centred camera, so skip.\n        if (!this.zoning) return;\n\n        // Difference between the player and the camera, indicates which boundary we are approaching.\n        let x = this.player.gridX - this.camera.gridX,\n            y = this.player.gridY - this.camera.gridY;\n\n        // Left boundary\n        if (x === 0) this.zoning.setLeft();\n        // Right boundary\n        else if (x === this.camera.gridWidth - 2) this.zoning.setRight();\n        // Top boundary\n        else if (y === 0) this.zoning.setUp();\n        // Bottom boundary\n        else if (y === this.camera.gridHeight - 2) this.zoning.setDown();\n\n        // No zoning has occured, so stop here.\n        if (this.zoning.direction === null) return;\n\n        // Synchronize the camera and reset the zoning directions.\n        this.camera.zone(this.zoning.getDirection());\n\n        // Update the animated tiles.\n        this.renderer.updateAnimatedTiles();\n\n        // Reset the zoning directions.\n        this.zoning.reset();\n    }\n\n    /**\n     * Plays the reviving sound effect and removes the death class.\n     * We send a packet to the server to signal for respawn.\n     */\n\n    public respawn(): void {\n        this.audio.playSound('revive');\n        this.app.body.classList.remove('death');\n\n        this.socket.send(Packets.Respawn, []);\n    }\n\n    /**\n     * Calls all the resize functions in the controllers\n     * that require resizing.\n     */\n\n    public resize(): void {\n        this.renderer.resize();\n\n        this.pointer.resize();\n\n        this.menu.resize();\n    }\n\n    /**\n     * Determines an entity at a specific grid coordinate.\n     * @param x The x grid coordinate we are checking.\n     * @param y The y grid coordinate we are checking.\n     * @returns The first entity in the list that is at the grid coordinate.\n     */\n\n    public getEntityAt(x: number, y: number): Entity | undefined {\n        if (!this.entities) return;\n\n        let entities = this.entities.grids.renderingGrid[y][x],\n            keys = Object.keys(entities),\n            index = keys.indexOf(this.player.instance);\n\n        // Remove player instance from the keys of entities.\n        if (index !== -1) keys.splice(index, 1);\n\n        // Returns entity if there is a key, otherwise just undefined.\n        return entities[keys[0]];\n    }\n\n    /**\n     * Looks through the entity rendering grid within the specified radius to find\n     * any entities that are within the boundaries of the position provided.\n     * @param position The position we are checking around (usually the mouse position).\n     * @param radius How many tiles away from the position we are checking.\n     * @returns An entity if found, otherwise undefined.\n     */\n\n    public searchForEntityAt(position: Position, radius = 2): Entity | undefined {\n        let entities = this.entities.grids.getEntitiesAround(\n            position.gridX!,\n            position.gridY!,\n            radius\n        );\n\n        // Look through all the entities we found and determine which one is closest to the mouse.\n        for (let entity of entities)\n            if (\n                position.x >= entity.x + entity.sprite.offsetX &&\n                position.x <= entity.x + entity.sprite.offsetX + entity.sprite.width &&\n                position.y >= entity.y + entity.sprite.offsetY &&\n                position.y <= entity.y + entity.sprite.offsetY + entity.sprite.height\n            )\n                return entity;\n\n        return undefined;\n    }\n\n    /**\n     * Handles the teleportation for a player character.\n     * If this player is our game client's player, then\n     * we must clear some of the user interfaces and begin\n     * preparing the renderer for the new location.\n     * @param character The character we are teleporting.\n     * @param gridX The x grid coordinate we are teleporting to.\n     * @param gridY The y grid coordinate we are teleporting to.\n     */\n\n    public teleport(character: Character, gridX: number, gridY: number): void {\n        this.entities.unregisterPosition(character);\n\n        character.setGridPosition(gridX, gridY);\n\n        this.entities.registerPosition(character);\n\n        character.frozen = false;\n        character.teleporting = false;\n\n        if (character.instance === this.player.instance) {\n            character.clearHealthBar();\n\n            this.player.moving = false;\n            this.player.disableAction = false;\n            this.camera.centreOn(this.player);\n            this.renderer.updateAnimatedTiles();\n        }\n    }\n\n    /**\n     * Zooms out the game and updates the camera.\n     * @param amount Amount to zoom in or out by.\n     */\n\n    public zoom(amount: number): void {\n        this.camera.zoom(amount);\n        this.storage.setZoom(this.camera.zoomFactor);\n\n        this.renderer.resize();\n    }\n}\n","// eslint-disable-next-line @typescript-eslint/unbound-method\nconst objectToString = Object.prototype.toString;\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isError(wat) {\n  switch (objectToString.call(wat)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n/**\n * Checks whether given value is an instance of the given built-in class.\n *\n * @param wat The value to be checked\n * @param className\n * @returns A boolean representing the result.\n */\nfunction isBuiltin(wat, className) {\n  return objectToString.call(wat) === `[object ${className}]`;\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isErrorEvent(wat) {\n  return isBuiltin(wat, 'ErrorEvent');\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMError(wat) {\n  return isBuiltin(wat, 'DOMError');\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isDOMException(wat) {\n  return isBuiltin(wat, 'DOMException');\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isString(wat) {\n  return isBuiltin(wat, 'String');\n}\n\n/**\n * Checks whether given value is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPrimitive(wat) {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isPlainObject(wat) {\n  return isBuiltin(wat, 'Object');\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isEvent(wat) {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isElement(wat) {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isRegExp(wat) {\n  return isBuiltin(wat, 'RegExp');\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nfunction isThenable(wat) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isSyntheticEvent(wat) {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n\n/**\n * Checks whether given value is NaN\n * {@link isNaN}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nfunction isNaN(wat) {\n  return typeof wat === 'number' && wat !== wat;\n}\n\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nfunction isInstanceOf(wat, base) {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n\nexport { isDOMError, isDOMException, isElement, isError, isErrorEvent, isEvent, isInstanceOf, isNaN, isPlainObject, isPrimitive, isRegExp, isString, isSyntheticEvent, isThenable };\n//# sourceMappingURL=is.js.map\n","/** Internal global with common properties and Sentry extensions  */\n\n// The code below for 'isGlobalObj' and 'GLOBAL_OBJ' was copied from core-js before modification\n// https://github.com/zloirock/core-js/blob/1b944df55282cdc99c90db5f49eb0b6eda2cc0a3/packages/core-js/internals/global.js\n// core-js has the following licence:\n//\n// Copyright (c) 2014-2022 Denis Pushkarev\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/** Returns 'obj' if it's the global object, otherwise returns undefined */\nfunction isGlobalObj(obj) {\n  return obj && obj.Math == Math ? obj : undefined;\n}\n\n/** Get's the global object for the current JavaScript runtime */\nconst GLOBAL_OBJ =\n  (typeof globalThis == 'object' && isGlobalObj(globalThis)) ||\n  // eslint-disable-next-line no-restricted-globals\n  (typeof window == 'object' && isGlobalObj(window)) ||\n  (typeof self == 'object' && isGlobalObj(self)) ||\n  (typeof global == 'object' && isGlobalObj(global)) ||\n  (function () {\n    return this;\n  })() ||\n  {};\n\n/**\n * @deprecated Use GLOBAL_OBJ instead or WINDOW from @sentry/browser. This will be removed in v8\n */\nfunction getGlobalObject() {\n  return GLOBAL_OBJ ;\n}\n\n/**\n * Returns a global singleton contained in the global `__SENTRY__` object.\n *\n * If the singleton doesn't already exist in `__SENTRY__`, it will be created using the given factory\n * function and added to the `__SENTRY__` object.\n *\n * @param name name of the global singleton on __SENTRY__\n * @param creator creator Factory function to create the singleton if it doesn't already exist on `__SENTRY__`\n * @param obj (Optional) The global object on which to look for `__SENTRY__`, if not `GLOBAL_OBJ`'s return value\n * @returns the singleton\n */\nfunction getGlobalSingleton(name, creator, obj) {\n  const gbl = (obj || GLOBAL_OBJ) ;\n  const __SENTRY__ = (gbl.__SENTRY__ = gbl.__SENTRY__ || {});\n  const singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());\n  return singleton;\n}\n\nexport { GLOBAL_OBJ, getGlobalObject, getGlobalSingleton };\n//# sourceMappingURL=worldwide.js.map\n","import { getGlobalSingleton, GLOBAL_OBJ } from './worldwide.js';\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\nconst CONSOLE_LEVELS = ['debug', 'info', 'warn', 'error', 'log', 'assert', 'trace'] ;\n\n/**\n * Temporarily disable sentry console instrumentations.\n *\n * @param callback The function to run against the original `console` messages\n * @returns The results of the callback\n */\nfunction consoleSandbox(callback) {\n  if (!('console' in GLOBAL_OBJ)) {\n    return callback();\n  }\n\n  const originalConsole = GLOBAL_OBJ.console ;\n  const wrappedLevels = {};\n\n  // Restore all wrapped console methods\n  CONSOLE_LEVELS.forEach(level => {\n    // TODO(v7): Remove this check as it's only needed for Node 6\n    const originalWrappedFunc =\n      originalConsole[level] && (originalConsole[level] ).__sentry_original__;\n    if (level in originalConsole && originalWrappedFunc) {\n      wrappedLevels[level] = originalConsole[level] ;\n      originalConsole[level] = originalWrappedFunc ;\n    }\n  });\n\n  try {\n    return callback();\n  } finally {\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(level => {\n      originalConsole[level] = wrappedLevels[level ];\n    });\n  }\n}\n\nfunction makeLogger() {\n  let enabled = false;\n  const logger = {\n    enable: () => {\n      enabled = true;\n    },\n    disable: () => {\n      enabled = false;\n    },\n  };\n\n  if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n    CONSOLE_LEVELS.forEach(name => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      logger[name] = (...args) => {\n        if (enabled) {\n          consoleSandbox(() => {\n            GLOBAL_OBJ.console[name](`${PREFIX}[${name}]:`, ...args);\n          });\n        }\n      };\n    });\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      logger[name] = () => undefined;\n    });\n  }\n\n  return logger ;\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nlet logger;\nif ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n  logger = getGlobalSingleton('logger', makeLogger);\n} else {\n  logger = makeLogger();\n}\n\nexport { CONSOLE_LEVELS, consoleSandbox, logger };\n//# sourceMappingURL=logger.js.map\n","import { htmlTreeAsString } from './browser.js';\nimport { isError, isEvent, isInstanceOf, isElement, isPlainObject, isPrimitive } from './is.js';\nimport { truncate } from './string.js';\n\n/**\n * Replace a method in an object with a wrapped version of itself.\n *\n * @param source An object that contains a method to be wrapped.\n * @param name The name of the method to be wrapped.\n * @param replacementFactory A higher-order function that takes the original version of the given method and returns a\n * wrapped version. Note: The function returned by `replacementFactory` needs to be a non-arrow function, in order to\n * preserve the correct value of `this`, and the original method must be called using `origMethod.call(this, <other\n * args>)` or `origMethod.apply(this, [<other args>])` (rather than being called directly), again to preserve `this`.\n * @returns void\n */\nfunction fill(source, name, replacementFactory) {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] ;\n  const wrapped = replacementFactory(original) ;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      markFunctionWrapped(wrapped, original);\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Defines a non-enumerable property on the given object.\n *\n * @param obj The object on which to set the property\n * @param name The name of the property to be set\n * @param value The value to which to set the property\n */\nfunction addNonEnumerableProperty(obj, name, value) {\n  Object.defineProperty(obj, name, {\n    // enumerable: false, // the default, so we can save on bundle size by not explicitly setting it\n    value: value,\n    writable: true,\n    configurable: true,\n  });\n}\n\n/**\n * Remembers the original function on the wrapped function and\n * patches up the prototype.\n *\n * @param wrapped the wrapper function\n * @param original the original function that gets wrapped\n */\nfunction markFunctionWrapped(wrapped, original) {\n  const proto = original.prototype || {};\n  wrapped.prototype = original.prototype = proto;\n  addNonEnumerableProperty(wrapped, '__sentry_original__', original);\n}\n\n/**\n * This extracts the original function if available.  See\n * `markFunctionWrapped` for more information.\n *\n * @param func the function to unwrap\n * @returns the unwrapped version of the function if available.\n */\nfunction getOriginalFunction(func) {\n  return func.__sentry_original__;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nfunction urlEncode(object) {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argurment itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject(value)\n\n {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    };\n  } else if (isEvent(value)) {\n    const newObj\n\n = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    };\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      newObj.detail = value.detail;\n    }\n\n    return newObj;\n  } else {\n    return value;\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target) {\n  try {\n    return isElement(target) ? htmlTreeAsString(target) : Object.prototype.toString.call(target);\n  } catch (_oO) {\n    return '<unknown>';\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj) {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps = {};\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj )[property];\n      }\n    }\n    return extractedProps;\n  } else {\n    return {};\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception, maxLength = 40) {\n  const keys = Object.keys(convertToPlainObject(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return a new object having removed all fields whose value was `undefined`.\n * Works recursively on objects and arrays.\n *\n * Attention: This function keeps circular references in the returned object.\n */\nfunction dropUndefinedKeys(inputValue) {\n  // This map keeps track of what already visited nodes map to.\n  // Our Set - based memoBuilder doesn't work here because we want to the output object to have the same circular\n  // references as the input object.\n  const memoizationMap = new Map();\n\n  // This function just proxies `_dropUndefinedKeys` to keep the `memoBuilder` out of this function's API\n  return _dropUndefinedKeys(inputValue, memoizationMap);\n}\n\nfunction _dropUndefinedKeys(inputValue, memoizationMap) {\n  if (isPlainObject(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the object it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = {};\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    for (const key of Object.keys(inputValue)) {\n      if (typeof inputValue[key] !== 'undefined') {\n        returnValue[key] = _dropUndefinedKeys(inputValue[key], memoizationMap);\n      }\n    }\n\n    return returnValue ;\n  }\n\n  if (Array.isArray(inputValue)) {\n    // If this node has already been visited due to a circular reference, return the array it was mapped to in the new object\n    const memoVal = memoizationMap.get(inputValue);\n    if (memoVal !== undefined) {\n      return memoVal ;\n    }\n\n    const returnValue = [];\n    // Store the mapping of this value in case we visit it again, in case of circular data\n    memoizationMap.set(inputValue, returnValue);\n\n    inputValue.forEach((item) => {\n      returnValue.push(_dropUndefinedKeys(item, memoizationMap));\n    });\n\n    return returnValue ;\n  }\n\n  return inputValue;\n}\n\n/**\n * Ensure that something is an object.\n *\n * Turns `undefined` and `null` into `String`s and all other primitives into instances of their respective wrapper\n * classes (String, Boolean, Number, etc.). Acts as the identity function on non-primitives.\n *\n * @param wat The subject of the objectification\n * @returns A version of `wat` which can safely be used with `Object` class methods\n */\nfunction objectify(wat) {\n  let objectified;\n  switch (true) {\n    case wat === undefined || wat === null:\n      objectified = new String(wat);\n      break;\n\n    // Though symbols and bigints do have wrapper classes (`Symbol` and `BigInt`, respectively), for whatever reason\n    // those classes don't have constructors which can be used with the `new` keyword. We therefore need to cast each as\n    // an object in order to wrap it.\n    case typeof wat === 'symbol' || typeof wat === 'bigint':\n      objectified = Object(wat);\n      break;\n\n    // this will catch the remaining primitives: `String`, `Number`, and `Boolean`\n    case isPrimitive(wat):\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      objectified = new (wat ).constructor(wat);\n      break;\n\n    // by process of elimination, at this point we know that `wat` must already be an object\n    default:\n      objectified = wat;\n      break;\n  }\n  return objectified;\n}\n\nexport { addNonEnumerableProperty, convertToPlainObject, dropUndefinedKeys, extractExceptionKeysForMessage, fill, getOriginalFunction, markFunctionWrapped, objectify, urlEncode };\n//# sourceMappingURL=object.js.map\n","const STACKTRACE_FRAME_LIMIT = 50;\n// Used to sanitize webpack (error: *) wrapped stack errors\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/;\n\n/**\n * Creates a stack parser with the supplied line parsers\n *\n * StackFrames are returned in the correct order for Sentry Exception\n * frames and with Sentry SDK internal frames removed from the top and bottom\n *\n */\nfunction createStackParser(...parsers) {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map(p => p[1]);\n\n  return (stack, skipFirst = 0) => {\n    const frames = [];\n    const lines = stack.split('\\n');\n\n    for (let i = skipFirst; i < lines.length; i++) {\n      const line = lines[i];\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      // Many of the regular expressions use backtracking which results in run time that increases exponentially with\n      // input size. Huge strings can result in hangs/Denial of Service:\n      // https://github.com/getsentry/sentry-javascript/issues/2286\n      if (line.length > 1024) {\n        continue;\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line;\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine);\n\n        if (frame) {\n          frames.push(frame);\n          break;\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break;\n      }\n    }\n\n    return stripSentryFramesAndReverse(frames);\n  };\n}\n\n/**\n * Gets a stack parser implementation from Options.stackParser\n * @see Options\n *\n * If options contains an array of line parsers, it is converted into a parser\n */\nfunction stackParserFromStackParserOptions(stackParser) {\n  if (Array.isArray(stackParser)) {\n    return createStackParser(...stackParser);\n  }\n  return stackParser;\n}\n\n/**\n * Removes Sentry frames from the top and bottom of the stack if present and enforces a limit of max number of frames.\n * Assumes stack input is ordered from top to bottom and returns the reverse representation so call site of the\n * function that caused the crash is the last frame in the array.\n * @hidden\n */\nfunction stripSentryFramesAndReverse(stack) {\n  if (!stack.length) {\n    return [];\n  }\n\n  const localStack = stack.slice(0, STACKTRACE_FRAME_LIMIT);\n\n  const lastFrameFunction = localStack[localStack.length - 1].function;\n  // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n  if (lastFrameFunction && /sentryWrapped/.test(lastFrameFunction)) {\n    localStack.pop();\n  }\n\n  // Reversing in the middle of the procedure allows us to just pop the values off the stack\n  localStack.reverse();\n\n  const firstFrameFunction = localStack[localStack.length - 1].function;\n  // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n  if (firstFrameFunction && /captureMessage|captureException/.test(firstFrameFunction)) {\n    localStack.pop();\n  }\n\n  return localStack.map(frame => ({\n    ...frame,\n    filename: frame.filename || localStack[localStack.length - 1].filename,\n    function: frame.function || '?',\n  }));\n}\n\nconst defaultFunctionName = '<anonymous>';\n\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n  try {\n    if (!fn || typeof fn !== 'function') {\n      return defaultFunctionName;\n    }\n    return fn.name || defaultFunctionName;\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return defaultFunctionName;\n  }\n}\n\n// eslint-disable-next-line complexity\nfunction node(getModule) {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/;\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/;\n\n  // eslint-disable-next-line complexity\n  return (line) => {\n    const lineMatch = line.match(FULL_MATCH);\n\n    if (lineMatch) {\n      let object;\n      let method;\n      let functionName;\n      let typeName;\n      let methodName;\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n\n        let methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--;\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart);\n          method = functionName.slice(methodStart + 1);\n          const objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1);\n            object = object.slice(0, objectEnd);\n          }\n        }\n        typeName = undefined;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined;\n        functionName = undefined;\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || '<anonymous>';\n        functionName = typeName ? `${typeName}.${methodName}` : methodName;\n      }\n\n      let filename = lineMatch[2] && lineMatch[2].startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2];\n      const isNative = lineMatch[5] === 'native';\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5];\n      }\n\n      const isInternal =\n        isNative || (filename && !filename.startsWith('/') && !filename.startsWith('.') && !filename.includes(':\\\\'));\n\n      // in_app is all that's not an internal Node function or a module within node_modules\n      // note that isNative appears to return true even for node core libraries\n      // see https://github.com/getsentry/raven-node/issues/176\n\n      const in_app = !isInternal && filename !== undefined && !filename.includes('node_modules/');\n\n      return {\n        filename,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: parseInt(lineMatch[3], 10) || undefined,\n        colno: parseInt(lineMatch[4], 10) || undefined,\n        in_app,\n      };\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n      };\n    }\n\n    return undefined;\n  };\n}\n\n/**\n * Node.js stack line parser\n *\n * This is in @sentry/utils so it can be used from the Electron SDK in the browser for when `nodeIntegration == true`.\n * This allows it to be used without referencing or importing any node specific code which causes bundlers to complain\n */\nfunction nodeStackLineParser(getModule) {\n  return [90, node(getModule)];\n}\n\nexport { createStackParser, getFunctionName, nodeStackLineParser, stackParserFromStackParserOptions, stripSentryFramesAndReverse };\n//# sourceMappingURL=stacktrace.js.map\n","import { logger } from './logger.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsErrorEvent() {\n  try {\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMError() {\n  try {\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore It really needs 1 argument, not 0.\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsDOMException() {\n  try {\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsFetch() {\n  if (!('fetch' in WINDOW)) {\n    return false;\n  }\n\n  try {\n    new Headers();\n    new Request('http://www.example.com');\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * isNativeFetch checks if the given function is a native implementation of fetch()\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNativeFetch(func) {\n  return func && /^function fetch\\(\\)\\s+\\{\\s+\\[native code\\]\\s+\\}$/.test(func.toString());\n}\n\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\nfunction supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  // Fast path to avoid DOM I/O\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  if (isNativeFetch(WINDOW.fetch)) {\n    return true;\n  }\n\n  // window.fetch is implemented, but is polyfilled or already wrapped (e.g: by a chrome extension)\n  // so create a \"pure\" iframe to see if that has native fetch\n  let result = false;\n  const doc = WINDOW.document;\n  // eslint-disable-next-line deprecation/deprecation\n  if (doc && typeof (doc.createElement ) === 'function') {\n    try {\n      const sandbox = doc.createElement('iframe');\n      sandbox.hidden = true;\n      doc.head.appendChild(sandbox);\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        result = isNativeFetch(sandbox.contentWindow.fetch);\n      }\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReportingObserver() {\n  return 'ReportingObserver' in WINDOW;\n}\n\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default'\n  // (see https://caniuse.com/#feat=referrer-policy),\n  // it doesn't. And it throws an exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    new Request('_', {\n      referrerPolicy: 'origin' ,\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nfunction supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const chrome = (WINDOW ).chrome;\n  const isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n  const hasHistoryApi = 'history' in WINDOW && !!WINDOW.history.pushState && !!WINDOW.history.replaceState;\n\n  return !isChromePackagedApp && hasHistoryApi;\n}\n\nexport { isNativeFetch, supportsDOMError, supportsDOMException, supportsErrorEvent, supportsFetch, supportsHistory, supportsNativeFetch, supportsReferrerPolicy, supportsReportingObserver };\n//# sourceMappingURL=supports.js.map\n","import { isInstanceOf, isString } from './is.js';\nimport { logger, CONSOLE_LEVELS } from './logger.js';\nimport { fill } from './object.js';\nimport { getFunctionName } from './stacktrace.js';\nimport { supportsNativeFetch, supportsHistory } from './supports.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * Instrument native APIs to call handlers that can be used to create breadcrumbs, APM spans etc.\n *  - Console API\n *  - Fetch API\n *  - XHR API\n *  - History API\n *  - DOM API (click/typing)\n *  - Error API\n *  - UnhandledRejection API\n */\n\nconst handlers = {};\nconst instrumented = {};\n\n/** Instruments given API */\nfunction instrument(type) {\n  if (instrumented[type]) {\n    return;\n  }\n\n  instrumented[type] = true;\n\n  switch (type) {\n    case 'console':\n      instrumentConsole();\n      break;\n    case 'dom':\n      instrumentDOM();\n      break;\n    case 'xhr':\n      instrumentXHR();\n      break;\n    case 'fetch':\n      instrumentFetch();\n      break;\n    case 'history':\n      instrumentHistory();\n      break;\n    case 'error':\n      instrumentError();\n      break;\n    case 'unhandledrejection':\n      instrumentUnhandledRejection();\n      break;\n    default:\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('unknown instrumentation type:', type);\n      return;\n  }\n}\n\n/**\n * Add handler that will be called when given type of instrumentation triggers.\n * Use at your own risk, this might break without changelog notice, only used internally.\n * @hidden\n */\nfunction addInstrumentationHandler(type, callback) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(callback);\n  instrument(type);\n}\n\n/** JSDoc */\nfunction triggerHandlers(type, data) {\n  if (!type || !handlers[type]) {\n    return;\n  }\n\n  for (const handler of handlers[type] || []) {\n    try {\n      handler(data);\n    } catch (e) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${getFunctionName(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\n/** JSDoc */\nfunction instrumentConsole() {\n  if (!('console' in WINDOW)) {\n    return;\n  }\n\n  CONSOLE_LEVELS.forEach(function (level) {\n    if (!(level in WINDOW.console)) {\n      return;\n    }\n\n    fill(WINDOW.console, level, function (originalConsoleMethod) {\n      return function (...args) {\n        triggerHandlers('console', { args, level });\n\n        // this fails for some browsers. :(\n        if (originalConsoleMethod) {\n          originalConsoleMethod.apply(WINDOW.console, args);\n        }\n      };\n    });\n  });\n}\n\n/** JSDoc */\nfunction instrumentFetch() {\n  if (!supportsNativeFetch()) {\n    return;\n  }\n\n  fill(WINDOW, 'fetch', function (originalFetch) {\n    return function (...args) {\n      const handlerData = {\n        args,\n        fetchData: {\n          method: getFetchMethod(args),\n          url: getFetchUrl(args),\n        },\n        startTimestamp: Date.now(),\n      };\n\n      triggerHandlers('fetch', {\n        ...handlerData,\n      });\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      return originalFetch.apply(WINDOW, args).then(\n        (response) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            response,\n          });\n          return response;\n        },\n        (error) => {\n          triggerHandlers('fetch', {\n            ...handlerData,\n            endTimestamp: Date.now(),\n            error,\n          });\n          // NOTE: If you are a Sentry user, and you are seeing this stack frame,\n          //       it means the sentry.javascript SDK caught an error invoking your application code.\n          //       This is expected behavior and NOT indicative of a bug with sentry.javascript.\n          throw error;\n        },\n      );\n    };\n  });\n}\n\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/** Extract `method` from fetch call arguments */\nfunction getFetchMethod(fetchArgs = []) {\n  if ('Request' in WINDOW && isInstanceOf(fetchArgs[0], Request) && fetchArgs[0].method) {\n    return String(fetchArgs[0].method).toUpperCase();\n  }\n  if (fetchArgs[1] && fetchArgs[1].method) {\n    return String(fetchArgs[1].method).toUpperCase();\n  }\n  return 'GET';\n}\n\n/** Extract `url` from fetch call arguments */\nfunction getFetchUrl(fetchArgs = []) {\n  if (typeof fetchArgs[0] === 'string') {\n    return fetchArgs[0];\n  }\n  if ('Request' in WINDOW && isInstanceOf(fetchArgs[0], Request)) {\n    return fetchArgs[0].url;\n  }\n  return String(fetchArgs[0]);\n}\n/* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n/** JSDoc */\nfunction instrumentXHR() {\n  if (!('XMLHttpRequest' in WINDOW)) {\n    return;\n  }\n\n  const xhrproto = XMLHttpRequest.prototype;\n\n  fill(xhrproto, 'open', function (originalOpen) {\n    return function ( ...args) {\n      const url = args[1];\n      const xhrInfo = (this.__sentry_xhr__ = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n        url: args[1],\n      });\n\n      // if Sentry key appears in URL, don't capture it as a request\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (isString(url) && xhrInfo.method === 'POST' && url.match(/sentry_key/)) {\n        this.__sentry_own_request__ = true;\n      }\n\n      const onreadystatechangeHandler = () => {\n        // For whatever reason, this is not the same instance here as from the outer method\n        const xhrInfo = this.__sentry_xhr__;\n\n        if (!xhrInfo) {\n          return;\n        }\n\n        if (this.readyState === 4) {\n          try {\n            // touching statusCode in some platforms throws\n            // an exception\n            xhrInfo.status_code = this.status;\n          } catch (e) {\n            /* do nothing */\n          }\n\n          triggerHandlers('xhr', {\n            args: args ,\n            endTimestamp: Date.now(),\n            startTimestamp: Date.now(),\n            xhr: this,\n          } );\n        }\n      };\n\n      if ('onreadystatechange' in this && typeof this.onreadystatechange === 'function') {\n        fill(this, 'onreadystatechange', function (original) {\n          return function ( ...readyStateArgs) {\n            onreadystatechangeHandler();\n            return original.apply(this, readyStateArgs);\n          };\n        });\n      } else {\n        this.addEventListener('readystatechange', onreadystatechangeHandler);\n      }\n\n      return originalOpen.apply(this, args);\n    };\n  });\n\n  fill(xhrproto, 'send', function (originalSend) {\n    return function ( ...args) {\n      if (this.__sentry_xhr__ && args[0] !== undefined) {\n        this.__sentry_xhr__.body = args[0];\n      }\n\n      triggerHandlers('xhr', {\n        args,\n        startTimestamp: Date.now(),\n        xhr: this,\n      });\n\n      return originalSend.apply(this, args);\n    };\n  });\n}\n\nlet lastHref;\n\n/** JSDoc */\nfunction instrumentHistory() {\n  if (!supportsHistory()) {\n    return;\n  }\n\n  const oldOnPopState = WINDOW.onpopstate;\n  WINDOW.onpopstate = function ( ...args) {\n    const to = WINDOW.location.href;\n    // keep track of the current URL state, as we always receive only the updated state\n    const from = lastHref;\n    lastHref = to;\n    triggerHandlers('history', {\n      from,\n      to,\n    });\n    if (oldOnPopState) {\n      // Apparently this can throw in Firefox when incorrectly implemented plugin is installed.\n      // https://github.com/getsentry/sentry-javascript/issues/3344\n      // https://github.com/bugsnag/bugsnag-js/issues/469\n      try {\n        return oldOnPopState.apply(this, args);\n      } catch (_oO) {\n        // no-empty\n      }\n    }\n  };\n\n  /** @hidden */\n  function historyReplacementFunction(originalHistoryFunction) {\n    return function ( ...args) {\n      const url = args.length > 2 ? args[2] : undefined;\n      if (url) {\n        // coerce to string (this is what pushState does)\n        const from = lastHref;\n        const to = String(url);\n        // keep track of the current URL state, as we always receive only the updated state\n        lastHref = to;\n        triggerHandlers('history', {\n          from,\n          to,\n        });\n      }\n      return originalHistoryFunction.apply(this, args);\n    };\n  }\n\n  fill(WINDOW.history, 'pushState', historyReplacementFunction);\n  fill(WINDOW.history, 'replaceState', historyReplacementFunction);\n}\n\nconst debounceDuration = 1000;\nlet debounceTimerID;\nlet lastCapturedEvent;\n\n/**\n * Decide whether the current event should finish the debounce of previously captured one.\n * @param previous previously captured event\n * @param current event to be captured\n */\nfunction shouldShortcircuitPreviousDebounce(previous, current) {\n  // If there was no previous event, it should always be swapped for the new one.\n  if (!previous) {\n    return true;\n  }\n\n  // If both events have different type, then user definitely performed two separate actions. e.g. click + keypress.\n  if (previous.type !== current.type) {\n    return true;\n  }\n\n  try {\n    // If both events have the same type, it's still possible that actions were performed on different targets.\n    // e.g. 2 clicks on different buttons.\n    if (previous.target !== current.target) {\n      return true;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  // If both events have the same type _and_ same `target` (an element which triggered an event, _not necessarily_\n  // to which an event listener was attached), we treat them as the same action, as we want to capture\n  // only one breadcrumb. e.g. multiple clicks on the same button, or typing inside a user input box.\n  return false;\n}\n\n/**\n * Decide whether an event should be captured.\n * @param event event to be captured\n */\nfunction shouldSkipDOMEvent(event) {\n  // We are only interested in filtering `keypress` events for now.\n  if (event.type !== 'keypress') {\n    return false;\n  }\n\n  try {\n    const target = event.target ;\n\n    if (!target || !target.tagName) {\n      return true;\n    }\n\n    // Only consider keypress events on actual input elements. This will disregard keypresses targeting body\n    // e.g.tabbing through elements, hotkeys, etc.\n    if (target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable) {\n      return false;\n    }\n  } catch (e) {\n    // just accessing `target` property can throw an exception in some rare circumstances\n    // see: https://github.com/getsentry/sentry-javascript/issues/838\n  }\n\n  return true;\n}\n\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param handler function that will be triggered\n * @param globalListener indicates whether event was captured by the global event listener\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nfunction makeDOMEventHandler(handler, globalListener = false) {\n  return (event) => {\n    // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors).\n    // Ignore if we've already captured that event.\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    // We always want to skip _some_ events.\n    if (shouldSkipDOMEvent(event)) {\n      return;\n    }\n\n    const name = event.type === 'keypress' ? 'input' : event.type;\n\n    // If there is no debounce timer, it means that we can safely capture the new event and store it for future comparisons.\n    if (debounceTimerID === undefined) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n    // If there is a debounce awaiting, see if the new event is different enough to treat it as a unique one.\n    // If that's the case, emit the previous event and store locally the newly-captured DOM event.\n    else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {\n      handler({\n        event: event,\n        name,\n        global: globalListener,\n      });\n      lastCapturedEvent = event;\n    }\n\n    // Start a new debounce timer that will prevent us from capturing multiple events that should be grouped together.\n    clearTimeout(debounceTimerID);\n    debounceTimerID = WINDOW.setTimeout(() => {\n      debounceTimerID = undefined;\n    }, debounceDuration);\n  };\n}\n\n/** JSDoc */\nfunction instrumentDOM() {\n  if (!('document' in WINDOW)) {\n    return;\n  }\n\n  // Make it so that any click or keypress that is unhandled / bubbled up all the way to the document triggers our dom\n  // handlers. (Normally we have only one, which captures a breadcrumb for each click or keypress.) Do this before\n  // we instrument `addEventListener` so that we don't end up attaching this handler twice.\n  const triggerDOMHandler = triggerHandlers.bind(null, 'dom');\n  const globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);\n  WINDOW.document.addEventListener('click', globalDOMEventHandler, false);\n  WINDOW.document.addEventListener('keypress', globalDOMEventHandler, false);\n\n  // After hooking into click and keypress events bubbled up to `document`, we also hook into user-handled\n  // clicks & keypresses, by adding an event listener of our own to any element to which they add a listener. That\n  // way, whenever one of their handlers is triggered, ours will be, too. (This is needed because their handler\n  // could potentially prevent the event from bubbling up to our global listeners. This way, our handler are still\n  // guaranteed to fire at least once.)\n  ['EventTarget', 'Node'].forEach((target) => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const proto = (WINDOW )[target] && (WINDOW )[target].prototype;\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, no-prototype-builtins\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (originalAddEventListener) {\n      return function (\n\n        type,\n        listener,\n        options,\n      ) {\n        if (type === 'click' || type == 'keypress') {\n          try {\n            const el = this ;\n            const handlers = (el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {});\n            const handlerForType = (handlers[type] = handlers[type] || { refCount: 0 });\n\n            if (!handlerForType.handler) {\n              const handler = makeDOMEventHandler(triggerDOMHandler);\n              handlerForType.handler = handler;\n              originalAddEventListener.call(this, type, handler, options);\n            }\n\n            handlerForType.refCount++;\n          } catch (e) {\n            // Accessing dom properties is always fragile.\n            // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n          }\n        }\n\n        return originalAddEventListener.call(this, type, listener, options);\n      };\n    });\n\n    fill(\n      proto,\n      'removeEventListener',\n      function (originalRemoveEventListener) {\n        return function (\n\n          type,\n          listener,\n          options,\n        ) {\n          if (type === 'click' || type == 'keypress') {\n            try {\n              const el = this ;\n              const handlers = el.__sentry_instrumentation_handlers__ || {};\n              const handlerForType = handlers[type];\n\n              if (handlerForType) {\n                handlerForType.refCount--;\n                // If there are no longer any custom handlers of the current type on this element, we can remove ours, too.\n                if (handlerForType.refCount <= 0) {\n                  originalRemoveEventListener.call(this, type, handlerForType.handler, options);\n                  handlerForType.handler = undefined;\n                  delete handlers[type]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n                }\n\n                // If there are no longer any custom handlers of any type on this element, cleanup everything.\n                if (Object.keys(handlers).length === 0) {\n                  delete el.__sentry_instrumentation_handlers__;\n                }\n              }\n            } catch (e) {\n              // Accessing dom properties is always fragile.\n              // Also allows us to skip `addEventListenrs` calls with no proper `this` context.\n            }\n          }\n\n          return originalRemoveEventListener.call(this, type, listener, options);\n        };\n      },\n    );\n  });\n}\n\nlet _oldOnErrorHandler = null;\n/** JSDoc */\nfunction instrumentError() {\n  _oldOnErrorHandler = WINDOW.onerror;\n\n  WINDOW.onerror = function (msg, url, line, column, error) {\n    triggerHandlers('error', {\n      column,\n      error,\n      line,\n      msg,\n      url,\n    });\n\n    if (_oldOnErrorHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnErrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  };\n}\n\nlet _oldOnUnhandledRejectionHandler = null;\n/** JSDoc */\nfunction instrumentUnhandledRejection() {\n  _oldOnUnhandledRejectionHandler = WINDOW.onunhandledrejection;\n\n  WINDOW.onunhandledrejection = function (e) {\n    triggerHandlers('unhandledrejection', e);\n\n    if (_oldOnUnhandledRejectionHandler) {\n      // eslint-disable-next-line prefer-rest-params\n      return _oldOnUnhandledRejectionHandler.apply(this, arguments);\n    }\n\n    return true;\n  };\n}\n\nexport { addInstrumentationHandler };\n//# sourceMappingURL=instrument.js.map\n","import { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States; (function (States) {\n  /** Pending */\n  const PENDING = 0; States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  const RESOLVED = 1; States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  const REJECTED = 2; States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise {\n   __init() {this._state = States.PENDING;}\n   __init2() {this._handlers = [];}\n\n   constructor(\n    executor,\n  ) {SyncPromise.prototype.__init.call(this);SyncPromise.prototype.__init2.call(this);SyncPromise.prototype.__init3.call(this);SyncPromise.prototype.__init4.call(this);SyncPromise.prototype.__init5.call(this);SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n   then(\n    onfulfilled,\n    onrejected,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result );\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n   catch(\n    onrejected,\n  ) {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n   finally(onfinally) {\n    return new SyncPromise((resolve, reject) => {\n      let val;\n      let isRejected;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val );\n      });\n    });\n  }\n\n  /** JSDoc */\n    __init3() {this._resolve = (value) => {\n    this._setResult(States.RESOLVED, value);\n  };}\n\n  /** JSDoc */\n    __init4() {this._reject = (reason) => {\n    this._setResult(States.REJECTED, reason);\n  };}\n\n  /** JSDoc */\n    __init5() {this._setResult = (state, value) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value ).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };}\n\n  /** JSDoc */\n    __init6() {this._executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value );\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };}\n}\n\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };\n//# sourceMappingURL=syncpromise.js.map\n","import { addNonEnumerableProperty } from './object.js';\nimport { snipLine } from './string.js';\nimport { GLOBAL_OBJ } from './worldwide.js';\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nfunction uuid4() {\n  const gbl = GLOBAL_OBJ ;\n  const crypto = gbl.crypto || gbl.msCrypto;\n\n  if (crypto && crypto.randomUUID) {\n    return crypto.randomUUID().replace(/-/g, '');\n  }\n\n  const getRandomByte =\n    crypto && crypto.getRandomValues ? () => crypto.getRandomValues(new Uint8Array(1))[0] : () => Math.random() * 16;\n\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  // Concatenating the following numbers as strings results in '10000000100040008000100000000000'\n  return (([1e7] ) + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, c =>\n    // eslint-disable-next-line no-bitwise\n    ((c ) ^ ((getRandomByte() & 15) >> ((c ) / 4))).toString(16),\n  );\n}\n\nfunction getFirstException(event) {\n  return event.exception && event.exception.values ? event.exception.values[0] : undefined;\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nfunction getEventDescription(event) {\n  const { message, event_id: eventId } = event;\n  if (message) {\n    return message;\n  }\n\n  const firstException = getFirstException(event);\n  if (firstException) {\n    if (firstException.type && firstException.value) {\n      return `${firstException.type}: ${firstException.value}`;\n    }\n    return firstException.type || firstException.value || eventId || '<unknown>';\n  }\n  return eventId || '<unknown>';\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nfunction addExceptionTypeValue(event, value, type) {\n  const exception = (event.exception = event.exception || {});\n  const values = (exception.values = exception.values || []);\n  const firstException = (values[0] = values[0] || {});\n  if (!firstException.value) {\n    firstException.value = value || '';\n  }\n  if (!firstException.type) {\n    firstException.type = type || 'Error';\n  }\n}\n\n/**\n * Adds exception mechanism data to a given event. Uses defaults if the second parameter is not passed.\n *\n * @param event The event to modify.\n * @param newMechanism Mechanism data to add to the event.\n * @hidden\n */\nfunction addExceptionMechanism(event, newMechanism) {\n  const firstException = getFirstException(event);\n  if (!firstException) {\n    return;\n  }\n\n  const defaultMechanism = { type: 'generic', handled: true };\n  const currentMechanism = firstException.mechanism;\n  firstException.mechanism = { ...defaultMechanism, ...currentMechanism, ...newMechanism };\n\n  if (newMechanism && 'data' in newMechanism) {\n    const mergedData = { ...(currentMechanism && currentMechanism.data), ...newMechanism.data };\n    firstException.mechanism.data = mergedData;\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP =\n  /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nfunction parseSemver(input) {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nfunction addContextToFrame(lines, frame, linesOfContext = 5) {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping\n  if (frame.lineno === undefined) {\n    return;\n  }\n\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, frame.lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line) => snipLine(line, 0));\n}\n\n/**\n * Checks whether or not we've already captured the given exception (note: not an identical exception - the very object\n * in question), and marks it captured if not.\n *\n * This is useful because it's possible for an error to get captured by more than one mechanism. After we intercept and\n * record an error, we rethrow it (assuming we've intercepted it before it's reached the top-level global handlers), so\n * that we don't interfere with whatever effects the error might have had were the SDK not there. At that point, because\n * the error has been rethrown, it's possible for it to bubble up to some other code we've instrumented. If it's not\n * caught after that, it will bubble all the way up to the global handlers (which of course we also instrument). This\n * function helps us ensure that even if we encounter the same error more than once, we only record it the first time we\n * see it.\n *\n * Note: It will ignore primitives (always return `false` and not mark them as seen), as properties can't be set on\n * them. {@link: Object.objectify} can be used on exceptions to convert any that are primitives into their equivalent\n * object wrapper forms so that this check will always work. However, because we need to flag the exact object which\n * will get rethrown, and because that rethrowing happens outside of the event processing pipeline, the objectification\n * must be done before the exception captured.\n *\n * @param A thrown exception to check or flag as having been seen\n * @returns `true` if the exception has already been captured, `false` if not (with the side effect of marking it seen)\n */\nfunction checkOrSetAlreadyCaught(exception) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  if (exception && (exception ).__sentry_captured__) {\n    return true;\n  }\n\n  try {\n    // set it this way rather than by assignment so that it's not ennumerable and therefore isn't recorded by the\n    // `ExtraErrorData` integration\n    addNonEnumerableProperty(exception , '__sentry_captured__', true);\n  } catch (err) {\n    // `exception` is a primitive, so we can't mark it seen\n  }\n\n  return false;\n}\n\n/**\n * Checks whether the given input is already an array, and if it isn't, wraps it in one.\n *\n * @param maybeArray Input to turn into an array, if necessary\n * @returns The input, if already an array, or an array with the input as the only element, if not\n */\nfunction arrayify(maybeArray) {\n  return Array.isArray(maybeArray) ? maybeArray : [maybeArray];\n}\n\nexport { addContextToFrame, addExceptionMechanism, addExceptionTypeValue, arrayify, checkOrSetAlreadyCaught, getEventDescription, parseSemver, uuid4 };\n//# sourceMappingURL=misc.js.map\n","import { isBrowserBundle } from './env.js';\n\n/**\n * NOTE: In order to avoid circular dependencies, if you add a function to this module and it needs to print something,\n * you must either a) use `console.log` rather than the logger, or b) put your function elsewhere.\n */\n\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nfunction isNodeEnv() {\n  // explicitly check for browser bundles as those can be optimized statically\n  // by terser/rollup.\n  return (\n    !isBrowserBundle() &&\n    Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]'\n  );\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction dynamicRequire(mod, request) {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n\n/**\n * Helper for dynamically loading module that should work with linked dependencies.\n * The problem is that we _should_ be using `require(require.resolve(moduleName, { paths: [cwd()] }))`\n * However it's _not possible_ to do that with Webpack, as it has to know all the dependencies during\n * build time. `require.resolve` is also not available in any other way, so we cannot create,\n * a fake helper like we do with `dynamicRequire`.\n *\n * We always prefer to use local package, thus the value is not returned early from each `try/catch` block.\n * That is to mimic the behavior of `require.resolve` exactly.\n *\n * @param moduleName module name to require\n * @returns possibly required module\n */\nfunction loadModule(moduleName) {\n  let mod;\n\n  try {\n    mod = dynamicRequire(module, moduleName);\n  } catch (e) {\n    // no-empty\n  }\n\n  try {\n    const { cwd } = dynamicRequire(module, 'process');\n    mod = dynamicRequire(module, `${cwd()}/node_modules/${moduleName}`) ;\n  } catch (e) {\n    // no-empty\n  }\n\n  return mod;\n}\n\nexport { dynamicRequire, isNodeEnv, loadModule };\n//# sourceMappingURL=node.js.map\n","/*\n * This module exists for optimizations in the build process through rollup and terser.  We define some global\n * constants, which can be overridden during build. By guarding certain pieces of code with functions that return these\n * constants, we can control whether or not they appear in the final bundle. (Any code guarded by a false condition will\n * never run, and will hence be dropped during treeshaking.) The two primary uses for this are stripping out calls to\n * `logger` and preventing node-related code from appearing in browser bundles.\n *\n * Attention:\n * This file should not be used to define constants/flags that are intended to be used for tree-shaking conducted by\n * users. These flags should live in their respective packages, as we identified user tooling (specifically webpack)\n * having issues tree-shaking these constants across package boundaries.\n * An example for this is the __SENTRY_DEBUG__ constant. It is declared in each package individually because we want\n * users to be able to shake away expressions that it guards.\n */\n\n/**\n * Figures out if we're building a browser bundle.\n *\n * @returns true if this is a browser bundle build.\n */\nfunction isBrowserBundle() {\n  return typeof __SENTRY_BROWSER_BUNDLE__ !== 'undefined' && !!__SENTRY_BROWSER_BUNDLE__;\n}\n\n/**\n * Get source of SDK.\n */\nfunction getSDKSource() {\n  // @ts-ignore \"npm\" is injected by rollup during build process\n  return \"npm\";\n}\n\nexport { getSDKSource, isBrowserBundle };\n//# sourceMappingURL=env.js.map\n","/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nfunction parseUrl(url)\n\n {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nfunction stripUrlQueryAndFragment(urlPath) {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nfunction getNumberOfUrlSegments(url) {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n\nexport { getNumberOfUrlSegments, parseUrl, stripUrlQueryAndFragment };\n//# sourceMappingURL=url.js.map\n","import { isNodeEnv, dynamicRequire } from './node.js';\nimport { getGlobalObject } from './worldwide.js';\n\n// eslint-disable-next-line deprecation/deprecation\nconst WINDOW = getGlobalObject();\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high-resolution monotonic clock.\n */\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance() {\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance() {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') ;\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nconst dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nconst timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nconst timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nconst usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * Internal helper to store what is the source of browserPerformanceTimeOrigin below. For debugging only.\n */\nlet _browserPerformanceTimeOriginMode;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nconst browserPerformanceTimeOrigin = (() => {\n  // Unfortunately browsers may report an inaccurate time origin data, through either performance.timeOrigin or\n  // performance.timing.navigationStart, which results in poor results in performance data. We only treat time origin\n  // data as reliable if they are within a reasonable threshold of the current time.\n\n  const { performance } = WINDOW;\n  if (!performance || !performance.now) {\n    _browserPerformanceTimeOriginMode = 'none';\n    return undefined;\n  }\n\n  const threshold = 3600 * 1000;\n  const performanceNow = performance.now();\n  const dateNow = Date.now();\n\n  // if timeOrigin isn't available set delta to threshold so it isn't used\n  const timeOriginDelta = performance.timeOrigin\n    ? Math.abs(performance.timeOrigin + performanceNow - dateNow)\n    : threshold;\n  const timeOriginIsReliable = timeOriginDelta < threshold;\n\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  const navigationStart = performance.timing && performance.timing.navigationStart;\n  const hasNavigationStart = typeof navigationStart === 'number';\n  // if navigationStart isn't available set delta to threshold so it isn't used\n  const navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;\n  const navigationStartIsReliable = navigationStartDelta < threshold;\n\n  if (timeOriginIsReliable || navigationStartIsReliable) {\n    // Use the more reliable time origin\n    if (timeOriginDelta <= navigationStartDelta) {\n      _browserPerformanceTimeOriginMode = 'timeOrigin';\n      return performance.timeOrigin;\n    } else {\n      _browserPerformanceTimeOriginMode = 'navigationStart';\n      return navigationStart;\n    }\n  }\n\n  // Either both timeOrigin and navigationStart are skewed or neither is available, fallback to Date.\n  _browserPerformanceTimeOriginMode = 'dateNow';\n  return dateNow;\n})();\n\nexport { _browserPerformanceTimeOriginMode, browserPerformanceTimeOrigin, dateTimestampInSeconds, timestampInSeconds, timestampWithMs, usingPerformanceAPI };\n//# sourceMappingURL=time.js.map\n","const DEFAULT_ENVIRONMENT = 'production';\n\nexport { DEFAULT_ENVIRONMENT };\n//# sourceMappingURL=constants.js.map\n","import { timestampInSeconds, uuid4, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Creates a new `Session` object by setting certain default parameters. If optional @param context\n * is passed, the passed properties are applied to the session object.\n *\n * @param context (optional) additional properties to be applied to the returned session object\n *\n * @returns a new `Session` object\n */\nfunction makeSession(context) {\n  // Both timestamp and started are in seconds since the UNIX epoch.\n  const startingTime = timestampInSeconds();\n\n  const session = {\n    sid: uuid4(),\n    init: true,\n    timestamp: startingTime,\n    started: startingTime,\n    duration: 0,\n    status: 'ok',\n    errors: 0,\n    ignoreDuration: false,\n    toJSON: () => sessionToJSON(session),\n  };\n\n  if (context) {\n    updateSession(session, context);\n  }\n\n  return session;\n}\n\n/**\n * Updates a session object with the properties passed in the context.\n *\n * Note that this function mutates the passed object and returns void.\n * (Had to do this instead of returning a new and updated session because closing and sending a session\n * makes an update to the session after it was passed to the sending logic.\n * @see BaseClient.captureSession )\n *\n * @param session the `Session` to update\n * @param context the `SessionContext` holding the properties that should be updated in @param session\n */\n// eslint-disable-next-line complexity\nfunction updateSession(session, context = {}) {\n  if (context.user) {\n    if (!session.ipAddress && context.user.ip_address) {\n      session.ipAddress = context.user.ip_address;\n    }\n\n    if (!session.did && !context.did) {\n      session.did = context.user.id || context.user.email || context.user.username;\n    }\n  }\n\n  session.timestamp = context.timestamp || timestampInSeconds();\n\n  if (context.ignoreDuration) {\n    session.ignoreDuration = context.ignoreDuration;\n  }\n  if (context.sid) {\n    // Good enough uuid validation. — Kamil\n    session.sid = context.sid.length === 32 ? context.sid : uuid4();\n  }\n  if (context.init !== undefined) {\n    session.init = context.init;\n  }\n  if (!session.did && context.did) {\n    session.did = `${context.did}`;\n  }\n  if (typeof context.started === 'number') {\n    session.started = context.started;\n  }\n  if (session.ignoreDuration) {\n    session.duration = undefined;\n  } else if (typeof context.duration === 'number') {\n    session.duration = context.duration;\n  } else {\n    const duration = session.timestamp - session.started;\n    session.duration = duration >= 0 ? duration : 0;\n  }\n  if (context.release) {\n    session.release = context.release;\n  }\n  if (context.environment) {\n    session.environment = context.environment;\n  }\n  if (!session.ipAddress && context.ipAddress) {\n    session.ipAddress = context.ipAddress;\n  }\n  if (!session.userAgent && context.userAgent) {\n    session.userAgent = context.userAgent;\n  }\n  if (typeof context.errors === 'number') {\n    session.errors = context.errors;\n  }\n  if (context.status) {\n    session.status = context.status;\n  }\n}\n\n/**\n * Closes a session by setting its status and updating the session object with it.\n * Internally calls `updateSession` to update the passed session object.\n *\n * Note that this function mutates the passed session (@see updateSession for explanation).\n *\n * @param session the `Session` object to be closed\n * @param status the `SessionStatus` with which the session was closed. If you don't pass a status,\n *               this function will keep the previously set status, unless it was `'ok'` in which case\n *               it is changed to `'exited'`.\n */\nfunction closeSession(session, status) {\n  let context = {};\n  if (status) {\n    context = { status };\n  } else if (session.status === 'ok') {\n    context = { status: 'exited' };\n  }\n\n  updateSession(session, context);\n}\n\n/**\n * Serializes a passed session object to a JSON object with a slightly different structure.\n * This is necessary because the Sentry backend requires a slightly different schema of a session\n * than the one the JS SDKs use internally.\n *\n * @param session the session to be converted\n *\n * @returns a JSON object of the passed session\n */\nfunction sessionToJSON(session) {\n  return dropUndefinedKeys({\n    sid: `${session.sid}`,\n    init: session.init,\n    // Make sure that sec is converted to ms for date constructor\n    started: new Date(session.started * 1000).toISOString(),\n    timestamp: new Date(session.timestamp * 1000).toISOString(),\n    status: session.status,\n    errors: session.errors,\n    did: typeof session.did === 'number' || typeof session.did === 'string' ? `${session.did}` : undefined,\n    duration: session.duration,\n    attrs: {\n      release: session.release,\n      environment: session.environment,\n      ip_address: session.ipAddress,\n      user_agent: session.userAgent,\n    },\n  });\n}\n\nexport { closeSession, makeSession, updateSession };\n//# sourceMappingURL=session.js.map\n","import { isPlainObject, dateTimestampInSeconds, SyncPromise, logger, isThenable, arrayify, getGlobalSingleton } from '@sentry/utils';\nimport { updateSession } from './session.js';\n\n/**\n * Default value for maximum number of breadcrumbs added to an event.\n */\nconst DEFAULT_MAX_BREADCRUMBS = 100;\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nclass Scope  {\n  /** Flag if notifying is happening. */\n\n  /** Callback for client to receive scope changes. */\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n\n  /** Array of breadcrumbs. */\n\n  /** User */\n\n  /** Tags */\n\n  /** Extra */\n\n  /** Contexts */\n\n  /** Attachments */\n\n  /**\n   * A place to stash data which is needed at some point in the SDK's event processing pipeline but which shouldn't get\n   * sent to Sentry\n   */\n\n  /** Fingerprint */\n\n  /** Severity */\n  // eslint-disable-next-line deprecation/deprecation\n\n  /** Transaction Name */\n\n  /** Span */\n\n  /** Session */\n\n  /** Request Mode Session Status */\n\n  // NOTE: Any field which gets added here should get added not only to the constructor but also to the `clone` method.\n\n   constructor() {\n    this._notifyingListeners = false;\n    this._scopeListeners = [];\n    this._eventProcessors = [];\n    this._breadcrumbs = [];\n    this._attachments = [];\n    this._user = {};\n    this._tags = {};\n    this._extra = {};\n    this._contexts = {};\n    this._sdkProcessingMetadata = {};\n  }\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n   static clone(scope) {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n      newScope._requestSession = scope._requestSession;\n      newScope._attachments = [...scope._attachments];\n      newScope._sdkProcessingMetadata = { ...scope._sdkProcessingMetadata };\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n   addScopeListener(callback) {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addEventProcessor(callback) {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this._user = user || {};\n    if (this._session) {\n      updateSession(this._session, { user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getUser() {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getRequestSession() {\n    return this._requestSession;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setRequestSession(requestSession) {\n    this._requestSession = requestSession;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setFingerprint(fingerprint) {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setLevel(\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n  ) {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTransactionName(name) {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSpan(span) {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSpan() {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTransaction() {\n    // Often, this span (if it exists at all) will be a transaction, but it's not guaranteed to be. Regardless, it will\n    // have a pointer to the currently-active transaction.\n    const span = this.getSpan();\n    return span && span.transaction;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setSession(session) {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getSession() {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   update(captureContext) {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext )(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n      if (captureContext._requestSession) {\n        this._requestSession = captureContext._requestSession;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext ;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n      if (captureContext.requestSession) {\n        this._requestSession = captureContext.requestSession;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clear() {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._requestSession = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, maxBreadcrumbs) {\n    const maxCrumbs = typeof maxBreadcrumbs === 'number' ? maxBreadcrumbs : DEFAULT_MAX_BREADCRUMBS;\n\n    // No data has been changed, so don't notify scope listeners\n    if (maxCrumbs <= 0) {\n      return this;\n    }\n\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n    this._breadcrumbs = [...this._breadcrumbs, mergedBreadcrumb].slice(-maxCrumbs);\n    this._notifyScopeListeners();\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getLastBreadcrumb() {\n    return this._breadcrumbs[this._breadcrumbs.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearBreadcrumbs() {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addAttachment(attachment) {\n    this._attachments.push(attachment);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getAttachments() {\n    return this._attachments;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   clearAttachments() {\n    this._attachments = [];\n    return this;\n  }\n\n  /**\n   * Applies data from the scope to the event and runs all event processors on it.\n   *\n   * @param event Event\n   * @param hint Object containing additional information about the original exception, for use by the event processors.\n   * @hidden\n   */\n   applyToEvent(event, hint = {}) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relies on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction && this._span.transaction.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    event.sdkProcessingMetadata = { ...event.sdkProcessingMetadata, ...this._sdkProcessingMetadata };\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * Add data which will be accessible during event processing but won't get sent to Sentry\n   */\n   setSDKProcessingMetadata(newData) {\n    this._sdkProcessingMetadata = { ...this._sdkProcessingMetadata, ...newData };\n\n    return this;\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n   _notifyEventProcessors(\n    processors,\n    event,\n    hint,\n    index = 0,\n  ) {\n    return new SyncPromise((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) ;\n\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          processor.id &&\n          result === null &&\n          logger.log(`Event processor \"${processor.id}\" dropped event`);\n\n        if (isThenable(result)) {\n          void result\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          void this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n   _notifyScopeListeners() {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n   _applyFingerprint(event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? arrayify(event.fingerprint) : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Returns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n  return getGlobalSingleton('globalEventProcessors', () => []);\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nfunction addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}\n\nexport { Scope, addGlobalEventProcessor };\n//# sourceMappingURL=scope.js.map\n","import { uuid4, dateTimestampInSeconds, consoleSandbox, logger, GLOBAL_OBJ, isNodeEnv, getGlobalSingleton } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from './constants.js';\nimport { Scope } from './scope.js';\nimport { closeSession, makeSession, updateSession } from './session.js';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nconst API_VERSION = 4;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * A layer in the process stack.\n * @hidden\n */\n\n/**\n * @inheritDoc\n */\nclass Hub  {\n  /** Is a {@link Layer}[] containing the client and scope */\n\n  /** Contains the last event id of a captured event.  */\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n   constructor(client, scope = new Scope(),   _version = API_VERSION) {this._version = _version;\n    this._stack = [{ scope }];\n    if (client) {\n      this.bindClient(client);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isOlderThan(version) {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   bindClient(client) {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   pushScope() {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   popScope() {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   withScope(callback) {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getClient() {\n    return this.getStackTop().client ;\n  }\n\n  /** Returns the scope of the top stack. */\n   getScope() {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n   getStack() {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n   getStackTop() {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureException(exception, hint) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error('Sentry syntheticException');\n    this._withClient((client, scope) => {\n      client.captureException(\n        exception,\n        {\n          originalException: exception,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureMessage(\n    message,\n    // eslint-disable-next-line deprecation/deprecation\n    level,\n    hint,\n  ) {\n    const eventId = (this._lastEventId = hint && hint.event_id ? hint.event_id : uuid4());\n    const syntheticException = new Error(message);\n    this._withClient((client, scope) => {\n      client.captureMessage(\n        message,\n        level,\n        {\n          originalException: message,\n          syntheticException,\n          ...hint,\n          event_id: eventId,\n        },\n        scope,\n      );\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureEvent(event, hint) {\n    const eventId = hint && hint.event_id ? hint.event_id : uuid4();\n    if (!event.type) {\n      this._lastEventId = eventId;\n    }\n\n    this._withClient((client, scope) => {\n      client.captureEvent(event, { ...hint, event_id: eventId }, scope);\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   lastEventId() {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   addBreadcrumb(breadcrumb, hint) {\n    const { scope, client } = this.getStackTop();\n\n    if (!client) return;\n\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) )\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    if (client.emit) {\n      client.emit('beforeAddBreadcrumb', finalBreadcrumb, hint);\n    }\n\n    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setUser(user) {\n    this.getScope().setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTags(tags) {\n    this.getScope().setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtras(extras) {\n    this.getScope().setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.getScope().setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setExtra(key, extra) {\n    this.getScope().setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   setContext(name, context) {\n    this.getScope().setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   configureScope(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   run(callback) {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getIntegration(integration) {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startTransaction(context, customSamplingContext) {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   traceHeaders() {\n    return this._callExtensionMethod('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   captureSession(endSession = false) {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   endSession() {\n    const layer = this.getStackTop();\n    const scope = layer.scope;\n    const session = scope.getSession();\n    if (session) {\n      closeSession(session);\n    }\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    scope.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startSession(context) {\n    const { scope, client } = this.getStackTop();\n    const { release, environment = DEFAULT_ENVIRONMENT } = (client && client.getOptions()) || {};\n\n    // Will fetch userAgent if called from browser sdk\n    const { userAgent } = GLOBAL_OBJ.navigator || {};\n\n    const session = makeSession({\n      release,\n      environment,\n      user: scope.getUser(),\n      ...(userAgent && { userAgent }),\n      ...context,\n    });\n\n    // End existing session if there's one\n    const currentSession = scope.getSession && scope.getSession();\n    if (currentSession && currentSession.status === 'ok') {\n      updateSession(currentSession, { status: 'exited' });\n    }\n    this.endSession();\n\n    // Afterwards we set the new session on the scope\n    scope.setSession(session);\n\n    return session;\n  }\n\n  /**\n   * Returns if default PII should be sent to Sentry and propagated in ourgoing requests\n   * when Tracing is used.\n   */\n   shouldSendDefaultPii() {\n    const client = this.getClient();\n    const options = client && client.getOptions();\n    return Boolean(options && options.sendDefaultPii);\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n   _sendSessionUpdate() {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n   _withClient(callback) {\n    const { scope, client } = this.getStackTop();\n    if (client) {\n      callback(client, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   _callExtensionMethod(method, ...args) {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/**\n * Returns the global shim registry.\n *\n * FIXME: This function is problematic, because despite always returning a valid Carrier,\n * it has an optional `__SENTRY__` property, which then in turn requires us to always perform an unnecessary check\n * at the call-site. We always access the carrier through this function, so we can guarantee that `__SENTRY__` is there.\n **/\nfunction getMainCarrier() {\n  GLOBAL_OBJ.__SENTRY__ = GLOBAL_OBJ.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return GLOBAL_OBJ;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nfunction makeMain(hub) {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nfunction getCurrentHub() {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry) {\n  try {\n    const sentry = getMainCarrier().__SENTRY__;\n    const activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nfunction getHubFromCarrier(carrier) {\n  return getGlobalSingleton('hub', () => new Hub(), carrier);\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nfunction setHubOnCarrier(carrier, hub) {\n  if (!carrier) return false;\n  const __SENTRY__ = (carrier.__SENTRY__ = carrier.__SENTRY__ || {});\n  __SENTRY__.hub = hub;\n  return true;\n}\n\nexport { API_VERSION, Hub, getCurrentHub, getHubFromCarrier, getMainCarrier, makeMain, setHubOnCarrier };\n//# sourceMappingURL=hub.js.map\n","import { addInstrumentationHandler, logger } from '@sentry/utils';\nimport { getActiveTransaction } from './utils.js';\n\nlet errorsInstrumented = false;\n\n/**\n * Configures global error listeners\n */\nfunction registerErrorInstrumentation() {\n  if (errorsInstrumented) {\n    return;\n  }\n\n  errorsInstrumented = true;\n  addInstrumentationHandler('error', errorCallback);\n  addInstrumentationHandler('unhandledrejection', errorCallback);\n}\n\n/**\n * If an error or unhandled promise occurs, we mark the active transaction as failed\n */\nfunction errorCallback() {\n  const activeTransaction = getActiveTransaction();\n  if (activeTransaction) {\n    const status = 'internal_error';\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Transaction: ${status} -> Global error occured`);\n    activeTransaction.setStatus(status);\n  }\n}\n\n// The function name will be lost when bundling but we need to be able to identify this listener later to maintain the\n// node.js default exit behaviour\nerrorCallback.tag = 'sentry_tracingErrorCallback';\n\nexport { registerErrorInstrumentation };\n//# sourceMappingURL=errors.js.map\n","import { getCurrentHub } from '../hub.js';\nexport { TRACEPARENT_REGEXP, extractTraceparentData, stripUrlQueryAndFragment } from '@sentry/utils';\n\n/** Grabs active transaction off scope, if any */\nfunction getActiveTransaction(maybeHub) {\n  const hub = maybeHub || getCurrentHub();\n  const scope = hub.getScope();\n  return scope.getTransaction() ;\n}\n\nexport { getActiveTransaction };\n//# sourceMappingURL=utils.js.map\n","import { uuid4, timestampWithMs, logger, dropUndefinedKeys } from '@sentry/utils';\n\n/**\n * Keeps track of finished spans for a given transaction\n * @internal\n * @hideconstructor\n * @hidden\n */\nclass SpanRecorder {\n   __init() {this.spans = [];}\n\n   constructor(maxlen = 1000) {SpanRecorder.prototype.__init.call(this);\n    this._maxlen = maxlen;\n  }\n\n  /**\n   * This is just so that we don't run out of memory while recording a lot\n   * of spans. At some point we just stop and flush out the start of the\n   * trace tree (i.e.the first n spans with the smallest\n   * start_timestamp).\n   */\n   add(span) {\n    if (this.spans.length > this._maxlen) {\n      span.spanRecorder = undefined;\n    } else {\n      this.spans.push(span);\n    }\n  }\n}\n\n/**\n * Span contains all data about a span\n */\nclass Span  {\n  /**\n   * @inheritDoc\n   */\n   __init2() {this.traceId = uuid4();}\n\n  /**\n   * @inheritDoc\n   */\n   __init3() {this.spanId = uuid4().substring(16);}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Internal keeper of the status\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Timestamp in seconds when the span was created.\n   */\n   __init4() {this.startTimestamp = timestampWithMs();}\n\n  /**\n   * Timestamp in seconds when the span ended.\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * @inheritDoc\n   */\n   __init5() {this.tags = {};}\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n   __init6() {this.data = {};}\n\n  /**\n   * List of spans that were finalized\n   */\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * The instrumenter that created this span.\n   */\n   __init7() {this.instrumenter = 'sentry';}\n\n  /**\n   * You should never call the constructor manually, always use `Sentry.startTransaction()`\n   * or call `startChild()` on an existing span.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(spanContext) {Span.prototype.__init2.call(this);Span.prototype.__init3.call(this);Span.prototype.__init4.call(this);Span.prototype.__init5.call(this);Span.prototype.__init6.call(this);Span.prototype.__init7.call(this);\n    if (!spanContext) {\n      return this;\n    }\n    if (spanContext.traceId) {\n      this.traceId = spanContext.traceId;\n    }\n    if (spanContext.spanId) {\n      this.spanId = spanContext.spanId;\n    }\n    if (spanContext.parentSpanId) {\n      this.parentSpanId = spanContext.parentSpanId;\n    }\n    // We want to include booleans as well here\n    if ('sampled' in spanContext) {\n      this.sampled = spanContext.sampled;\n    }\n    if (spanContext.op) {\n      this.op = spanContext.op;\n    }\n    if (spanContext.description) {\n      this.description = spanContext.description;\n    }\n    if (spanContext.data) {\n      this.data = spanContext.data;\n    }\n    if (spanContext.tags) {\n      this.tags = spanContext.tags;\n    }\n    if (spanContext.status) {\n      this.status = spanContext.status;\n    }\n    if (spanContext.startTimestamp) {\n      this.startTimestamp = spanContext.startTimestamp;\n    }\n    if (spanContext.endTimestamp) {\n      this.endTimestamp = spanContext.endTimestamp;\n    }\n    if (spanContext.instrumenter) {\n      this.instrumenter = spanContext.instrumenter;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   startChild(\n    spanContext,\n  ) {\n    const childSpan = new Span({\n      ...spanContext,\n      parentSpanId: this.spanId,\n      sampled: this.sampled,\n      traceId: this.traceId,\n    });\n\n    childSpan.spanRecorder = this.spanRecorder;\n    if (childSpan.spanRecorder) {\n      childSpan.spanRecorder.add(childSpan);\n    }\n\n    childSpan.transaction = this.transaction;\n\n    if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && childSpan.transaction) {\n      const opStr = (spanContext && spanContext.op) || '< unknown op >';\n      const nameStr = childSpan.transaction.name || '< unknown name >';\n      const idStr = childSpan.transaction.spanId;\n\n      const logMessage = `[Tracing] Starting '${opStr}' span on transaction '${nameStr}' (${idStr}).`;\n      childSpan.transaction.metadata.spanMetadata[childSpan.spanId] = { logMessage };\n      logger.log(logMessage);\n    }\n\n    return childSpan;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setTag(key, value) {\n    this.tags = { ...this.tags, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n   setData(key, value) {\n    this.data = { ...this.data, [key]: value };\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setStatus(value) {\n    this.status = value;\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setHttpStatus(httpStatus) {\n    this.setTag('http.status_code', String(httpStatus));\n    const spanStatus = spanStatusfromHttpCode(httpStatus);\n    if (spanStatus !== 'unknown_error') {\n      this.setStatus(spanStatus);\n    }\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   isSuccess() {\n    return this.status === 'ok';\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    if (\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      // Don't call this for transactions\n      this.transaction &&\n      this.transaction.spanId !== this.spanId\n    ) {\n      const { logMessage } = this.transaction.metadata.spanMetadata[this.spanId];\n      if (logMessage) {\n        logger.log((logMessage ).replace('Starting', 'Finishing'));\n      }\n    }\n\n    this.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toTraceparent() {\n    let sampledString = '';\n    if (this.sampled !== undefined) {\n      sampledString = this.sampled ? '-1' : '-0';\n    }\n    return `${this.traceId}-${this.spanId}${sampledString}`;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    return dropUndefinedKeys({\n      data: this.data,\n      description: this.description,\n      endTimestamp: this.endTimestamp,\n      op: this.op,\n      parentSpanId: this.parentSpanId,\n      sampled: this.sampled,\n      spanId: this.spanId,\n      startTimestamp: this.startTimestamp,\n      status: this.status,\n      tags: this.tags,\n      traceId: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(spanContext) {\n    this.data = spanContext.data || {};\n    this.description = spanContext.description;\n    this.endTimestamp = spanContext.endTimestamp;\n    this.op = spanContext.op;\n    this.parentSpanId = spanContext.parentSpanId;\n    this.sampled = spanContext.sampled;\n    this.spanId = spanContext.spanId || this.spanId;\n    this.startTimestamp = spanContext.startTimestamp || this.startTimestamp;\n    this.status = spanContext.status;\n    this.tags = spanContext.tags || {};\n    this.traceId = spanContext.traceId || this.traceId;\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   getTraceContext() {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      trace_id: this.traceId,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toJSON()\n\n {\n    return dropUndefinedKeys({\n      data: Object.keys(this.data).length > 0 ? this.data : undefined,\n      description: this.description,\n      op: this.op,\n      parent_span_id: this.parentSpanId,\n      span_id: this.spanId,\n      start_timestamp: this.startTimestamp,\n      status: this.status,\n      tags: Object.keys(this.tags).length > 0 ? this.tags : undefined,\n      timestamp: this.endTimestamp,\n      trace_id: this.traceId,\n    });\n  }\n}\n\n/**\n * Converts a HTTP status code into a {@link SpanStatusType}.\n *\n * @param httpStatus The HTTP response status code.\n * @returns The span status or unknown_error.\n */\nfunction spanStatusfromHttpCode(httpStatus) {\n  if (httpStatus < 400 && httpStatus >= 100) {\n    return 'ok';\n  }\n\n  if (httpStatus >= 400 && httpStatus < 500) {\n    switch (httpStatus) {\n      case 401:\n        return 'unauthenticated';\n      case 403:\n        return 'permission_denied';\n      case 404:\n        return 'not_found';\n      case 409:\n        return 'already_exists';\n      case 413:\n        return 'failed_precondition';\n      case 429:\n        return 'resource_exhausted';\n      default:\n        return 'invalid_argument';\n    }\n  }\n\n  if (httpStatus >= 500 && httpStatus < 600) {\n    switch (httpStatus) {\n      case 501:\n        return 'unimplemented';\n      case 503:\n        return 'unavailable';\n      case 504:\n        return 'deadline_exceeded';\n      default:\n        return 'internal_error';\n    }\n  }\n\n  return 'unknown_error';\n}\n\nexport { Span, SpanRecorder, spanStatusfromHttpCode };\n//# sourceMappingURL=span.js.map\n","import { logger, dropUndefinedKeys } from '@sentry/utils';\nimport { DEFAULT_ENVIRONMENT } from '../constants.js';\nimport { getCurrentHub } from '../hub.js';\nimport { Span, SpanRecorder } from './span.js';\n\n/** JSDoc */\nclass Transaction extends Span  {\n\n  /**\n   * The reference to the current hub.\n   */\n\n   __init() {this._measurements = {};}\n\n   __init2() {this._contexts = {};}\n\n   __init3() {this._frozenDynamicSamplingContext = undefined;}\n\n  /**\n   * This constructor should never be called manually. Those instrumenting tracing should use\n   * `Sentry.startTransaction()`, and internal methods should use `hub.startTransaction()`.\n   * @internal\n   * @hideconstructor\n   * @hidden\n   */\n   constructor(transactionContext, hub) {\n    super(transactionContext);Transaction.prototype.__init.call(this);Transaction.prototype.__init2.call(this);Transaction.prototype.__init3.call(this);\n    this._hub = hub || getCurrentHub();\n\n    this._name = transactionContext.name || '';\n\n    this.metadata = {\n      source: 'custom',\n      ...transactionContext.metadata,\n      spanMetadata: {},\n    };\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    // this is because transactions are also spans, and spans have a transaction pointer\n    this.transaction = this;\n\n    // If Dynamic Sampling Context is provided during the creation of the transaction, we freeze it as it usually means\n    // there is incoming Dynamic Sampling Context. (Either through an incoming request, a baggage meta-tag, or other means)\n    const incomingDynamicSamplingContext = this.metadata.dynamicSamplingContext;\n    if (incomingDynamicSamplingContext) {\n      // We shallow copy this in case anything writes to the original reference of the passed in `dynamicSamplingContext`\n      this._frozenDynamicSamplingContext = { ...incomingDynamicSamplingContext };\n    }\n  }\n\n  /** Getter for `name` property */\n   get name() {\n    return this._name;\n  }\n\n  /** Setter for `name` property, which also sets `source` as custom */\n   set name(newName) {\n    this.setName(newName);\n  }\n\n  /**\n   * JSDoc\n   */\n   setName(name, source = 'custom') {\n    this._name = name;\n    this.metadata.source = source;\n  }\n\n  /**\n   * Attaches SpanRecorder to the span itself\n   * @param maxlen maximum number of spans that can be recorded\n   */\n   initSpanRecorder(maxlen = 1000) {\n    if (!this.spanRecorder) {\n      this.spanRecorder = new SpanRecorder(maxlen);\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setContext(key, context) {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts[key] = context;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMeasurement(name, value, unit = '') {\n    this._measurements[name] = { value, unit };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setMetadata(newMetadata) {\n    this.metadata = { ...this.metadata, ...newMetadata };\n  }\n\n  /**\n   * @inheritDoc\n   */\n   finish(endTimestamp) {\n    // This transaction is already finished, so we should not flush it again.\n    if (this.endTimestamp !== undefined) {\n      return undefined;\n    }\n\n    if (!this.name) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Transaction has no name, falling back to `<unlabeled transaction>`.');\n      this.name = '<unlabeled transaction>';\n    }\n\n    // just sets the end timestamp\n    super.finish(endTimestamp);\n\n    const client = this._hub.getClient();\n    if (client && client.emit) {\n      client.emit('finishTransaction', this);\n    }\n\n    if (this.sampled !== true) {\n      // At this point if `sampled !== true` we want to discard the transaction.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Discarding transaction because its trace was not chosen to be sampled.');\n\n      if (client) {\n        client.recordDroppedEvent('sample_rate', 'transaction');\n      }\n\n      return undefined;\n    }\n\n    const finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter(s => s !== this && s.endTimestamp) : [];\n\n    if (this._trimEnd && finishedSpans.length > 0) {\n      this.endTimestamp = finishedSpans.reduce((prev, current) => {\n        if (prev.endTimestamp && current.endTimestamp) {\n          return prev.endTimestamp > current.endTimestamp ? prev : current;\n        }\n        return prev;\n      }).endTimestamp;\n    }\n\n    const metadata = this.metadata;\n\n    const transaction = {\n      contexts: {\n        ...this._contexts,\n        // We don't want to override trace context\n        trace: this.getTraceContext(),\n      },\n      spans: finishedSpans,\n      start_timestamp: this.startTimestamp,\n      tags: this.tags,\n      timestamp: this.endTimestamp,\n      transaction: this.name,\n      type: 'transaction',\n      sdkProcessingMetadata: {\n        ...metadata,\n        dynamicSamplingContext: this.getDynamicSamplingContext(),\n      },\n      ...(metadata.source && {\n        transaction_info: {\n          source: metadata.source,\n        },\n      }),\n    };\n\n    const hasMeasurements = Object.keys(this._measurements).length > 0;\n\n    if (hasMeasurements) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(\n          '[Measurements] Adding measurements to transaction',\n          JSON.stringify(this._measurements, undefined, 2),\n        );\n      transaction.measurements = this._measurements;\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing ${this.op} transaction: ${this.name}.`);\n\n    return this._hub.captureEvent(transaction);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   toContext() {\n    const spanContext = super.toContext();\n\n    return dropUndefinedKeys({\n      ...spanContext,\n      name: this.name,\n      trimEnd: this._trimEnd,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n   updateWithContext(transactionContext) {\n    super.updateWithContext(transactionContext);\n\n    this.name = transactionContext.name || '';\n\n    this._trimEnd = transactionContext.trimEnd;\n\n    return this;\n  }\n\n  /**\n   * @inheritdoc\n   *\n   * @experimental\n   */\n   getDynamicSamplingContext() {\n    if (this._frozenDynamicSamplingContext) {\n      return this._frozenDynamicSamplingContext;\n    }\n\n    const hub = this._hub || getCurrentHub();\n    const client = hub && hub.getClient();\n\n    if (!client) return {};\n\n    const { environment, release } = client.getOptions() || {};\n    const { publicKey: public_key } = client.getDsn() || {};\n\n    const maybeSampleRate = this.metadata.sampleRate;\n    const sample_rate = maybeSampleRate !== undefined ? maybeSampleRate.toString() : undefined;\n\n    const { segment: user_segment } = hub.getScope().getUser() || {};\n\n    const source = this.metadata.source;\n\n    // We don't want to have a transaction name in the DSC if the source is \"url\" because URLs might contain PII\n    const transaction = source && source !== 'url' ? this.name : undefined;\n\n    const dsc = dropUndefinedKeys({\n      environment: environment || DEFAULT_ENVIRONMENT,\n      release,\n      transaction,\n      user_segment,\n      public_key,\n      trace_id: this.traceId,\n      sample_rate,\n    });\n\n    // Uncomment if we want to make DSC immutable\n    // this._frozenDynamicSamplingContext = dsc;\n\n    client.emit && client.emit('createDsc', dsc);\n\n    return dsc;\n  }\n\n  /**\n   * Override the current hub with a new one.\n   * Used if you want another hub to finish the transaction.\n   *\n   * @internal\n   */\n   setHub(hub) {\n    this._hub = hub;\n  }\n}\n\nexport { Transaction };\n//# sourceMappingURL=transaction.js.map\n","import { logger, timestampWithMs } from '@sentry/utils';\nimport { SpanRecorder } from './span.js';\nimport { Transaction } from './transaction.js';\n\nconst TRACING_DEFAULTS = {\n  idleTimeout: 1000,\n  finalTimeout: 30000,\n  heartbeatInterval: 5000,\n};\n\nconst FINISH_REASON_TAG = 'finishReason';\n\nconst IDLE_TRANSACTION_FINISH_REASONS = [\n  'heartbeatFailed',\n  'idleTimeout',\n  'documentHidden',\n  'finalTimeout',\n  'externalFinish',\n  'cancelled',\n];\n\n/**\n * @inheritDoc\n */\nclass IdleTransactionSpanRecorder extends SpanRecorder {\n   constructor(\n      _pushActivity,\n      _popActivity,\n     transactionSpanId,\n    maxlen,\n  ) {\n    super(maxlen);this._pushActivity = _pushActivity;this._popActivity = _popActivity;this.transactionSpanId = transactionSpanId;  }\n\n  /**\n   * @inheritDoc\n   */\n   add(span) {\n    // We should make sure we do not push and pop activities for\n    // the transaction that this span recorder belongs to.\n    if (span.spanId !== this.transactionSpanId) {\n      // We patch span.finish() to pop an activity after setting an endTimestamp.\n      span.finish = (endTimestamp) => {\n        span.endTimestamp = typeof endTimestamp === 'number' ? endTimestamp : timestampWithMs();\n        this._popActivity(span.spanId);\n      };\n\n      // We should only push new activities if the span does not have an end timestamp.\n      if (span.endTimestamp === undefined) {\n        this._pushActivity(span.spanId);\n      }\n    }\n\n    super.add(span);\n  }\n}\n\n/**\n * An IdleTransaction is a transaction that automatically finishes. It does this by tracking child spans as activities.\n * You can have multiple IdleTransactions active, but if the `onScope` option is specified, the idle transaction will\n * put itself on the scope on creation.\n */\nclass IdleTransaction extends Transaction {\n  // Activities store a list of active spans\n   __init() {this.activities = {};}\n\n  // Track state of activities in previous heartbeat\n\n  // Amount of times heartbeat has counted. Will cause transaction to finish after 3 beats.\n   __init2() {this._heartbeatCounter = 0;}\n\n  // We should not use heartbeat if we finished a transaction\n   __init3() {this._finished = false;}\n\n  // Idle timeout was canceled and we should finish the transaction with the last span end.\n   __init4() {this._idleTimeoutCanceledPermanently = false;}\n\n    __init5() {this._beforeFinishCallbacks = [];}\n\n  /**\n   * Timer that tracks Transaction idleTimeout\n   */\n\n   __init6() {this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[4];}\n\n   constructor(\n    transactionContext,\n      _idleHub,\n    /**\n     * The time to wait in ms until the idle transaction will be finished. This timer is started each time\n     * there are no active spans on this transaction.\n     */\n      _idleTimeout = TRACING_DEFAULTS.idleTimeout,\n    /**\n     * The final value in ms that a transaction cannot exceed\n     */\n      _finalTimeout = TRACING_DEFAULTS.finalTimeout,\n      _heartbeatInterval = TRACING_DEFAULTS.heartbeatInterval,\n    // Whether or not the transaction should put itself on the scope when it starts and pop itself off when it ends\n      _onScope = false,\n  ) {\n    super(transactionContext, _idleHub);this._idleHub = _idleHub;this._idleTimeout = _idleTimeout;this._finalTimeout = _finalTimeout;this._heartbeatInterval = _heartbeatInterval;this._onScope = _onScope;IdleTransaction.prototype.__init.call(this);IdleTransaction.prototype.__init2.call(this);IdleTransaction.prototype.__init3.call(this);IdleTransaction.prototype.__init4.call(this);IdleTransaction.prototype.__init5.call(this);IdleTransaction.prototype.__init6.call(this);\n    if (_onScope) {\n      // There should only be one active transaction on the scope\n      clearActiveTransaction(_idleHub);\n\n      // We set the transaction here on the scope so error events pick up the trace\n      // context and attach it to the error.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`Setting idle transaction on scope. Span ID: ${this.spanId}`);\n      _idleHub.configureScope(scope => scope.setSpan(this));\n    }\n\n    this._restartIdleTimeout();\n    setTimeout(() => {\n      if (!this._finished) {\n        this.setStatus('deadline_exceeded');\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[3];\n        this.finish();\n      }\n    }, this._finalTimeout);\n  }\n\n  /** {@inheritDoc} */\n   finish(endTimestamp = timestampWithMs()) {\n    this._finished = true;\n    this.activities = {};\n\n    if (this.op === 'ui.action.click') {\n      this.setTag(FINISH_REASON_TAG, this._finishReason);\n    }\n\n    if (this.spanRecorder) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log('[Tracing] finishing IdleTransaction', new Date(endTimestamp * 1000).toISOString(), this.op);\n\n      for (const callback of this._beforeFinishCallbacks) {\n        callback(this, endTimestamp);\n      }\n\n      this.spanRecorder.spans = this.spanRecorder.spans.filter((span) => {\n        // If we are dealing with the transaction itself, we just return it\n        if (span.spanId === this.spanId) {\n          return true;\n        }\n\n        // We cancel all pending spans with status \"cancelled\" to indicate the idle transaction was finished early\n        if (!span.endTimestamp) {\n          span.endTimestamp = endTimestamp;\n          span.setStatus('cancelled');\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log('[Tracing] cancelling span since transaction ended early', JSON.stringify(span, undefined, 2));\n        }\n\n        const keepSpan = span.startTimestamp < endTimestamp;\n        if (!keepSpan) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n            logger.log(\n              '[Tracing] discarding Span since it happened after Transaction was finished',\n              JSON.stringify(span, undefined, 2),\n            );\n        }\n        return keepSpan;\n      });\n\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] flushing IdleTransaction');\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] No active IdleTransaction');\n    }\n\n    // if `this._onScope` is `true`, the transaction put itself on the scope when it started\n    if (this._onScope) {\n      clearActiveTransaction(this._idleHub);\n    }\n\n    return super.finish(endTimestamp);\n  }\n\n  /**\n   * Register a callback function that gets excecuted before the transaction finishes.\n   * Useful for cleanup or if you want to add any additional spans based on current context.\n   *\n   * This is exposed because users have no other way of running something before an idle transaction\n   * finishes.\n   */\n   registerBeforeFinishCallback(callback) {\n    this._beforeFinishCallbacks.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n   initSpanRecorder(maxlen) {\n    if (!this.spanRecorder) {\n      const pushActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._pushActivity(id);\n      };\n      const popActivity = (id) => {\n        if (this._finished) {\n          return;\n        }\n        this._popActivity(id);\n      };\n\n      this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);\n\n      // Start heartbeat so that transactions do not run forever.\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Starting heartbeat');\n      this._pingHeartbeat();\n    }\n    this.spanRecorder.add(this);\n  }\n\n  /**\n   * Cancels the existing idle timeout, if there is one.\n   * @param restartOnChildSpanChange Default is `true`.\n   *                                 If set to false the transaction will end\n   *                                 with the last child span.\n   */\n   cancelIdleTimeout(\n    endTimestamp,\n    {\n      restartOnChildSpanChange,\n    }\n\n = {\n      restartOnChildSpanChange: true,\n    },\n  ) {\n    this._idleTimeoutCanceledPermanently = restartOnChildSpanChange === false;\n    if (this._idleTimeoutID) {\n      clearTimeout(this._idleTimeoutID);\n      this._idleTimeoutID = undefined;\n\n      if (Object.keys(this.activities).length === 0 && this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      }\n    }\n  }\n\n  /**\n   * Restarts idle timeout, if there is no running idle timeout it will start one.\n   */\n   _restartIdleTimeout(endTimestamp) {\n    this.cancelIdleTimeout();\n    this._idleTimeoutID = setTimeout(() => {\n      if (!this._finished && Object.keys(this.activities).length === 0) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[1];\n        this.finish(endTimestamp);\n      }\n    }, this._idleTimeout);\n  }\n\n  /**\n   * Start tracking a specific activity.\n   * @param spanId The span id that represents the activity\n   */\n   _pushActivity(spanId) {\n    this.cancelIdleTimeout(undefined, { restartOnChildSpanChange: !this._idleTimeoutCanceledPermanently });\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] pushActivity: ${spanId}`);\n    this.activities[spanId] = true;\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n  }\n\n  /**\n   * Remove an activity from usage\n   * @param spanId The span id that represents the activity\n   */\n   _popActivity(spanId) {\n    if (this.activities[spanId]) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] popActivity ${spanId}`);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this.activities[spanId];\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] new activities count', Object.keys(this.activities).length);\n    }\n\n    if (Object.keys(this.activities).length === 0) {\n      const endTimestamp = timestampWithMs();\n      if (this._idleTimeoutCanceledPermanently) {\n        this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[5];\n        this.finish(endTimestamp);\n      } else {\n        // We need to add the timeout here to have the real endtimestamp of the transaction\n        // Remember timestampWithMs is in seconds, timeout is in ms\n        this._restartIdleTimeout(endTimestamp + this._idleTimeout / 1000);\n      }\n    }\n  }\n\n  /**\n   * Checks when entries of this.activities are not changing for 3 beats.\n   * If this occurs we finish the transaction.\n   */\n   _beat() {\n    // We should not be running heartbeat if the idle transaction is finished.\n    if (this._finished) {\n      return;\n    }\n\n    const heartbeatString = Object.keys(this.activities).join('');\n\n    if (heartbeatString === this._prevHeartbeatString) {\n      this._heartbeatCounter++;\n    } else {\n      this._heartbeatCounter = 1;\n    }\n\n    this._prevHeartbeatString = heartbeatString;\n\n    if (this._heartbeatCounter >= 3) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('[Tracing] Transaction finished because of no change for 3 heart beats');\n      this.setStatus('deadline_exceeded');\n      this._finishReason = IDLE_TRANSACTION_FINISH_REASONS[0];\n      this.finish();\n    } else {\n      this._pingHeartbeat();\n    }\n  }\n\n  /**\n   * Pings the heartbeat\n   */\n   _pingHeartbeat() {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`pinging Heartbeat -> current counter: ${this._heartbeatCounter}`);\n    setTimeout(() => {\n      this._beat();\n    }, this._heartbeatInterval);\n  }\n}\n\n/**\n * Reset transaction on scope to `undefined`\n */\nfunction clearActiveTransaction(hub) {\n  const scope = hub.getScope();\n  if (scope.getTransaction()) {\n    scope.setSpan(undefined);\n  }\n}\n\nexport { IdleTransaction, IdleTransactionSpanRecorder, TRACING_DEFAULTS };\n//# sourceMappingURL=idletransaction.js.map\n","import { logger, isNaN } from '@sentry/utils';\nimport { getMainCarrier } from '../hub.js';\nimport { hasTracingEnabled } from '../utils/hasTracingEnabled.js';\nimport { registerErrorInstrumentation } from './errors.js';\nimport { IdleTransaction } from './idletransaction.js';\nimport { Transaction } from './transaction.js';\n\n/** Returns all trace headers that are currently on the top scope. */\nfunction traceHeaders() {\n  const scope = this.getScope();\n  const span = scope.getSpan();\n\n  return span\n    ? {\n        'sentry-trace': span.toTraceparent(),\n      }\n    : {};\n}\n\n/**\n * Makes a sampling decision for the given transaction and stores it on the transaction.\n *\n * Called every time a transaction is created. Only transactions which emerge with a `sampled` value of `true` will be\n * sent to Sentry.\n *\n * @param transaction: The transaction needing a sampling decision\n * @param options: The current client's options, so we can access `tracesSampleRate` and/or `tracesSampler`\n * @param samplingContext: Default and user-provided data which may be used to help make the decision\n *\n * @returns The given transaction with its `sampled` value set\n */\nfunction sample(\n  transaction,\n  options,\n  samplingContext,\n) {\n  // nothing to do if tracing is not enabled\n  if (!hasTracingEnabled(options)) {\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the user has forced a sampling decision by passing a `sampled` value in their transaction context, go with that\n  if (transaction.sampled !== undefined) {\n    transaction.setMetadata({\n      sampleRate: Number(transaction.sampled),\n    });\n    return transaction;\n  }\n\n  // we would have bailed already if neither `tracesSampler` nor `tracesSampleRate` nor `enableTracing` were defined, so one of these should\n  // work; prefer the hook if so\n  let sampleRate;\n  if (typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler(samplingContext);\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else if (samplingContext.parentSampled !== undefined) {\n    sampleRate = samplingContext.parentSampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n    transaction.setMetadata({\n      sampleRate: Number(sampleRate),\n    });\n  } else {\n    // When `enableTracing === true`, we use a sample rate of 100%\n    sampleRate = 1;\n    transaction.setMetadata({\n      sampleRate,\n    });\n  }\n\n  // Since this is coming from the user (or from a function provided by the user), who knows what we might get. (The\n  // only valid values are booleans or numbers between 0 and 1.)\n  if (!isValidSampleRate(sampleRate)) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('[Tracing] Discarding transaction because of invalid sample rate.');\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // if the function returned 0 (or false), or if `tracesSampleRate` is 0, it's a sign the transaction should be dropped\n  if (!sampleRate) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because ${\n          typeof options.tracesSampler === 'function'\n            ? 'tracesSampler returned 0 or false'\n            : 'a negative sampling decision was inherited or tracesSampleRate is set to 0'\n        }`,\n      );\n    transaction.sampled = false;\n    return transaction;\n  }\n\n  // Now we roll the dice. Math.random is inclusive of 0, but not of 1, so strict < is safe here. In case sampleRate is\n  // a boolean, the < comparison will cause it to be automatically cast to 1 if it's true and 0 if it's false.\n  transaction.sampled = Math.random() < (sampleRate );\n\n  // if we're not going to keep it, we're done\n  if (!transaction.sampled) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.log(\n        `[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = ${Number(\n          sampleRate,\n        )})`,\n      );\n    return transaction;\n  }\n\n  (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] starting ${transaction.op} transaction - ${transaction.name}`);\n  return transaction;\n}\n\n/**\n * Checks the given sample rate to make sure it is valid type and value (a boolean, or a number between 0 and 1).\n */\nfunction isValidSampleRate(rate) {\n  // we need to check NaN explicitly because it's of type 'number' and therefore wouldn't get caught by this typecheck\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (isNaN(rate) || !(typeof rate === 'number' || typeof rate === 'boolean')) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(\n        `[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got ${JSON.stringify(\n          rate,\n        )} of type ${JSON.stringify(typeof rate)}.`,\n      );\n    return false;\n  }\n\n  // in case sampleRate is a boolean, it will get automatically cast to 1 if it's true and 0 if it's false\n  if (rate < 0 || rate > 1) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.warn(`[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got ${rate}.`);\n    return false;\n  }\n  return true;\n}\n\n/**\n * Creates a new transaction and adds a sampling decision if it doesn't yet have one.\n *\n * The Hub.startTransaction method delegates to this method to do its work, passing the Hub instance in as `this`, as if\n * it had been called on the hub directly. Exists as a separate function so that it can be injected into the class as an\n * \"extension method.\"\n *\n * @param this: The Hub starting the transaction\n * @param transactionContext: Data used to configure the transaction\n * @param CustomSamplingContext: Optional data to be provided to the `tracesSampler` function (if any)\n *\n * @returns The new transaction\n *\n * @see {@link Hub.startTransaction}\n */\nfunction _startTransaction(\n\n  transactionContext,\n  customSamplingContext,\n) {\n  const client = this.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  const configInstrumenter = options.instrumenter || 'sentry';\n  const transactionInstrumenter = transactionContext.instrumenter || 'sentry';\n\n  if (configInstrumenter !== transactionInstrumenter) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n      logger.error(\n        `A transaction was started with instrumenter=\\`${transactionInstrumenter}\\`, but the SDK is configured with the \\`${configInstrumenter}\\` instrumenter.\nThe transaction will not be sampled. Please use the ${configInstrumenter} instrumentation to start transactions.`,\n      );\n\n    transactionContext.sampled = false;\n  }\n\n  let transaction = new Transaction(transactionContext, this);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Create new idle transaction.\n */\nfunction startIdleTransaction(\n  hub,\n  transactionContext,\n  idleTimeout,\n  finalTimeout,\n  onScope,\n  customSamplingContext,\n  heartbeatInterval,\n) {\n  const client = hub.getClient();\n  const options = (client && client.getOptions()) || {};\n\n  let transaction = new IdleTransaction(transactionContext, hub, idleTimeout, finalTimeout, heartbeatInterval, onScope);\n  transaction = sample(transaction, options, {\n    parentSampled: transactionContext.parentSampled,\n    transactionContext,\n    ...customSamplingContext,\n  });\n  if (transaction.sampled) {\n    transaction.initSpanRecorder(options._experiments && (options._experiments.maxSpans ));\n  }\n  if (client && client.emit) {\n    client.emit('startTransaction', transaction);\n  }\n  return transaction;\n}\n\n/**\n * Adds tracing extensions to the global hub.\n */\nfunction addTracingExtensions() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n  carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};\n  if (!carrier.__SENTRY__.extensions.startTransaction) {\n    carrier.__SENTRY__.extensions.startTransaction = _startTransaction;\n  }\n  if (!carrier.__SENTRY__.extensions.traceHeaders) {\n    carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;\n  }\n\n  registerErrorInstrumentation();\n}\n\nexport { addTracingExtensions, startIdleTransaction };\n//# sourceMappingURL=hubextensions.js.map\n","import { getCurrentHub } from '../hub.js';\n\n// Treeshakable guard to remove all code related to tracing\n\n/**\n * Determines if tracing is currently enabled.\n *\n * Tracing is enabled when at least one of `tracesSampleRate` and `tracesSampler` is defined in the SDK config.\n */\nfunction hasTracingEnabled(\n  maybeOptions,\n) {\n  if (typeof __SENTRY_TRACING__ === 'boolean' && !__SENTRY_TRACING__) {\n    return false;\n  }\n\n  const client = getCurrentHub().getClient();\n  const options = maybeOptions || (client && client.getOptions());\n  return !!options && (options.enableTracing || 'tracesSampleRate' in options || 'tracesSampler' in options);\n}\n\nexport { hasTracingEnabled };\n//# sourceMappingURL=hasTracingEnabled.js.map\n","/**\n * Polyfill for the optional chain operator, `?.`, given previous conversion of the expression into an array of values,\n * descriptors, and functions.\n *\n * Adapted from Sucrase (https://github.com/alangpierce/sucrase)\n * See https://github.com/alangpierce/sucrase/blob/265887868966917f3b924ce38dfad01fbab1329f/src/transformers/OptionalChainingNullishTransformer.ts#L15\n *\n * @param ops Array result of expression conversion\n * @returns The value of the expression\n */\nfunction _optionalChain(ops) {\n  let lastAccessLHS = undefined;\n  let value = ops[0];\n  let i = 1;\n  while (i < ops.length) {\n    const op = ops[i] ;\n    const fn = ops[i + 1] ;\n    i += 2;\n    // by checking for loose equality to `null`, we catch both `null` and `undefined`\n    if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n      // really we're meaning to return `undefined` as an actual value here, but it saves bytes not to write it\n      return;\n    }\n    if (op === 'access' || op === 'optionalAccess') {\n      lastAccessLHS = value;\n      value = fn(value);\n    } else if (op === 'call' || op === 'optionalCall') {\n      value = fn((...args) => (value ).call(lastAccessLHS, ...args));\n      lastAccessLHS = undefined;\n    }\n  }\n  return value;\n}\n\n// Sucrase version\n// function _optionalChain(ops) {\n//   let lastAccessLHS = undefined;\n//   let value = ops[0];\n//   let i = 1;\n//   while (i < ops.length) {\n//     const op = ops[i];\n//     const fn = ops[i + 1];\n//     i += 2;\n//     if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) {\n//       return undefined;\n//     }\n//     if (op === 'access' || op === 'optionalAccess') {\n//       lastAccessLHS = value;\n//       value = fn(value);\n//     } else if (op === 'call' || op === 'optionalCall') {\n//       value = fn((...args) => value.call(lastAccessLHS, ...args));\n//       lastAccessLHS = undefined;\n//     }\n//   }\n//   return value;\n// }\n\nexport { _optionalChain };\n//# sourceMappingURL=_optionalChain.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\n\n/**\n * Check if Sentry auto-instrumentation should be disabled.\n *\n * @param getCurrentHub A method to fetch the current hub\n * @returns boolean\n */\nfunction shouldDisableAutoInstrumentation(getCurrentHub) {\n  const clientOptions = _optionalChain([getCurrentHub, 'call', _ => _(), 'access', _2 => _2.getClient, 'call', _3 => _3(), 'optionalAccess', _4 => _4.getOptions, 'call', _5 => _5()]);\n  const instrumenter = _optionalChain([clientOptions, 'optionalAccess', _6 => _6.instrumenter]) || 'sentry';\n\n  return instrumenter !== 'sentry';\n}\n\nexport { shouldDisableAutoInstrumentation };\n//# sourceMappingURL=node-utils.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, getNumberOfUrlSegments, extractPathForTransaction, isRegExp } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/**\n * Express integration\n *\n * Provides an request and error handler for Express framework as well as tracing capabilities\n */\nclass Express  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Express';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Express.id;}\n\n  /**\n   * Express App instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Express.prototype.__init.call(this);\n    this._router = options.router || options.app;\n    this._methods = (Array.isArray(options.methods) ? options.methods : []).concat('use');\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._router) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('ExpressIntegration is missing an Express instance');\n      return;\n    }\n\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Express Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    instrumentMiddlewares(this._router, this._methods);\n    instrumentRouter(this._router );\n  }\n}Express.__initStatic();\n\n/**\n * Wraps original middleware function in a tracing call, which stores the info about the call as a span,\n * and finishes it once the middleware is done invoking.\n *\n * Express middlewares have 3 various forms, thus we have to take care of all of them:\n * // sync\n * app.use(function (req, res) { ... })\n * // async\n * app.use(function (req, res, next) { ... })\n * // error handler\n * app.use(function (err, req, res, next) { ... })\n *\n * They all internally delegate to the `router[method]` of the given application instance.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nfunction wrap(fn, method) {\n  const arity = fn.length;\n\n  switch (arity) {\n    case 2: {\n      return function ( req, res) {\n        const transaction = res.__sentry_transaction;\n        if (transaction) {\n          const span = transaction.startChild({\n            description: fn.name,\n            op: `middleware.express.${method}`,\n          });\n          res.once('finish', () => {\n            span.finish();\n          });\n        }\n        return fn.call(this, req, res);\n      };\n    }\n    case 3: {\n      return function (\n\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = _optionalChain([transaction, 'optionalAccess', _2 => _2.startChild, 'call', _3 => _3({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n        })]);\n        fn.call(this, req, res, function ( ...args) {\n          _optionalChain([span, 'optionalAccess', _4 => _4.finish, 'call', _5 => _5()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    case 4: {\n      return function (\n\n        err,\n        req,\n        res,\n        next,\n      ) {\n        const transaction = res.__sentry_transaction;\n        const span = _optionalChain([transaction, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: fn.name,\n          op: `middleware.express.${method}`,\n        })]);\n        fn.call(this, err, req, res, function ( ...args) {\n          _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n          next.call(this, ...args);\n        });\n      };\n    }\n    default: {\n      throw new Error(`Express middleware takes 2-4 arguments. Got: ${arity}`);\n    }\n  }\n}\n\n/**\n * Takes all the function arguments passed to the original `app` or `router` method, eg. `app.use` or `router.use`\n * and wraps every function, as well as array of functions with a call to our `wrap` method.\n * We have to take care of the arrays as well as iterate over all of the arguments,\n * as `app.use` can accept middlewares in few various forms.\n *\n * app.use([<path>], <fn>)\n * app.use([<path>], <fn>, ...<fn>)\n * app.use([<path>], ...<fn>[])\n */\nfunction wrapMiddlewareArgs(args, method) {\n  return args.map((arg) => {\n    if (typeof arg === 'function') {\n      return wrap(arg, method);\n    }\n\n    if (Array.isArray(arg)) {\n      return arg.map((a) => {\n        if (typeof a === 'function') {\n          return wrap(a, method);\n        }\n        return a;\n      });\n    }\n\n    return arg;\n  });\n}\n\n/**\n * Patches original router to utilize our tracing functionality\n */\nfunction patchMiddleware(router, method) {\n  const originalCallback = router[method];\n\n  router[method] = function (...args) {\n    return originalCallback.call(this, ...wrapMiddlewareArgs(args, method));\n  };\n\n  return router;\n}\n\n/**\n * Patches original router methods\n */\nfunction instrumentMiddlewares(router, methods = []) {\n  methods.forEach((method) => patchMiddleware(router, method));\n}\n\n/**\n * Patches the prototype of Express.Router to accumulate the resolved route\n * if a layer instance's `match` function was called and it returned a successful match.\n *\n * @see https://github.com/expressjs/express/blob/master/lib/router/index.js\n *\n * @param appOrRouter the router instance which can either be an app (i.e. top-level) or a (nested) router.\n */\nfunction instrumentRouter(appOrRouter) {\n  // This is how we can distinguish between app and routers\n  const isApp = 'settings' in appOrRouter;\n\n  // In case the app's top-level router hasn't been initialized yet, we have to do it now\n  if (isApp && appOrRouter._router === undefined && appOrRouter.lazyrouter) {\n    appOrRouter.lazyrouter();\n  }\n\n  const router = isApp ? appOrRouter._router : appOrRouter;\n\n  if (!router) {\n    /*\n    If we end up here, this means likely that this integration is used with Express 3 or Express 5.\n    For now, we don't support these versions (3 is very old and 5 is still in beta). To support Express 5,\n    we'd need to make more changes to the routing instrumentation because the router is no longer part of\n    the Express core package but maintained in its own package. The new router has different function\n    signatures and works slightly differently, demanding more changes than just taking the router from\n    `app.router` instead of `app._router`.\n    @see https://github.com/pillarjs/router\n\n    TODO: Proper Express 5 support\n    */\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.debug('Cannot instrument router for URL Parameterization (did not find a valid router).');\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.debug('Routing instrumentation is currently only supported in Express 4.');\n    return;\n  }\n\n  const routerProto = Object.getPrototypeOf(router) ;\n\n  const originalProcessParams = routerProto.process_params;\n  routerProto.process_params = function process_params(\n    layer,\n    called,\n    req,\n    res,\n    done,\n  ) {\n    // Base case: We're in the first part of the URL (thus we start with the root '/')\n    if (!req._reconstructedRoute) {\n      req._reconstructedRoute = '';\n    }\n\n    // If the layer's partial route has params, is a regex or an array, the route is stored in layer.route.\n    const { layerRoutePath, isRegex, isArray, numExtraSegments } = getLayerRoutePathInfo(layer);\n\n    if (layerRoutePath || isRegex || isArray) {\n      req._hasParameters = true;\n    }\n\n    // Otherwise, the hardcoded path (i.e. a partial route without params) is stored in layer.path\n    const partialRoute = layerRoutePath || layer.path || '';\n\n    // Normalize the partial route so that it doesn't contain leading or trailing slashes\n    // and exclude empty or '*' wildcard routes.\n    // The exclusion of '*' routes is our best effort to not \"pollute\" the transaction name\n    // with interim handlers (e.g. ones that check authentication or do other middleware stuff).\n    // We want to end up with the parameterized URL of the incoming request without any extraneous path segments.\n    const finalPartialRoute = partialRoute\n      .split('/')\n      .filter(segment => segment.length > 0 && (isRegex || isArray || !segment.includes('*')))\n      .join('/');\n\n    // If we found a valid partial URL, we append it to the reconstructed route\n    if (finalPartialRoute && finalPartialRoute.length > 0) {\n      // If the partial route is from a regex route, we append a '/' to close the regex\n      req._reconstructedRoute += `/${finalPartialRoute}${isRegex ? '/' : ''}`;\n    }\n\n    // Now we check if we are in the \"last\" part of the route. We determine this by comparing the\n    // number of URL segments from the original URL to that of our reconstructed parameterized URL.\n    // If we've reached our final destination, we update the transaction name.\n    const urlLength = getNumberOfUrlSegments(req.originalUrl || '') + numExtraSegments;\n    const routeLength = getNumberOfUrlSegments(req._reconstructedRoute);\n\n    if (urlLength === routeLength) {\n      if (!req._hasParameters) {\n        if (req._reconstructedRoute !== req.originalUrl) {\n          req._reconstructedRoute = req.originalUrl;\n        }\n      }\n\n      const transaction = res.__sentry_transaction;\n      if (transaction && transaction.metadata.source !== 'custom') {\n        // If the request URL is '/' or empty, the reconstructed route will be empty.\n        // Therefore, we fall back to setting the final route to '/' in this case.\n        const finalRoute = req._reconstructedRoute || '/';\n\n        transaction.setName(...extractPathForTransaction(req, { path: true, method: true, customRoute: finalRoute }));\n      }\n    }\n\n    return originalProcessParams.call(this, layer, called, req, res, done);\n  };\n}\n\n/**\n * Extracts and stringifies the layer's route which can either be a string with parameters (`users/:id`),\n * a RegEx (`/test/`) or an array of strings and regexes (`['/path1', /\\/path[2-5]/, /path/:id]`). Additionally\n * returns extra information about the route, such as if the route is defined as regex or as an array.\n *\n * @param layer the layer to extract the stringified route from\n *\n * @returns an object containing the stringified route, a flag determining if the route was a regex\n *          and the number of extra segments to the matched path that are additionally in the route,\n *          if the route was an array (defaults to 0).\n */\nfunction getLayerRoutePathInfo(layer) {\n  const lrp = _optionalChain([layer, 'access', _10 => _10.route, 'optionalAccess', _11 => _11.path]);\n\n  const isRegex = isRegExp(lrp);\n  const isArray = Array.isArray(lrp);\n\n  if (!lrp) {\n    return { isRegex, isArray, numExtraSegments: 0 };\n  }\n\n  const numExtraSegments = isArray\n    ? Math.max(getNumberOfArrayUrlSegments(lrp ) - getNumberOfUrlSegments(layer.path || ''), 0)\n    : 0;\n\n  const layerRoutePath = getLayerRoutePathString(isArray, lrp);\n\n  return { layerRoutePath, isRegex, isArray, numExtraSegments };\n}\n\n/**\n * Returns the number of URL segments in an array of routes\n *\n * Example: ['/api/test', /\\/api\\/post[0-9]/, '/users/:id/details`] -> 7\n */\nfunction getNumberOfArrayUrlSegments(routesArray) {\n  return routesArray.reduce((accNumSegments, currentRoute) => {\n    // array members can be a RegEx -> convert them toString\n    return accNumSegments + getNumberOfUrlSegments(currentRoute.toString());\n  }, 0);\n}\n\n/**\n * Extracts and returns the stringified version of the layers route path\n * Handles route arrays (by joining the paths together) as well as RegExp and normal\n * string values (in the latter case the toString conversion is technically unnecessary but\n * it doesn't hurt us either).\n */\nfunction getLayerRoutePathString(isArray, lrp) {\n  if (isArray) {\n    return (lrp ).map(r => r.toString()).join(',');\n  }\n  return lrp && lrp.toString();\n}\n\nexport { Express };\n//# sourceMappingURL=express.js.map\n","import { isString, isPlainObject } from './is.js';\nimport { normalize } from './normalize.js';\nimport { stripUrlQueryAndFragment } from './url.js';\n\nconst DEFAULT_INCLUDES = {\n  ip: false,\n  request: true,\n  transaction: true,\n  user: true,\n};\nconst DEFAULT_REQUEST_INCLUDES = ['cookies', 'data', 'headers', 'method', 'query_string', 'url'];\nconst DEFAULT_USER_INCLUDES = ['id', 'username', 'email'];\n\n/**\n * Sets parameterized route as transaction name e.g.: `GET /users/:id`\n * Also adds more context data on the transaction from the request\n */\nfunction addRequestDataToTransaction(\n  transaction,\n  req,\n  deps,\n) {\n  if (!transaction) return;\n  if (!transaction.metadata.source || transaction.metadata.source === 'url') {\n    // Attempt to grab a parameterized route off of the request\n    transaction.setName(...extractPathForTransaction(req, { path: true, method: true }));\n  }\n  transaction.setData('url', req.originalUrl || req.url);\n  if (req.baseUrl) {\n    transaction.setData('baseUrl', req.baseUrl);\n  }\n  transaction.setData('query', extractQueryParams(req, deps));\n}\n\n/**\n * Extracts a complete and parameterized path from the request object and uses it to construct transaction name.\n * If the parameterized transaction name cannot be extracted, we fall back to the raw URL.\n *\n * Additionally, this function determines and returns the transaction name source\n *\n * eg. GET /mountpoint/user/:id\n *\n * @param req A request object\n * @param options What to include in the transaction name (method, path, or a custom route name to be\n *                used instead of the request's route)\n *\n * @returns A tuple of the fully constructed transaction name [0] and its source [1] (can be either 'route' or 'url')\n */\nfunction extractPathForTransaction(\n  req,\n  options = {},\n) {\n  const method = req.method && req.method.toUpperCase();\n\n  let path = '';\n  let source = 'url';\n\n  // Check to see if there's a parameterized route we can use (as there is in Express)\n  if (options.customRoute || req.route) {\n    path = options.customRoute || `${req.baseUrl || ''}${req.route && req.route.path}`;\n    source = 'route';\n  }\n\n  // Otherwise, just take the original URL\n  else if (req.originalUrl || req.url) {\n    path = stripUrlQueryAndFragment(req.originalUrl || req.url || '');\n  }\n\n  let name = '';\n  if (options.method && method) {\n    name += method;\n  }\n  if (options.method && options.path) {\n    name += ' ';\n  }\n  if (options.path && path) {\n    name += path;\n  }\n\n  return [name, source];\n}\n\n/** JSDoc */\nfunction extractTransaction(req, type) {\n  switch (type) {\n    case 'path': {\n      return extractPathForTransaction(req, { path: true })[0];\n    }\n    case 'handler': {\n      return (req.route && req.route.stack && req.route.stack[0] && req.route.stack[0].name) || '<anonymous>';\n    }\n    case 'methodPath':\n    default: {\n      return extractPathForTransaction(req, { path: true, method: true })[0];\n    }\n  }\n}\n\n/** JSDoc */\nfunction extractUserData(\n  user\n\n,\n  keys,\n) {\n  const extractedUser = {};\n  const attributes = Array.isArray(keys) ? keys : DEFAULT_USER_INCLUDES;\n\n  attributes.forEach(key => {\n    if (user && key in user) {\n      extractedUser[key] = user[key];\n    }\n  });\n\n  return extractedUser;\n}\n\n/**\n * Normalize data from the request object, accounting for framework differences.\n *\n * @param req The request object from which to extract data\n * @param options.include An optional array of keys to include in the normalized data. Defaults to\n * DEFAULT_REQUEST_INCLUDES if not provided.\n * @param options.deps Injected, platform-specific dependencies\n * @returns An object containing normalized request data\n */\nfunction extractRequestData(\n  req,\n  options\n\n,\n) {\n  const { include = DEFAULT_REQUEST_INCLUDES, deps } = options || {};\n  const requestData = {};\n\n  // headers:\n  //   node, express, koa, nextjs: req.headers\n  const headers = (req.headers || {})\n\n;\n  // method:\n  //   node, express, koa, nextjs: req.method\n  const method = req.method;\n  // host:\n  //   express: req.hostname in > 4 and req.host in < 4\n  //   koa: req.host\n  //   node, nextjs: req.headers.host\n  const host = req.hostname || req.host || headers.host || '<no host>';\n  // protocol:\n  //   node, nextjs: <n/a>\n  //   express, koa: req.protocol\n  const protocol = req.protocol === 'https' || (req.socket && req.socket.encrypted) ? 'https' : 'http';\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  const originalUrl = req.originalUrl || req.url || '';\n  // absolute url\n  const absoluteUrl = `${protocol}://${host}${originalUrl}`;\n  include.forEach(key => {\n    switch (key) {\n      case 'headers': {\n        requestData.headers = headers;\n        break;\n      }\n      case 'method': {\n        requestData.method = method;\n        break;\n      }\n      case 'url': {\n        requestData.url = absoluteUrl;\n        break;\n      }\n      case 'cookies': {\n        // cookies:\n        //   node, express, koa: req.headers.cookie\n        //   vercel, sails.js, express (w/ cookie middleware), nextjs: req.cookies\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.cookies =\n          // TODO (v8 / #5257): We're only sending the empty object for backwards compatibility, so the last bit can\n          // come off in v8\n          req.cookies || (headers.cookie && deps && deps.cookie && deps.cookie.parse(headers.cookie)) || {};\n        break;\n      }\n      case 'query_string': {\n        // query string:\n        //   node: req.url (raw)\n        //   express, koa, nextjs: req.query\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        requestData.query_string = extractQueryParams(req, deps);\n        break;\n      }\n      case 'data': {\n        if (method === 'GET' || method === 'HEAD') {\n          break;\n        }\n        // body data:\n        //   express, koa, nextjs: req.body\n        //\n        //   when using node by itself, you have to read the incoming stream(see\n        //   https://nodejs.dev/learn/get-http-request-body-data-using-nodejs); if a user is doing that, we can't know\n        //   where they're going to store the final result, so they'll have to capture this data themselves\n        if (req.body !== undefined) {\n          requestData.data = isString(req.body) ? req.body : JSON.stringify(normalize(req.body));\n        }\n        break;\n      }\n      default: {\n        if ({}.hasOwnProperty.call(req, key)) {\n          requestData[key] = (req )[key];\n        }\n      }\n    }\n  });\n\n  return requestData;\n}\n\n/**\n * Options deciding what parts of the request to use when enhancing an event\n */\n\n/**\n * Add data from the given request to the given event\n *\n * @param event The event to which the request data will be added\n * @param req Request object\n * @param options.include Flags to control what data is included\n * @param options.deps Injected platform-specific dependencies\n * @hidden\n */\nfunction addRequestDataToEvent(\n  event,\n  req,\n  options,\n) {\n  const include = {\n    ...DEFAULT_INCLUDES,\n    ...(options && options.include),\n  };\n\n  if (include.request) {\n    const extractedRequestData = Array.isArray(include.request)\n      ? extractRequestData(req, { include: include.request, deps: options && options.deps })\n      : extractRequestData(req, { deps: options && options.deps });\n\n    event.request = {\n      ...event.request,\n      ...extractedRequestData,\n    };\n  }\n\n  if (include.user) {\n    const extractedUser = req.user && isPlainObject(req.user) ? extractUserData(req.user, include.user) : {};\n\n    if (Object.keys(extractedUser).length) {\n      event.user = {\n        ...event.user,\n        ...extractedUser,\n      };\n    }\n  }\n\n  // client ip:\n  //   node, nextjs: req.socket.remoteAddress\n  //   express, koa: req.ip\n  if (include.ip) {\n    const ip = req.ip || (req.socket && req.socket.remoteAddress);\n    if (ip) {\n      event.user = {\n        ...event.user,\n        ip_address: ip,\n      };\n    }\n  }\n\n  if (include.transaction && !event.transaction) {\n    // TODO do we even need this anymore?\n    // TODO make this work for nextjs\n    event.transaction = extractTransaction(req, include.transaction);\n  }\n\n  return event;\n}\n\nfunction extractQueryParams(\n  req,\n  deps,\n) {\n  // url (including path and query string):\n  //   node, express: req.originalUrl\n  //   koa, nextjs: req.url\n  let originalUrl = req.originalUrl || req.url || '';\n\n  if (!originalUrl) {\n    return;\n  }\n\n  // The `URL` constructor can't handle internal URLs of the form `/some/path/here`, so stick a dummy protocol and\n  // hostname on the beginning. Since the point here is just to grab the query string, it doesn't matter what we use.\n  if (originalUrl.startsWith('/')) {\n    originalUrl = `http://dogs.are.great${originalUrl}`;\n  }\n\n  return (\n    req.query ||\n    (typeof URL !== undefined && new URL(originalUrl).search.replace('?', '')) ||\n    // In Node 8, `URL` isn't in the global scope, so we have to use the built-in module from Node\n    (deps && deps.url && deps.url.parse(originalUrl).query) ||\n    undefined\n  );\n}\n\nexport { addRequestDataToEvent, addRequestDataToTransaction, extractPathForTransaction, extractRequestData };\n//# sourceMappingURL=requestdata.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, loadModule, fill, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-postgres package */\nclass Postgres  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Postgres';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Postgres.id;}\n\n   constructor(options = {}) {Postgres.prototype.__init.call(this);\n    this._usePgNative = !!options.usePgNative;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Postgres Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = loadModule('pg');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Postgres Integration was unable to require `pg` package.');\n      return;\n    }\n\n    if (this._usePgNative && !_optionalChain([pkg, 'access', _2 => _2.native, 'optionalAccess', _3 => _3.Client])) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(\"Postgres Integration was unable to access 'pg-native' bindings.\");\n      return;\n    }\n\n    const { Client } = this._usePgNative ? pkg.native : pkg;\n\n    /**\n     * function (query, callback) => void\n     * function (query, params, callback) => void\n     * function (query) => Promise\n     * function (query, params) => Promise\n     * function (pg.Cursor) => pg.Cursor\n     */\n    fill(Client.prototype, 'query', function (orig) {\n      return function ( config, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = _optionalChain([scope, 'optionalAccess', _4 => _4.getSpan, 'call', _5 => _5()]);\n        const span = _optionalChain([parentSpan, 'optionalAccess', _6 => _6.startChild, 'call', _7 => _7({\n          description: typeof config === 'string' ? config : (config ).text,\n          op: 'db',\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, config, values, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            callback(err, result);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, config, function (err, result) {\n            _optionalChain([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            values(err, result);\n          });\n        }\n\n        const rv = typeof values !== 'undefined' ? orig.call(this, config, values) : orig.call(this, config);\n\n        if (isThenable(rv)) {\n          return rv.then((res) => {\n            _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _14 => _14.finish, 'call', _15 => _15()]);\n        return rv;\n      };\n    });\n  }\n}Postgres.__initStatic();\n\nexport { Postgres };\n//# sourceMappingURL=postgres.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, loadModule, fill } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for node-mysql package */\nclass Mysql  {constructor() { Mysql.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mysql';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Mysql.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Mysql Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = loadModule('mysql/lib/Connection.js');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Mysql Integration was unable to require `mysql` package.');\n      return;\n    }\n\n    // The original function will have one of these signatures:\n    //    function (callback) => void\n    //    function (options, callback) => void\n    //    function (options, values, callback) => void\n    fill(pkg, 'createQuery', function (orig) {\n      return function ( options, values, callback) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n        const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: typeof options === 'string' ? options : (options ).sql,\n          op: 'db',\n        })]);\n\n        if (typeof callback === 'function') {\n          return orig.call(this, options, values, function (err, result, fields) {\n            _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n            callback(err, result, fields);\n          });\n        }\n\n        if (typeof values === 'function') {\n          return orig.call(this, options, function (err, result, fields) {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            values(err, result, fields);\n          });\n        }\n\n        return orig.call(this, options, values, callback);\n      };\n    });\n  }\n}Mysql.__initStatic();\n\nexport { Mysql };\n//# sourceMappingURL=mysql.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, loadModule, fill, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n// This allows us to use the same array for both defaults options and the type itself.\n// (note `as const` at the end to make it a union of string literal types (i.e. \"a\" | \"b\" | ... )\n// and not just a string[])\n\nconst OPERATIONS = [\n  'aggregate', // aggregate(pipeline, options, callback)\n  'bulkWrite', // bulkWrite(operations, options, callback)\n  'countDocuments', // countDocuments(query, options, callback)\n  'createIndex', // createIndex(fieldOrSpec, options, callback)\n  'createIndexes', // createIndexes(indexSpecs, options, callback)\n  'deleteMany', // deleteMany(filter, options, callback)\n  'deleteOne', // deleteOne(filter, options, callback)\n  'distinct', // distinct(key, query, options, callback)\n  'drop', // drop(options, callback)\n  'dropIndex', // dropIndex(indexName, options, callback)\n  'dropIndexes', // dropIndexes(options, callback)\n  'estimatedDocumentCount', // estimatedDocumentCount(options, callback)\n  'find', // find(query, options, callback)\n  'findOne', // findOne(query, options, callback)\n  'findOneAndDelete', // findOneAndDelete(filter, options, callback)\n  'findOneAndReplace', // findOneAndReplace(filter, replacement, options, callback)\n  'findOneAndUpdate', // findOneAndUpdate(filter, update, options, callback)\n  'indexes', // indexes(options, callback)\n  'indexExists', // indexExists(indexes, options, callback)\n  'indexInformation', // indexInformation(options, callback)\n  'initializeOrderedBulkOp', // initializeOrderedBulkOp(options, callback)\n  'insertMany', // insertMany(docs, options, callback)\n  'insertOne', // insertOne(doc, options, callback)\n  'isCapped', // isCapped(options, callback)\n  'mapReduce', // mapReduce(map, reduce, options, callback)\n  'options', // options(options, callback)\n  'parallelCollectionScan', // parallelCollectionScan(options, callback)\n  'rename', // rename(newName, options, callback)\n  'replaceOne', // replaceOne(filter, doc, options, callback)\n  'stats', // stats(options, callback)\n  'updateMany', // updateMany(filter, update, options, callback)\n  'updateOne', // updateOne(filter, update, options, callback)\n] ;\n\n// All of the operations above take `options` and `callback` as their final parameters, but some of them\n// take additional parameters as well. For those operations, this is a map of\n// { <operation name>:  [<names of additional parameters>] }, as a way to know what to call the operation's\n// positional arguments when we add them to the span's `data` object later\nconst OPERATION_SIGNATURES\n\n = {\n  // aggregate intentionally not included because `pipeline` arguments are too complex to serialize well\n  // see https://github.com/getsentry/sentry-javascript/pull/3102\n  bulkWrite: ['operations'],\n  countDocuments: ['query'],\n  createIndex: ['fieldOrSpec'],\n  createIndexes: ['indexSpecs'],\n  deleteMany: ['filter'],\n  deleteOne: ['filter'],\n  distinct: ['key', 'query'],\n  dropIndex: ['indexName'],\n  find: ['query'],\n  findOne: ['query'],\n  findOneAndDelete: ['filter'],\n  findOneAndReplace: ['filter', 'replacement'],\n  findOneAndUpdate: ['filter', 'update'],\n  indexExists: ['indexes'],\n  insertMany: ['docs'],\n  insertOne: ['doc'],\n  mapReduce: ['map', 'reduce'],\n  rename: ['newName'],\n  replaceOne: ['filter', 'doc'],\n  updateMany: ['filter', 'update'],\n  updateOne: ['filter', 'update'],\n};\n\nfunction isCursor(maybeCursor) {\n  return maybeCursor && typeof maybeCursor === 'object' && maybeCursor.once && typeof maybeCursor.once === 'function';\n}\n\n/** Tracing integration for mongo package */\nclass Mongo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Mongo';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Mongo.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Mongo.prototype.__init.call(this);\n    this._operations = Array.isArray(options.operations) ? options.operations : (OPERATIONS );\n    this._describeOperations = 'describeOperations' in options ? options.describeOperations : true;\n    this._useMongoose = !!options.useMongoose;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Mongo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const moduleName = this._useMongoose ? 'mongoose' : 'mongodb';\n    const pkg = loadModule(moduleName);\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error(`Mongo Integration was unable to require \\`${moduleName}\\` package.`);\n      return;\n    }\n\n    this._instrumentOperations(pkg.Collection, this._operations, getCurrentHub);\n  }\n\n  /**\n   * Patches original collection methods\n   */\n   _instrumentOperations(collection, operations, getCurrentHub) {\n    operations.forEach((operation) => this._patchOperation(collection, operation, getCurrentHub));\n  }\n\n  /**\n   * Patches original collection to utilize our tracing functionality\n   */\n   _patchOperation(collection, operation, getCurrentHub) {\n    if (!(operation in collection.prototype)) return;\n\n    const getSpanContext = this._getSpanContextFromOperationArguments.bind(this);\n\n    fill(collection.prototype, operation, function (orig) {\n      return function ( ...args) {\n        const lastArg = args[args.length - 1];\n        const scope = getCurrentHub().getScope();\n        const parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n        // Check if the operation was passed a callback. (mapReduce requires a different check, as\n        // its (non-callback) arguments can also be functions.)\n        if (typeof lastArg !== 'function' || (operation === 'mapReduce' && args.length === 2)) {\n          const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5(getSpanContext(this, operation, args))]);\n          const maybePromiseOrCursor = orig.call(this, ...args);\n\n          if (isThenable(maybePromiseOrCursor)) {\n            return maybePromiseOrCursor.then((res) => {\n              _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n              return res;\n            });\n          }\n          // If the operation returns a Cursor\n          // we need to attach a listener to it to finish the span when the cursor is closed.\n          else if (isCursor(maybePromiseOrCursor)) {\n            const cursor = maybePromiseOrCursor ;\n\n            try {\n              cursor.once('close', () => {\n                _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n              });\n            } catch (e) {\n              // If the cursor is already closed, `once` will throw an error. In that case, we can\n              // finish the span immediately.\n              _optionalChain([span, 'optionalAccess', _10 => _10.finish, 'call', _11 => _11()]);\n            }\n\n            return cursor;\n          } else {\n            _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n            return maybePromiseOrCursor;\n          }\n        }\n\n        const span = _optionalChain([parentSpan, 'optionalAccess', _14 => _14.startChild, 'call', _15 => _15(getSpanContext(this, operation, args.slice(0, -1)))]);\n\n        return orig.call(this, ...args.slice(0, -1), function (err, result) {\n          _optionalChain([span, 'optionalAccess', _16 => _16.finish, 'call', _17 => _17()]);\n          lastArg(err, result);\n        });\n      };\n    });\n  }\n\n  /**\n   * Form a SpanContext based on the user input to a given operation.\n   */\n   _getSpanContextFromOperationArguments(\n    collection,\n    operation,\n    args,\n  ) {\n    const data = {\n      collectionName: collection.collectionName,\n      dbName: collection.dbName,\n      namespace: collection.namespace,\n    };\n    const spanContext = {\n      op: 'db',\n      description: operation,\n      data,\n    };\n\n    // If the operation takes no arguments besides `options` and `callback`, or if argument\n    // collection is disabled for this operation, just return early.\n    const signature = OPERATION_SIGNATURES[operation];\n    const shouldDescribe = Array.isArray(this._describeOperations)\n      ? this._describeOperations.includes(operation)\n      : this._describeOperations;\n\n    if (!signature || !shouldDescribe) {\n      return spanContext;\n    }\n\n    try {\n      // Special case for `mapReduce`, as the only one accepting functions as arguments.\n      if (operation === 'mapReduce') {\n        const [map, reduce] = args ;\n        data[signature[0]] = typeof map === 'string' ? map : map.name || '<anonymous>';\n        data[signature[1]] = typeof reduce === 'string' ? reduce : reduce.name || '<anonymous>';\n      } else {\n        for (let i = 0; i < signature.length; i++) {\n          data[signature[i]] = JSON.stringify(args[i]);\n        }\n      }\n    } catch (_oO) {\n      // no-empty\n    }\n\n    return spanContext;\n  }\n}Mongo.__initStatic();\n\nexport { Mongo };\n//# sourceMappingURL=mongo.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\nfunction isValidPrismaClient(possibleClient) {\n  return possibleClient && !!(possibleClient )['$use'];\n}\n\n/** Tracing integration for @prisma/client package */\nclass Prisma  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Prisma';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Prisma.id;}\n\n  /**\n   * Prisma ORM Client Instance\n   */\n\n  /**\n   * @inheritDoc\n   */\n   constructor(options = {}) {Prisma.prototype.__init.call(this);\n    if (isValidPrismaClient(options.client)) {\n      this._client = options.client;\n    } else {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(\n          `Unsupported Prisma client provided to PrismaIntegration. Provided client: ${JSON.stringify(options.client)}`,\n        );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (!this._client) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('PrismaIntegration is missing a Prisma Client Instance');\n      return;\n    }\n\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Prisma Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    this._client.$use((params, next) => {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n      const action = params.action;\n      const model = params.model;\n\n      const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n        description: model ? `${model} ${action}` : action,\n        op: 'db.sql.prisma',\n      })]);\n\n      const rv = next(params);\n\n      if (isThenable(rv)) {\n        return rv.then((res) => {\n          _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n          return res;\n        });\n      }\n\n      _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n      return rv;\n    });\n  }\n}Prisma.__initStatic();\n\nexport { Prisma };\n//# sourceMappingURL=prisma.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, loadModule, fill, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for graphql package */\nclass GraphQL  {constructor() { GraphQL.prototype.__init.call(this); }\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'GraphQL';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = GraphQL.id;}\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('GraphQL Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    const pkg = loadModule\n\n('graphql/execution/execute.js');\n\n    if (!pkg) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('GraphQL Integration was unable to require graphql/execution package.');\n      return;\n    }\n\n    fill(pkg, 'execute', function (orig) {\n      return function ( ...args) {\n        const scope = getCurrentHub().getScope();\n        const parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n\n        const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n          description: 'execute',\n          op: 'graphql.execute',\n        })]);\n\n        _optionalChain([scope, 'optionalAccess', _6 => _6.setSpan, 'call', _7 => _7(span)]);\n\n        const rv = orig.call(this, ...args);\n\n        if (isThenable(rv)) {\n          return rv.then((res) => {\n            _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n            _optionalChain([scope, 'optionalAccess', _10 => _10.setSpan, 'call', _11 => _11(parentSpan)]);\n\n            return res;\n          });\n        }\n\n        _optionalChain([span, 'optionalAccess', _12 => _12.finish, 'call', _13 => _13()]);\n        _optionalChain([scope, 'optionalAccess', _14 => _14.setSpan, 'call', _15 => _15(parentSpan)]);\n        return rv;\n      };\n    });\n  }\n}GraphQL.__initStatic();\n\nexport { GraphQL };\n//# sourceMappingURL=graphql.js.map\n","import { _optionalChain } from '@sentry/utils/esm/buildPolyfills';\nimport { logger, loadModule, fill, arrayify, isThenable } from '@sentry/utils';\nimport { shouldDisableAutoInstrumentation } from './utils/node-utils.js';\n\n/** Tracing integration for Apollo */\nclass Apollo  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Apollo';}\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = Apollo.id;}\n\n  /**\n   * @inheritDoc\n   */\n   constructor(\n    options = {\n      useNestjs: false,\n    },\n  ) {Apollo.prototype.__init.call(this);\n    this._useNest = !!options.useNestjs;\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    if (shouldDisableAutoInstrumentation(getCurrentHub)) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log('Apollo Integration is skipped because of instrumenter configuration.');\n      return;\n    }\n\n    if (this._useNest) {\n      const pkg = loadModule\n\n('@nestjs/graphql');\n\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Apollo-NestJS Integration was unable to require @nestjs/graphql package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of NestJS ResolversExplorerService before schemas are constructed.\n       */\n      fill(\n        pkg.GraphQLFactory.prototype,\n        'mergeWithSchema',\n        function (orig) {\n          return function (\n\n            ...args\n          ) {\n            fill(this.resolversExplorerService, 'explore', function (orig) {\n              return function () {\n                const resolvers = arrayify(orig.call(this));\n\n                const instrumentedResolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n                return instrumentedResolvers;\n              };\n            });\n\n            return orig.call(this, ...args);\n          };\n        },\n      );\n    } else {\n      const pkg = loadModule\n\n('apollo-server-core');\n\n      if (!pkg) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.error('Apollo Integration was unable to require apollo-server-core package.');\n        return;\n      }\n\n      /**\n       * Iterate over resolvers of the ApolloServer instance before schemas are constructed.\n       */\n      fill(pkg.ApolloServerBase.prototype, 'constructSchema', function (orig) {\n        return function (\n\n) {\n          if (!this.config.resolvers) {\n            if ((typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__)) {\n              if (this.config.schema) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `schema` property.' +\n                    'If you are using NestJS with Apollo, please use `Sentry.Integrations.Apollo({ useNestjs: true })` instead.',\n                );\n                logger.warn();\n              } else if (this.config.modules) {\n                logger.warn(\n                  'Apollo integration is not able to trace `ApolloServer` instances constructed via `modules` property.',\n                );\n              }\n\n              logger.error('Skipping tracing as no resolvers found on the `ApolloServer` instance.');\n            }\n\n            return orig.call(this);\n          }\n\n          const resolvers = arrayify(this.config.resolvers);\n\n          this.config.resolvers = instrumentResolvers(resolvers, getCurrentHub);\n\n          return orig.call(this);\n        };\n      });\n    }\n  }\n}Apollo.__initStatic();\n\nfunction instrumentResolvers(resolvers, getCurrentHub) {\n  return resolvers.map(model => {\n    Object.keys(model).forEach(resolverGroupName => {\n      Object.keys(model[resolverGroupName]).forEach(resolverName => {\n        if (typeof model[resolverGroupName][resolverName] !== 'function') {\n          return;\n        }\n\n        wrapResolver(model, resolverGroupName, resolverName, getCurrentHub);\n      });\n    });\n\n    return model;\n  });\n}\n\n/**\n * Wrap a single resolver which can be a parent of other resolvers and/or db operations.\n */\nfunction wrapResolver(\n  model,\n  resolverGroupName,\n  resolverName,\n  getCurrentHub,\n) {\n  fill(model[resolverGroupName], resolverName, function (orig) {\n    return function ( ...args) {\n      const scope = getCurrentHub().getScope();\n      const parentSpan = _optionalChain([scope, 'optionalAccess', _2 => _2.getSpan, 'call', _3 => _3()]);\n      const span = _optionalChain([parentSpan, 'optionalAccess', _4 => _4.startChild, 'call', _5 => _5({\n        description: `${resolverGroupName}.${resolverName}`,\n        op: 'graphql.resolve',\n      })]);\n\n      const rv = orig.call(this, ...args);\n\n      if (isThenable(rv)) {\n        return rv.then((res) => {\n          _optionalChain([span, 'optionalAccess', _6 => _6.finish, 'call', _7 => _7()]);\n          return res;\n        });\n      }\n\n      _optionalChain([span, 'optionalAccess', _8 => _8.finish, 'call', _9 => _9()]);\n\n      return rv;\n    };\n  });\n}\n\nexport { Apollo };\n//# sourceMappingURL=apollo.js.map\n","import { GLOBAL_OBJ } from '@sentry/utils';\n\nconst WINDOW = GLOBAL_OBJ ;\n\nexport { WINDOW };\n//# sourceMappingURL=types.js.map\n","import { hasTracingEnabled, getCurrentHub } from '@sentry/core';\nimport { addInstrumentationHandler, dynamicSamplingContextToSentryBaggageHeader, isInstanceOf, BAGGAGE_HEADER_NAME, stringMatchesSomePattern } from '@sentry/utils';\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\//];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  // eslint-disable-next-line deprecation/deprecation\n  const { traceFetch, traceXHR, tracePropagationTargets, tracingOrigins, shouldCreateSpanForRequest } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    addInstrumentationHandler('fetch', (handlerData) => {\n      fetchCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n\n  if (traceXHR) {\n    addInstrumentationHandler('xhr', (handlerData) => {\n      xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n    });\n  }\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return stringMatchesSomePattern(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track fetch request spans\n */\nfunction fetchCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (!hasTracingEnabled() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) {\n    return;\n  }\n\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      if (handlerData.response) {\n        // TODO (kmclb) remove this once types PR goes through\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        span.setHttpStatus(handlerData.response.status);\n      } else if (handlerData.error) {\n        span.setStatus('internal_error');\n      }\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const currentScope = getCurrentHub().getScope();\n  const currentSpan = currentScope && currentScope.getSpan();\n  const activeTransaction = currentSpan && currentSpan.transaction;\n\n  if (currentSpan && activeTransaction) {\n    const span = currentSpan.startChild({\n      data: {\n        ...handlerData.fetchData,\n        type: 'fetch',\n      },\n      description: `${handlerData.fetchData.method} ${handlerData.fetchData.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.fetchData.__span = span.spanId;\n    spans[span.spanId] = span;\n\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    if (shouldAttachHeaders(handlerData.fetchData.url)) {\n      options.headers = addTracingHeadersToFetchRequest(\n        request,\n        activeTransaction.getDynamicSamplingContext(),\n        span,\n        options,\n      );\n    }\n  }\n}\n\nfunction addTracingHeadersToFetchRequest(\n  request,\n  dynamicSamplingContext,\n  span,\n  options\n\n,\n) {\n  const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n  const sentryTraceHeader = span.toTraceparent();\n\n  const headers =\n    typeof Request !== 'undefined' && isInstanceOf(request, Request) ? (request ).headers : options.headers;\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && isInstanceOf(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended miultiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\n/**\n * Create and track xhr request spans\n */\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  if (\n    !hasTracingEnabled() ||\n    (handlerData.xhr && handlerData.xhr.__sentry_own_request__) ||\n    !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))\n  ) {\n    return;\n  }\n\n  const xhr = handlerData.xhr.__sentry_xhr__;\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp) {\n    const spanId = handlerData.xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      span.setHttpStatus(xhr.status_code);\n      span.finish();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return;\n  }\n\n  const currentScope = getCurrentHub().getScope();\n  const currentSpan = currentScope && currentScope.getSpan();\n  const activeTransaction = currentSpan && currentSpan.transaction;\n\n  if (currentSpan && activeTransaction) {\n    const span = currentSpan.startChild({\n      data: {\n        ...xhr.data,\n        type: 'xhr',\n        method: xhr.method,\n        url: xhr.url,\n      },\n      description: `${xhr.method} ${xhr.url}`,\n      op: 'http.client',\n    });\n\n    handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;\n    spans[handlerData.xhr.__sentry_xhr_span_id__] = span;\n\n    if (handlerData.xhr.setRequestHeader && shouldAttachHeaders(handlerData.xhr.__sentry_xhr__.url)) {\n      try {\n        handlerData.xhr.setRequestHeader('sentry-trace', span.toTraceparent());\n\n        const dynamicSamplingContext = activeTransaction.getDynamicSamplingContext();\n        const sentryBaggageHeader = dynamicSamplingContextToSentryBaggageHeader(dynamicSamplingContext);\n\n        if (sentryBaggageHeader) {\n          // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n          // We can therefore simply set a baggage header without checking what was there before\n          // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n          handlerData.xhr.setRequestHeader(BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n        }\n      } catch (_) {\n        // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n      }\n    }\n  }\n}\n\nexport { DEFAULT_TRACE_PROPAGATION_TARGETS, defaultRequestInstrumentationOptions, fetchCallback, instrumentOutgoingRequests, shouldAttachHeaders, xhrCallback };\n//# sourceMappingURL=request.js.map\n","import { TRACING_DEFAULTS, addTracingExtensions, extractTraceparentData, startIdleTransaction } from '@sentry/core';\nimport { logger, baggageHeaderToDynamicSamplingContext, getDomElement } from '@sentry/utils';\nimport { registerBackgroundTabDetection } from './backgroundtab.js';\nimport { startTrackingWebVitals, startTrackingLongTasks, startTrackingInteractions, addPerformanceEntries } from './metrics/index.js';\nimport { defaultRequestInstrumentationOptions, instrumentOutgoingRequests } from './request.js';\nimport { instrumentRoutingWithDefaults } from './router.js';\nimport { WINDOW } from './types.js';\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ...TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  _experiments: {},\n  ...defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n   __init() {this.name = BROWSER_TRACING_INTEGRATION_ID;}\n\n   constructor(_options) {BrowserTracing.prototype.__init.call(this);\n    addTracingExtensions();\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = startTrackingWebVitals();\n    if (this.options.enableLongTask) {\n      startTrackingLongTasks();\n    }\n    if (this.options._experiments.enableInteractions) {\n      startTrackingInteractions();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      _experiments,\n    } = this.options;\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      registerBackgroundTabDetection();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    instrumentOutgoingRequests({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    const sentryTraceMetaTagValue = isPageloadTransaction ? getMetaContent('sentry-trace') : null;\n    const baggageMetaTagValue = isPageloadTransaction ? getMetaContent('baggage') : null;\n\n    const traceParentData = sentryTraceMetaTagValue ? extractTraceparentData(sentryTraceMetaTagValue) : undefined;\n    const dynamicSamplingContext = baggageMetaTagValue\n      ? baggageHeaderToDynamicSamplingContext(baggageMetaTagValue)\n      : undefined;\n\n    const expandedContext = {\n      ...context,\n      ...traceParentData,\n      metadata: {\n        ...context.metadata,\n        dynamicSamplingContext: traceParentData && !dynamicSamplingContext ? {} : dynamicSamplingContext,\n      },\n      trimEnd: true,\n    };\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? { ...finalContext.metadata, source: 'custom' }\n        : finalContext.metadata;\n\n    this._latestRouteName = finalContext.name;\n    this._latestRouteSource = finalContext.metadata && finalContext.metadata.source;\n\n    if (finalContext.sampled === false) {\n      (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n        logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const hub = this._getCurrentHub();\n    const { location } = WINDOW;\n\n    const idleTransaction = startIdleTransaction(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      addPerformanceEntries(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n      const op = 'ui.action.click';\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.finish();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRouteName) {\n        (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) &&\n          logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = WINDOW;\n\n      const context = {\n        name: this._latestRouteName,\n        op,\n        trimEnd: true,\n        metadata: {\n          source: this._latestRouteSource || 'url',\n        },\n      };\n\n      inflightInteractionTransaction = startIdleTransaction(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    });\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = getDomElement(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : null;\n}\n\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, getMetaContent };\n//# sourceMappingURL=browsertracing.js.map\n","import { logger, addInstrumentationHandler } from '@sentry/utils';\nimport { WINDOW } from './types.js';\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!WINDOW || !WINDOW.location) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: WINDOW.location.pathname,\n      op: 'pageload',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    addInstrumentationHandler('history', ({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.finish();\n        }\n        activeTransaction = customStartTransaction({\n          name: WINDOW.location.pathname,\n          op: 'navigation',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\nexport { instrumentRoutingWithDefaults };\n//# sourceMappingURL=router.js.map\n","import { addExtensionMethods, BrowserTracing, Apollo, Express, GraphQL, Mongo, Mysql, Postgres, Prisma } from '@sentry-internal/tracing';\nexport { BROWSER_TRACING_INTEGRATION_ID, BrowserTracing, IdleTransaction, Span, SpanStatus, TRACEPARENT_REGEXP, Transaction, addExtensionMethods, defaultRequestInstrumentationOptions, extractTraceparentData, getActiveTransaction, hasTracingEnabled, instrumentOutgoingRequests, spanStatusfromHttpCode, startIdleTransaction, stripUrlQueryAndFragment } from '@sentry-internal/tracing';\n\nconst Integrations = {\n  BrowserTracing: BrowserTracing,\n  Apollo: Apollo,\n  Express: Express,\n  GraphQL: GraphQL,\n  Mongo: Mongo,\n  Mysql: Mysql,\n  Postgres: Postgres,\n  Prisma: Prisma,\n};\n\n// Treeshakable guard to remove all code related to tracing\n\n// Guard for tree\nif (typeof __SENTRY_TRACING__ === 'undefined' || __SENTRY_TRACING__) {\n  // We are patching the global object with our hub extension methods\n  addExtensionMethods();\n}\n\nexport { Integrations };\n//# sourceMappingURL=index.js.map\n","import { addTracingExtensions, getMainCarrier } from '@sentry/core';\nimport { isNodeEnv, loadModule, dynamicRequire } from '@sentry/utils';\n\n/**\n * @private\n */\nfunction _autoloadDatabaseIntegrations() {\n  const carrier = getMainCarrier();\n  if (!carrier.__SENTRY__) {\n    return;\n  }\n\n  const packageToIntegrationMapping = {\n    mongodb() {\n      const integration = dynamicRequire(module, './node/integrations/mongo')\n\n;\n      return new integration.Mongo();\n    },\n    mongoose() {\n      const integration = dynamicRequire(module, './node/integrations/mongo')\n\n;\n      return new integration.Mongo({ mongoose: true });\n    },\n    mysql() {\n      const integration = dynamicRequire(module, './node/integrations/mysql')\n\n;\n      return new integration.Mysql();\n    },\n    pg() {\n      const integration = dynamicRequire(module, './node/integrations/postgres')\n\n;\n      return new integration.Postgres();\n    },\n  };\n\n  const mappedPackages = Object.keys(packageToIntegrationMapping)\n    .filter(moduleName => !!loadModule(moduleName))\n    .map(pkg => {\n      try {\n        return packageToIntegrationMapping[pkg]();\n      } catch (e) {\n        return undefined;\n      }\n    })\n    .filter(p => p) ;\n\n  if (mappedPackages.length > 0) {\n    carrier.__SENTRY__.integrations = [...(carrier.__SENTRY__.integrations || []), ...mappedPackages];\n  }\n}\n\n/**\n * This patches the global object and injects the Tracing extensions methods\n */\nfunction addExtensionMethods() {\n  addTracingExtensions();\n\n  // Detect and automatically load specified integrations.\n  if (isNodeEnv()) {\n    _autoloadDatabaseIntegrations();\n  }\n}\n\nexport { addExtensionMethods };\n//# sourceMappingURL=extensions.js.map\n","import App from './app';\nimport Game from './game';\n\nimport './lib/sentry';\nimport '../scss/main.scss';\n\n// Import the Leaderboards class from the 'menu' folder\nimport Leaderboards from './menu/leaderboards';\nimport Leaderboards2 from './menu/leaderboards-footer';\n\n/**\n * The entry point for the game. Create an instance of the game\n * and pass a new instance of the app onto it.\n */\n\nconst app = new App();\nconst game = new Game(app);\n\n// Initialize the Leaderboards class\nconst leaderboards = new Leaderboards(app);\nconst leaderboards2 = new Leaderboards2(app)\n\n// Define the 'leaderboards' property on the global window object\nif (typeof window !== 'undefined') {\n    (window as any).leaderboards = leaderboards;\n    (window as any).leaderboards2 = leaderboards2\n}\n"],"names":["deferredPrompt","Logger","level","_classCallCheck","this","_createClass","key","value","_console","console","info","apply","arguments","_console2","debug","_console3","error","log","localStorage","getItem","_context13","next","prompt","catch","userChoice","setItem","window","addEventListener","event","preventDefault","wb","options","length","undefined","immediate","_options$immediate","onOfflineReady","onNeedRefresh","onRegistered","onRegisteredSW","onRegisterError","register","_register","registerPromise","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_yield$__vitePreload","Workbox","wrap","_context3","prev","navigator","__vitePreload","module","import","__VITE_IS_MODERN__","scope","type","isUpdate","isExternal","location","reload","then","r","e","registerSW","agent","userAgent","toLowerCase","isMobile","innerWidth","_Login","Login","List","List2","Equipment$2","Equipment","Equipment2","Movement","Movement2","Target","Target2","Combat","Combat2","Network","Network2","Container","Container2","Ability$1","Ability","Ability2","Quest","Quest2","Achievement","Achievement2","Notification$1","Notification","Notification2","Experience","Experience2","NPC","NPC2","Trade","Trade2","Enchant","Enchant2","Guild","Guild2","Pointer","Pointer2","Store$1","Store","Store2","TeamWar","TeamWar2","Overlay$1","Overlay","Overlay2","Command","Command2","Skill","Skill2","Bubble","Bubble2","Effect","Effect2","Friends$1","Friends","Friends2","Crafting","Crafting2","Remove","holdTimeout","ContainerType","ContainerType2","Orientation","Orientation2","EntityType","EntityType2","AbilityType","AbilityType2","Actions$1","Actions","Actions2","MenuActions","Hits","Hits2","Equipment$1","AttackStyle","AttackStyle2","Hovering","Hovering2","Skills","Skills2","SkillsOrder","Enchantment","Enchantment2","Effects","Effects2","Medals","Medals2","Ranks","Ranks2","RankColours","_defineProperty","_RankColours","RankTitles","_RankTitles","_DamageColours","fill","stroke","inflicted","SkillExpColours","_SkillExpColours","GuildRank","GuildRank2","BannerColour","BannerOutline","BannerCrests","Constants","Packets","Packets2","name","Storage","data","storage","JSON","parse","create","newVersion","isNewVersion","set","clearIndexedDB","loadIndexedDB","new","world","clientVersion","errorMessage","player","username","password","autoLogin","rememberMe","orientation","Modules.Orientation","Down","zoom","settings","musicVolume","soundVolume","brightness","audioEnabled","lowPowerMode","debugMode","showNames","showLevels","disableCaching","_window$indexedDB","_this","indexedDB","open","getDBVersion","request","database","target","result","createObjectStore","concat","mapData","stringify","removeItem","save","_this$mapData","close","deleteDatabase","volume","enabled","objects","cursorTiles","transaction","objectStore","cursorStore","put","region","get","replace","callback","regionData","regionRequest","openCursor","objectRequest","cursorRequest","cursor","primaryKey","continue","resetTimeout","clearTimeout","onSecondaryPress","element","gameContainer","document","querySelector","x","clientX","y","clientY","touch","touches","setTimeout","HOLD_TIME","dropCallback","exception","dragClone","isHolding","startHold","delay","cancelHold","cloneNode","style","position","opacity","top","clientHeight","left","clientWidth","pointerEvents","touchAction","append","moveHold","endHold","elementFromPoint","clone","_dragClone","remove","classList","changedTouches","Animation","row","width","height","index","Date","now","reset","Sprite","time","canAnimate","_this$bopCallback","_this$endCallback","lastTime","decreaseBop","bopIndex","bopCount","bopCallback","call","frame","count","endCallback","onEnd","speed","_this$data$offsetX","_this$data$offsetY","Utils","tileSize","id","path","offsetX","offsetY","idleSpeed","loadAnimations","_this2","loading","loaded","image","Image","crossOrigin","src","_this2$loadCallback","startsWith","hurtSprite","getHurtSprite","silhouetteSprite","getSilhouetteSprite","loadCallback","animations","getDefaultAnimations","hasDeathAnimation","isInt","n","sideLength","thirdTile","tileAndAQuarter","createId","randomInt","min","max","Math","floor","random","createSlot","primaryCallback","secondaryCallback","listElement","createElement","slot","dataset","add","Modules.ContainerType","Bank","getImageURL","formatName","trim","string","charAt","toUpperCase","slice","getCount","toString","getContainerAction","menuAction","Modules.MenuActions","Wield","Equip","Eat","Eat2","Select","DropOne","Move","Swap","isEmail","email","test","getRegion","Modules.Constants","getEmptyStats","crush","slash","stab","archery","magic","getEmptyBonuses","accuracy","strength","sprite","canvas","context","getContext","drawImage","getImageData","i","spriteData","putImageData","cloneData","_x2","some","pixel","item","idle","atk_right","walk_right","idle_right","atk_up","walk_up","idle_up","atk_down","walk_down","idle_down","fadeIn","_element$style","display","parseFloat","requestAnimationFrame","fade","fadeOut","_element$style2","App","host","ssl","serverId","sentryDsn","version","minor","port","hub","querySelectorAll","sendStatus","load","_loadWorlds","_this3","loginForm","login","bind","registerForm","registerButton","openScroll","cancelRegister","cancelWorlds","continueWorlds","about","respawn","_this3$respawnCallbac","respawnCallback","parchment","hasFooterOpen","body","contains","worldSelectButton","gameVersion","textContent","config","handleKeyDown","_this3$keyUpCallback","keyUpCallback","mouseMoveCallback","_this3$mouseMoveCallb","leftClickCallback","_this3$leftClickCallb","_this3$resizeCallback","resizeCallback","focusCallback","_this3$focusCallback","_this3$rightClickCall","rightClickCallback","getError","sendError","hasRemember","getUsernameField","getUsername","getPasswordField","getPassword","checked","isMenuHidden","_this$keyDownCallback","keyDownCallback","loginButton","disabled","loadLogin","loadWorlds","setValidation","_this$loginCallback","loggingIn","statusMessage","verifyForm","clearErrors","toggleLogin","loginCallback","selectedServer","install","setRemember","isRememberMe","setCredentials","className","menuHidden","hidden","_this4","updateLoader","saveLogin","displayNews","destination","parchmentAnimating","changeScroll","withAnimation","toggle","currentScroll","_document$querySelect","_this5","focus","isGuest","isRegistering","getPasswordConfirmation","passwordConfirmation","getEmail","Util","emailField","message","status","innerHTML","getLoaderDots","title","content","isNew","changes","Updates","_step4","_iterator4","_createForOfIteratorHelper","s","done","cc","err","f","field","setError","_document$querySelect2","removeEventListener","keyEvent","_document$querySelect3","clearValidation","toggleTyping","logo","getElementById","state","readOnly","guest","_iterator5","validation","_step5","_step6","_iterator6","createValidation","spanElement","server","players","maxPlayers","_callee3","res","servers","_servers","firstServer","_loop","_this6","_context5","abrupt","fetch","sent","json","selectServer","li","_context4","parseInt","_this6$worldsList$que","worldsList","stop","t0","keys","t1","AudioController","game","_loadAudio","_playSound","Timer","AudioContext","sound","isAudioEnabled","_context6","bufferSource","source","getSoundVolume","node","connect","GainNode","gain","getSettings","map","PannerNode","positionX","positionY","distanceModel","refDistance","maxDistance","musicGainNode","cancelScheduledValues","currentTime","rampGain","musicMaxGain","_this7","getMusicVolume","start","_x3","_x4","music","_context7","stopMusic","loop","musicCrossfadeDuration","_x5","_playMusic","url","updateVolume","buffers","_this$buffers","loadAudio","_context8","AudioBufferSourceNode","buffer","_x6","_bufferSource","_callee7","audio","arrayBuffer","audioBuffer","_context9","decodeAudioData","_x7","initMusicNode","isMusicConnected","disconnect","musicMinGain","listener","_this$context$listene","forwardX","forwardY","Up","Left","Right","setPosition","gainNode","duration","linearRampToValueAtTime","playSound","global","factory","exports","w","Error","noGlobal","arr","Object","getPrototypeOf","_slice","flat","array","push","indexOf","class2type","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","support","isFunction","obj","nodeType","isWindow","preservedScriptAttributes","nonce","noModule","DOMEval","code","doc","val","script","text","getAttribute","setAttribute","head","appendChild","parentNode","removeChild","toType","_typeof","jQuery","selector","fn","init","prototype","jquery","constructor","toArray","num","pushStack","elems","ret","merge","prevObject","each","elem","first","eq","last","even","grep","_elem","odd","j","len","end","sort","splice","extend","copy","copyIsArray","deep","isPlainObject","Array","isArray","expando","isReady","msg","noop","proto","Ctor","getProto","isEmptyObject","globalEval","isArrayLike","makeArray","results","inArray","second","invert","matches","callbackExpect","arg","guid","Symbol","iterator","split","_i","Expr","getText","isXML","tokenize","compile","select","outermostContext","sortInput","hasDuplicate","setDocument","docElem","documentIsHTML","rbuggyQSA","rbuggyMatches","preferredDoc","dirruns","classCache","createCache","tokenCache","compilerCache","nonnativeSelectorCache","sortOrder","a","b","pop","pushNative","list","booleans","whitespace","identifier","attributes","pseudos","rwhitespace","RegExp","rtrim","rcomma","rcombinators","rdescend","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rhtml","rinputs","rheader","rnative","rquickExpr","rsibling","runescape","funescape","escape","nonHex","high","String","fromCharCode","rcssescape","fcssescape","ch","asCodePoint","charCodeAt","unloadHandler","inDisabledFieldset","addCombinator","nodeName","dir","childNodes","els","Sizzle","seed","m","nid","match","groups","newSelector","newContext","ownerDocument","exec","getElementsByTagName","getElementsByClassName","qsa","testContext","toSelector","join","cssSupportsSelector","CSS","supports","qsaError","removeAttribute","cacheLength","cache","shift","markFunction","assert","el","addHandle","attrs","handler","attrHandle","siblingCheck","cur","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","isDisabled","argument","matchIndexes","namespace","namespaceURI","documentElement","hasCompare","subWindow","defaultView","attachEvent","createComment","getById","getElementsByName","filter","attrId","find","getAttributeNode","tag","tmp","input","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","unshift","expr","elements","attr","specified","sel","uniqueSort","duplicates","detectDuplicates","sortStable","firstChild","nodeValue","selectors","createPseudo","relative","preFilter","excess","unquoted","nodeNameSelector","pattern","operator","check","what","_argument","simple","forward","ofType","_context","xml","uniqueCache","outerCache","nodeIndex","parent","useCache","lastChild","uniqueID","pseudo","args","setFilters","idx","matched","not","matcher","unmatched","has","lang","elemLang","hash","root","activeElement","hasFocus","href","tabIndex","selected","selectedIndex","empty","header","button","createPositionalPseudo","_matchIndexes","lt","gt","radio","checkbox","file","submit","tokens","combinator","base","skip","checkNonElements","doneName","oldCache","newCache","matchers","condense","newUnmatched","mapped","postFilter","postFinder","postSelector","setMatcher","temp","preMap","postMap","preexisting","contexts","multipleContexts","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","implicitRelative","matchContext","matchAnyContext","elementMatcher","filters","parseOnly","soFar","preFilters","cached","setMatchers","elementMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","dirrunsUnique","matcherFromGroupMatchers","token","compiled","_name","defaultValue","unique","isXMLDoc","escapeSelector","until","truncate","is","rneedsContext","rsingleTag","winnow","qualifier","self","rootjQuery","parseHTML","ready","rparentsprev","guaranteedUnique","children","contents","sibling","targets","l","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","reverse","rnothtmlwhite","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","fail","Callbacks","_","flag","object","createOptions","firing","memory","fired","locked","queue","firingIndex","fire","once","stopOnFalse","disable","lock","fireWith","Deferred","func","tuples","_state","always","deferred","_promise","pipe","fns","newDefer","tuple","returned","progress","notify","onFulfilled","onRejected","onProgress","maxDepth","depth","special","that","mightThrow","TypeError","notifyWith","resolveWith","process","exceptionHook","stackTrace","rejectWith","getStackHook","stateString","when","singleValue","remaining","resolveContexts","resolveValues","primary","updateFunc","rerrorNames","stack","warn","readyException","readyList","completed","readyWait","wait","readyState","doScroll","access","chainable","emptyGet","raw","bulk","_key","rdashAlpha","fcamelCase","_all","letter","camelCase","rmsPrefix","acceptData","owner","Data","uid","defineProperty","configurable","prop","hasData","dataPriv","dataUser","rmultiDash","rbrace","getData","removeData","_data","_removeData","dataAttr","dequeue","startLength","hooks","_queueHooks","setter","clearQueue","defer","pnum","rcssNum","cssExpand","isAttached","composed","getRootNode","isHiddenWithinTree","css","adjustCSS","valueParts","tween","adjusted","scale","maxIterations","currentValue","initial","unit","cssNumber","initialInUnit","defaultDisplayMap","getDefaultDisplay","show","values","showHide","hide","div","rtagName","rscriptType","createDocumentFragment","checkClone","noCloneChecked","option","wrapMap","thead","col","tr","td","_default","getAll","setGlobalEval","refElements","tbody","tfoot","colgroup","caption","th","optgroup","buildFragment","scripts","selection","ignored","attached","fragment","nodes","htmlPrefilter","createTextNode","returnTrue","returnFalse","safeActiveElement","_on","types","one","origFn","on","off","leverageNative","expectSync","notAsync","saved","isTrigger","delegateType","stopPropagation","stopImmediatePropagation","trigger","Event","handleObjIn","eventHandle","events","t","handleObj","handlers","namespaces","origType","elemData","handle","triggered","dispatch","rtypenamespace","bindType","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","enumerable","originalEvent","writable","noBubble","click","rcheckableType","beforeunload","returnValue","props","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","altKey","bubbles","cancelable","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","view","char","charCode","keyCode","buttons","pointerId","pointerType","screenX","screenY","targetTouches","toElement","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","orig","related","rnoInnerhtml","rchecked","rcleanScript","manipulationTarget","disableScript","restoreScript","cloneCopyEvent","dest","udataOld","udataCur","collection","hasScripts","iNoClone","valueIsFunction","html","domManip","_evalUrl","_remove","keepData","cleanData","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","fixInput","detach","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","rcustomProp","getStyles","opener","getComputedStyle","swap","old","rboxStyle","rtrimCSS","curCSS","computed","minWidth","maxWidth","isCustomProp","getPropertyValue","pixelBoxStyles","rnumnonpx","addGetHookIf","conditionFn","hookFn","computeStyleTests","container","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","roundPixelMeasures","marginLeft","right","pixelBoxStylesVal","boxSizingReliableVal","scrollboxSizeVal","offsetWidth","measure","round","reliableTrDimensionsVal","backgroundClip","clearCloneStyle","boxSizingReliable","pixelPosition","reliableMarginLeft","scrollboxSize","reliableTrDimensions","table","trChild","trStyle","borderTopWidth","borderBottomWidth","offsetHeight","emptyStyle","vendorProps","finalPropName","final","cssProps","capName","cssPrefixes","vendorPropName","rdisplayswap","cssShow","visibility","cssNormalTransform","letterSpacing","fontWeight","setPositiveNumber","subtract","boxModelAdjustment","dimension","box","isBorderBox","styles","computedVal","extra","delta","ceil","getWidthOrHeight","valueIsBorderBox","offsetProp","getClientRects","Tween","easing","cssHooks","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","origName","setProperty","isFinite","getBoundingClientRect","scrollboxSizeBuggy","margin","padding","border","prefix","suffix","expand","expanded","parts","propHooks","run","percent","pos","eased","step","fx","scrollTop","scrollLeft","linear","p","swing","cos","PI","inProgress","rfxtypes","rrun","schedule","interval","tick","createFxNow","fxNow","genFx","includeWidth","animation","tweeners","properties","stopped","prefilters","startTime","tweens","opts","specialEasing","originalProperties","originalOptions","createTween","gotoEnd","propFilter","complete","timer","anim","tweener","oldfire","propTween","restoreDisplay","isBox","dataShow","unqueued","overflow","overflowX","overflowY","prefilter","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeToggle","slow","fast","timeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","lowercaseName","getter","rclickable","stripAndCollapse","getClass","classesToArray","removeProp","propFix","tabindex","rfocusable","for","class","addClass","classNames","curValue","finalValue","removeClass","toggleClass","stateVal","isValidValue","hasClass","rreturn","valHooks","optionSet","focusin","rfocusMorph","stopPropagationCallback","onlyHandlers","bubbleType","ontype","lastElement","eventPath","parentWindow","simulate","triggerHandler","attaches","rquery","parseXML","parserErrorElem","DOMParser","parseFromString","rbracket","rCRLF","rsubmitterTypes","rsubmittable","buildParams","traditional","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","rhash","rantiCache","rheaders","rnoContent","rprotocol","transports","allTypes","originAnchor","addToPrefiltersOrTransports","structure","dataTypeExpression","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspected","seekingTransport","inspect","prefilterOrFactory","dataTypeOrTransport","flatOptions","ajaxSettings","active","lastModified","etag","isLocal","protocol","processData","async","contentType","accepts","responseFields","converters","ajaxSetup","ajaxExtend","ajaxPrefilter","ajaxTransport","ajax","cacheURL","responseHeadersString","responseHeaders","timeoutTimer","urlAnchor","fireGlobals","uncached","callbackContext","globalEventContext","completeDeferred","statusCode","requestHeaders","requestHeadersNames","strAbort","getResponseHeader","getAllResponseHeaders","setRequestHeader","overrideMimeType","mimeType","abort","statusText","finalText","transport","crossDomain","hasContent","r20","ifModified","headers","beforeSend","success","send","nativeStatusText","responses","response","modified","isSuccess","ct","finalDataType","firstDataType","ajaxHandleResponses","conv2","current","conv","dataFilter","throws","ajaxConvert","getJSON","getScript","wrapAll","firstElementChild","wrapInner","htmlIsFunction","unwrap","visible","xhr","XMLHttpRequest","xhrSuccessStatus","xhrSupported","cors","errorCallback","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","scriptAttrs","charset","scriptCharset","evt","rjsonp","jsonp","jsonpCallback","oldCallbacks","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","offset","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","curElem","using","rect","win","pageYOffset","pageXOffset","offsetParent","parentOffset","scrollTo","Height","Width","defaultExtra","funcName","unbind","delegate","undelegate","hover","fnOver","fnOut","proxy","holdReady","hold","parseJSON","isNumeric","isNaN","_jQuery","_$","$","noConflict","tooltip","Blob","instance","createBlob","static","isOver","jqueryExports","BubbleController","bubble","update","zoomFactor","camera","renderer","_i2","_Object$values","entity","entities","setTo","destroy","_i3","_Object$values2","character","Handler","onRequestPath","handleRequestPath","onStartPathing","handleStartPathing","onBeforeStep","handleBeforeStep","onStep","handleStep","onSecondStep","handleSecondStep","onStopPathing","handleStopPathing","onMove","handleMove","onFallback","handleFallback","gridX","gridY","isColliding","findPath","_path","unregisterPosition","_this8","registerPosition","forEachAttacker","attacker","removeAttacker","canAttackTarget","follow","forEachFollower","follower","removeFollower","hasTarget","hasAttackers","socket","opcode","Opcodes.Movement","Entity","targetInstance","requestX","requestY","_x","_y","teleport","Transition","startValue","endValue","updateCallback","stopCallback","elapsed","_this$stopCallback","_this$updateCallback","fading","fadingTime","_this9","blinking","setInterval","toggleVisibility","clearInterval","setVisible","setAnimation","normalSprite","_this10","_this$sprite","setSprite","onLoad","customScale","_this$animation","_this11","onEndCount","_this$sprite$animatio","setSpeed","setCount","counter","countdownTime","hasCounter","abs","angle","Modules.EntityType","Player","Mob","Item","Chest","Projectile","_defineProperty2","_this12","Character","_super","_assertThisInitialized","Modules.Effects","None","Critical","Terror","TerrorStatus","perpetual","Stun","Healing","Fireball","Iceball","Burning","Freezing","Poisonball","Boulder","_this13","effects","keyValue","effect","removeEffect","addEffect","_loop2","_this$animation2","spriteFlipX","spriteFlipY","o","includes","orientationToString","_get","_getPrototypeOf","_this14","dead","teleporting","hitPoints","removeTarget","trading","following","setTarget","move","forced","addFollower","hasEffect","statusEffects","attackers","followers","action","setOrientation","Idle","Modules.Actions","Orientate","Attack","attackAnimationSpeed","Walk","walkAnimationSpeed","hasPath","force","performAction","fallback","frozen","proceed","requestPathfinding","_this$fallbackCallbac","fallbackCallback","followPath","newDestination","_this$beforeStepCallb","secondStepCallback","beforeStepCallback","updateGridPosition","interrupted","_this$stepCallback","hasNextStep","_this$path","_slicedToArray","nextGridX","nextGridY","stepCallback","changedPath","_this$startPathingCal","_this$newDestination","startPathingCallback","updateMovement","stopPathingCallback","_this$startPathingCal2","moving","nextStep","movement","isMob","isPlayer","getDistance","attackRange","_this15","healthBarVisible","healthBarTimeout","_this$requestPathCall","requestPathCallback","setGridPosition","_this$moveCallback","moveCallback","lastTarget","followPosition","maxHitPoints","_this$hitPointsCallba","decrease","hitPointsCallback","_i4","_Object$values3","_i5","_Object$values4","_Character","_inherits","_super2","_createSuper","_this16","hiddenName","_super3","Task","description","stage","stageCount","subStage","rewards","experience","Modules.Skills","nextExperience","percentage","quickSlot","Friend","online","enchantments","Modules.AttackStyle","attackStats","defenseStats","bonuses","attackStyle","attackStyles","_Equipment","Armour","_super4","ArmourSkin","Ring","WeaponSkin","_Character2","_super12","_defineProperty3","_this17","Modules.Ranks","Modules.Medals","Modules.Equipment","Boots","Pendant","Weapon","Arrows","sync","movementSpeed","displayInfo","nameColour","colour","setRank","rank","setHitPoints","setMana","mana","maxMana","equipments","_step7","_iterator7","equip","equipment","skills","_iterator8","_step8","setSkill","skill","quests","_step9","_iterator9","entries","quest","_step9$value","achievements","task","achievement","secret","abilities","_step10","_iterator10","ability","setAbility","friends","unequip","setAttackStyle","_this$syncCallback","syncCallback","Admin","HollowAdmin","Moderator","total","_i6","_Object$values5","medal","Silver","Gold","Artist","Tier1","Tier2","Tier3","Tier4","Tier5","Tier6","Tier7","TierOne","TierTwo","TierThree","TierFour","TierFive","TierSix","TierSeven","_this$manaCallback","manaCallback","_ref2","_this$quests$key","_this$achievements$ke","_this$abilities$key","Modules.AbilityType","Active","_this$abilityCallback","abilityCallback","poison","_this$poisonCallback","poisonCallback","getWeapon","getRankMedal","packet","guild","members","_this$abilities$key2","isRanged","exists","moveLeft","moveRight","moveUp","moveDown","_Entity4","_super14","_this18","_this$animation3","_this19","originalY","onBop","_Entity5","_super15","_this20","_this$impactCallback","impactCallback","updateAngle","lastUpdate","atan2","Grids","EntitiesController","renderingGrid","isOutOfBounds","_ref3","radius","grids","sprites","loadCursors","createChest","createNPC","createItem","createMob","createProjectile","createPlayer","isItem","addEntity","mob","ownerInstance","lookAt","projectile","setStart","angled","onImpact","impactEffect","getImpactEffect","_this21","Modules.Hits","Normal","damage","triggerHealthBar","getSpriteName","dropped","chest","getDeath","animateDeath","_this22","npc","_this23","addToRenderingGrid","removeFromRenderingGrid","decrepit","_step11","_iterator11","removeEntity","_i7","_Object$values6","_i8","_Object$values7","_i9","_Object$values8","Splat","isTarget","updateY","isHeal","Modules.DamageColours","Modules.SkillExpColours","hasInflicted","isDamage","isPoison","isFreezing","isPoints","isExperience","_this$destroyCallback","destroyCallback","Heal","Poison","Profession","Mana","InfoController","amount","randomize","addInfo","infos","onDestroy","_this24","forEachInfo","_i10","_Object$values9","ChatController","_this25","HUDController","inputVisible","color","scrollHeight","displayChatBox","hideChatBox","Chat","chatBox","_this26","fadingTimeout","fadingDuration","_clearTimeout","attackInfo","details","health","onUpdate","handleUpdate","validEntity","hovering","isVisible","hasHealth","setHealth","isProjectile","InputController","_this27","app","menu","getFriends","inventory","getInventory","interact","getInteract","trade","getTrade","leaderboards","getLeaderboards","LeaderboardsFooter","getLeaderboards2","guilds","getGuilds","chatHandler","hud","onLeftClick","handleLeftClick","onRightClick","handleRightClick","onKeyDown","onKeyUp","handleKeyUp","onMouseMove","started","setCoords","moveCursor","onButton","handleInteract","onClose","interactEntity","onMessage","privateMessage","targetAnimation","cursors","hand","sword","loot","arrow","talk","spell","bow","axe","pickaxe","cooking","fishing","smithing","crafting","foraging","keyMovement","disableAction","isCtrlKey","Opcodes.Command","CtrlClick","getCoords","searchForEntityAt","mouse","pvp","keyDown","isInputDialogueVisible","isDropDialogVisible","isPopupActive","getWarp","getProfile","selectEdible","setAttackTarget","setZoom","Follow","pursue","Examine","AddFriend","Opcodes.Friends","Add","useSearch","stunned","setPassiveTarget","zoning","direction","isObject","setObjectTarget","getEntity","isTargetable","isAttackable","addAttacker","Opcodes.Target","go","getTileCursor","setCursor","Modules.Hovering","updateSilhouette","getAttackCursor","getEntityAt","lastMousePosition","selectedX","selectedY","setRow","_this$game$renderer$b","background","isMagic","dx","dy","dw","dh","isNPC","isChest","Menu","containerName","closeButton","toggleButton","_this$close","_this$button","_var1","_data1","_data2","data3","_var2","_var3","_var4","_var5","_var6","_this$showCallback","_this$button2","showCallback","_this$button3","_Menu","_super16","_this28","dropCancel","hideDropDialog","dropAccept","handleDrop","_this$dropCallback","dropCount","valueAsNumber","actions","itemDescription","clear","_step12","_iterator12","defense","bonusesDiv","enchantmentsDiv","attack","enchantment","Modules.Enchantment","_this29","_this29$buttonCallbac","buttonCallback","dropDialog","page","Inventory","_this30","handleAction","onDrop","DropMany","showDropDialog","_this$selectCallback","selectCallback","selectedSlot","_this$selectCallback2","Opcodes.Container","slots","_step13","_iterator13","setSlot","_this$batchCallback","batchCallback","doubleClick","getElement","isEmpty","edible","equippable","interactable","getFirstEdible","fromIndex","toIndex","_this$selectCallback3","slotElement","imageElement","countElement","backgroundImage","formatDescription","_this31","onDragDrop","handleHold","_clone$dataset","_target$dataset","toLocaleString","_this$getElement","_this32","_super18","bankList","inventoryList","draggableSlot","onBatch","synchronize","fromContainer","defaultContainer","_this33","_clone$dataset2","_clone$dataset3","_target$dataset2","_target$dataset3","toContainer","_this$selectCallback4","getBankElement","_this34","forEachSlot","getInventoryElement","slotImage","_step14","_iterator14","_iterator15","_step15","_Menu4","_super19","_this35","resize","sellSlot","confirmSell","sell","buyCancel","hideBuyDialog","buyAccept","handleBuy","storeHelp","currency","items","storeList","createStoreItem","_type","_this$selectCallback5","Opcodes.Store","_this$selectCallback6","Sell","selectedCount","_this$selectCallback7","Buy","buy","selectedBuyIndex","buyCount","buyDialog","storeContainer","_this36","clearSellSlot","sellSlotText","sellSlotReturn","sellSlotReturnText","price","_this37","showBuyDialog","Header","onHitPoints","handleHitPoints","onMana","handleMana","onPoison","handlePoison","setPoints","healthBar","healthText","manaBar","manaText","barElement","textElement","points","maxPoints","flash","_this38","_tooltip","_this39","State","_super20","weapon","_this39$unequipCallba","_this40","unequipCallback","weaponSkin","_this39$unequipCallba2","_this41","armour","_this39$unequipCallba3","_this42","armourSkin","_this39$unequipCallba4","_this43","pendant","_this39$unequipCallba5","_this44","ring","_this39$unequipCallba6","_this45","boots","_this39$unequipCallba7","_this46","_this39$unequipCallba8","_this47","getTotalExperience","getWeaponSkin","getArmour","getArmourSkin","getPendant","getRing","getBoots","getArrows","loadAttackStyles","attackStyleList","_step16","_iterator16","createStyle","_this48","showTooltip","attachTooltip","getTooltip","_this48$styleCallback","styleCallback","Stab","Slash","Defensive","Crush","Shared","Hack","Chop","Accurate","Fast","Focused","LongRange","Abilities","_this49","activeAbilities","_loop3","_loop4","_i12","abilityBar","draggable","dragOver","dragDrop","hideAll","activeIndex","passiveIndex","_i13","_Object$values10","setActiveAbility","Passive","setPassiveAbility","_this$selectCallback8","Opcodes.Ability","Use","draggedElement","_this$selectCallback9","QuickSlot","_event","icon","passive","_this50","dragLeave","dragStart","hideAbility","passiveAbilities","_step17","_iterator17","child","_step18","_iterator18","_this51","_super22","_i14","_SkillsOrder","Modules.SkillsOrder","isInfoVisible","showInfo","hideInfo","_this52","selectedSkill","toFixed","originalWidth","_step19","_iterator19","Profile","_this53","_super23","pages","previous","handleNavigation","onUnequip","_this53$unequipCallba","onStyle","_this53$attackStyleCa","_this55","attackStyleCallback","onSelect","_this53$abilityCallba","_this$pages$this$acti","activePage","_this$pages$this$acti2","forEachPage","_step20","_iterator20","_this57","_super24","selectedItem","selectedShards","confirmButton","confirm","clearSelections","_this58","_this$confirmCallback","selectedShard","confirmCallback","_this$selectCallback10","isShard","elementImage","elementCount","selectedShardsCount","_this59","Warp","_step21","_iterator21","_loop5","handleWarp","_this$selectCallback11","_Menu11","_super26","_this60","_this61","ignore","innerHeight","getPosition","Settings","_Menu12","_super27","_this62","musicSlider","handleMusic","soundSlider","handleSoundVolume","brightnessSlider","handleBrightness","audioEnabledCheckbox","handleAudioEnabled","lowPowerCheckbox","handleLowPower","debugCheckbox","handleDebug","showNamesCheckbox","handleName","showLevelsCheckbox","handleLevel","disableCachingCheckbox","handleCaching","_settings$musicVolume","_settings$soundVolume","_settings$brightness","setMusicVolume","setSoundVolume","setBrightness","setAudioEnabled","setLowPowerMode","animateTiles","decenter","center","centreOn","updateAnimatedTiles","setDebug","debugging","setShowNames","drawNames","setShowLevels","drawLevels","setDisableCaching","_this63","Equipments","_super28","_this63$unequipCallba","_this64","_this63$unequipCallba2","_this65","_this63$unequipCallba3","_this66","_this63$unequipCallba4","_this67","_this63$unequipCallba5","_this68","_this63$unequipCallba6","_this69","_this63$unequipCallba7","_this70","_this63$unequipCallba8","_this71","loadStats","loadPlayerImage","arrowCount","arrowsCount","orientations","imageOrientation","_i15","_Object$values11","_i16","_stats","lStat","stat","attackElement","defenseElement","attackStat","defenseStat","_i17","_statBonuses","lBonus","bonus","bonusElement","bonusStat","armourSprite","isFlipped","getOrientationIndex","playerArmour","armourUrl","backgroundPosition","hasWeapon","weaponUrl","weaponSprite","playerWeapon","marginTop","transform","_Menu14","Achievements","_super29","_this72","Opcodes.Achievement","Batch","createAchievement","coin","isFinished","isStarted","createProgress","_progress","_this73","Quests","_super30","Opcodes.Quest","_i18","_Object$values12","Progress","handleProgress","buildLog","tutorial","nameElement","_this74","shortDescription","_quest$description$sp2","_Menu16","_super31","_this75","addButton","showPopup","removeButton","handleConfirm","cancel","hidePopup","friend","maxLength","getMaxLength","_i19","_Object$values13","removeElement","Status","updateStatus","_this$confirmCallback2","removeActive","_this$messageCallback","messageCallback","popupActive","placeholder","popup","_this76","handleMessage","_Menu17","_super32","_this77","acceptButton","_this77$acceptCallbac","_this78","acceptCallback","tradeCountAccept","sendTradeAmount","tradeCountCancel","hideTradeAmountDialog","showTradeAmountDialog","playerSlots","otherPlayerSlots","_this79","otherPlayer","playerName","otherPlayerName","_this$closeCallback","ignoreCallback","closeCallback","clearAll","inventoryIndex","tradeStatus","slotCount","getElementImage","itemCount","actualCount","clearSlot","tradeCount","tradeDialog","_this$selectCallback12","_step22","_iterator22","_step23","_iterator23","_i20","_image","Interact","_this80","hasFriend","_i21","_actions","_this$closeCallback2","_this81","_Menu19","Leaderboards","_super34","_this82","search","handleInput","_step24","_iterator24","searchElements","availableMobs","_possibleConstructorReturn","searchList","_step25","_iterator25","createSearchElement","handleSearchElement","_step26","_iterator26","searchElement","_this83","resultsList","_step27","_iterator27","createResultElement","_this84","cheater","_id","kills","_this85","Guilds","_super35","Modules.BannerColour","Grey","Modules.BannerCrests","createButton","handleCreate","backButton","handleBackButton","createConfirmButton","handleCreateConfirm","leaveButton","handleLeave","loadSidebar","loadDecorations","Opcodes.Guild","Join","handleMemberJoin","handleConnect","Leave","handleMemberLeave","Rank","Update","loadMembers","loadList","handleChat","listContainer","infoContainer","bannerColour","bannerOutline","bannerCrest","updateBanner","cleanSelectedCrests","memberList","chatLog","requestList","nameInput","Create","outline","crest","decoration","_info$decoration","banner","_info$decoration2","_info$decoration3","guildName","_step28","member","Modules.GuildRank","Fledgling","currentSidebar","chatInput","sendChat","from","guildList","_step29","_iterator29","_step30","_this86","_iterator30","sidebarList","_loop6","cleanSidebar","handleSidebar","loadColours","loadOutlines","loadCrests","_this87","_loop7","colourName","bannerColours","_this88","_loop8","Modules.BannerOutline","bannerOutlines","_this89","_loop9","crestName","bannerCrests","_step31","_iterator31","serverElement","isGuild","slotType","joinButton","_this90","selectEmpty","_step32","_iterator32","_step33","_iterator33","outlineElement","crestElement","_step34","_iterator34","createError","_handleSearchElement","_this91","_super36","_step35","_iterator35","_step36","_iterator36","_step37","_iterator37","_callee8","_iterator38","_step38","_this92","_context10","forEach","totalExperience","_step39","_iterator39","_x9","_this93","_Menu22","_super37","_this94","craftOne","handleAmount","craftFive","craftTen","craftButton","_this94$craftCallback","_this95","craftCallback","selectedKey","craftAmount","Opcodes.Crafting","Open","Crafting$1","handleSelect","requirements","levelIcon","levelCount","getSkillIcon","_step40","_iterator40","requirement","_step41","_this$selectCallback13","_iterator41","Cooking","Skills$1","Fletching","Smithing","Smelting","disableClick","_this96$selectCallbac","_step42","_iterator42","_this96","MenuController","bank","store","profile","enchant","warp","notification","menus","handleInventorySelect","handleBankSelect","handleStoreSelect","handleProfileUnequip","onAttackStyle","handleProfileAttackStyle","onAbility","handleAbility","handleEnchantSelect","onConfirm","handleEnchantConfirm","handleFriendConfirm","handleTradeSelect","onAccept","handleTradeAccept","handleTradeClose","handleCraftingSelect","onCraft","handleCraftingConfirm","forEachMenu","onShow","_this97","_this$menus$key","Opcodes.Equipment","Unequip","Style","Opcodes.Enchant","shardIndex","Confirm","Opcodes.Trade","Accept","Close","Craft","_i22","_Object$values14","Arrow","PointerController","_this98","blinkInterval","Opcodes.Pointer","Button","pointers","setSize","_i23","_Object$values15","_Object$values15$_i","Relative","getZoom","pointer","_i24","_Object$values16","posX","posY","canvasWidth","_game$renderer","canvasHeight","outX","outY","bottom","_i25","_Object$values17","setToEntity","Location","SpritesController","sparksAnimation","ZoningController","_i26","_spriteData","preloadSprites","_this99","_this$character$targe","Request","playerX","playerY","ignores","_path2","selectedCellVisible","Started","_this$character$targe2","_this$character$targe3","_this$game$getEntityA","_this$character$targe4","_this$character$targe5","clip","Stop","getTargetType","resetAnimatedTiles","isCentered","updateCameraBounds","lastStepX","lastStepY","Step","timestamp","Talk","CharacterHandler","Map$1","Map","_this$readyCallback","_this100","mapLoaded","tilesetsLoaded","readyCallback","_this101","worker","Worker","URL","postMessage","grid","loadRegionData","loadTilesets","loadRegion","saveMapData","useWebGl","bindTileLayers","_step43","_iterator43","tile","coordToIndex","objectIndex","c","setTile","setRegionData","_this102","rawTilesets","loadTileset","tileset","tilesets","firstGid","_this103","tilesetInfo","lastGid","_this104","getRegionData","loadRegions","_unused","regionsLoaded","setMapData","tileId","lights","animatedTiles","_step44","_iterator44","zero$1","buf","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","Uint8Array","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","MAX_MATCH$1","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","StaticTreeDesc","static_tree","extra_bits","extra_base","max_length","has_stree","dyn_tree","stat_desc","max_code","base_dist","d_code","dist","put_short","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","tree","gen_codes","bl_count","bits","next_code","bi_reverse","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","bi_windup","smaller","_n2","_m2","pqdownheap","k","heap","heap_len","compress_block","ltree","dtree","sx","sym_buf","lc","build_tree","desc","stree","heap_max","h","xbits","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","subarray","_tr_init_1","LENGTH_CODES$1","tr_static_init","l_desc","d_desc","TreeDesc","bl_desc","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","strm","data_type","block_mask","detect_data_type","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","send_all_trees","trees","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","s2","s1","Uint32Array","makeTable","crc32_1","crc","crcTable","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","zero","slide_hash","wsize","w_size","hash_size","HASH","hash_shift","hash_mask","flush_pending","avail_out","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","size","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","more","str","_w_size","window_size","read_buf","ins_h","deflate_stored","flush","have","pending_buf_size","used","min_block","high_water","hash_head","fill_window","match_length","bflush","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","good_length","max_lazy","nice_length","max_chain","configuration_table","deflate_fast","Config","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflateSetDictionary_1","dictionary","dictLength","tmpDict","avail","_n3","deflate_1$2","deflateInit","deflateSetHeader","deflate","old_flush","hcrc","comment","os","beg","gzhead_extra","_beg","_beg2","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","deflateInfo","sources","_has","chunks","_i27","chunk","STR_APPLY_UIA_OK","__","_utf8len","q","strings","TextEncoder","encode","c2","m_pos","str_len","buf_len","out","TextDecoder","decode","utf16buf","_c","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","common","chunkSize","gzip","ended","dict","_dict_set","Deflate$1","flush_mode","_flush_mode","onData","BAD$1","inffast","_out","dmax","whave","wnext","s_window","dcode","lmask","dmask","here","op","from_source","_in","lcode","lencode","distcode","lenbits","distbits","dolen","mode","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","incr","low","here_op","here_val","sym","curr","drop","huff","offs","mask","here_bits","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","COPY_","LEN_","LEN","CHECK","BAD","zswap32","havedict","flags","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","lenfix","distfix","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","InflateState","fixedtables","virgin","updatewindow","inflate_2$1","last_bits","last_op","last_val","hbuf","TYPEDO","inf_leave","xflags","extra_len","inflateInit","inflate","inflateEnd","inflateGetHeader","inflateSetDictionary","inflateInfo","Inflate$1","inflate_1$2","gzheader","inflator","last_avail_out","next_out_utf8","tail","utf8str","inflate_1$1","Inflate","inflate$1","inflateRaw","ungzip","constants","inflate_1","Connection","_this105","overlays","onFocus","Focus","onHandshake","handleHandshake","onWelcome","handleWelcome","onMap","handleMap","onEquipment","handleEquipment","onSpawn","onEntityList","handleEntityList","onSync","handleSync","onMovement","handleMovement","onTeleport","handleTeleport","onDespawn","handleDespawn","onCombat","handleCombat","onAnimation","handleAnimation","onPoints","handlePoints","onNetwork","handleNetwork","onChat","onCommand","handleCommand","onContainer","handleContainer","onQuest","handleQuest","onAchievement","handleAchievement","onNotification","handleNotification","onBlink","handleBlink","onHeal","handleHeal","onExperience","handleExperience","onDeath","handleDeath","onMusic","onNPC","handleNPC","onRespawn","handleRespawn","onTrade","handleTrade","onEnchant","handleEnchant","onGuild","handleGuild","onPointer","handlePointer","onPVP","handlePVP","onStore","handleStore","onOverlay","handleOverlay","onCamera","handleCamera","onBubble","handleBubble","onSkill","handleSkill","onMinigame","handleMinigame","onEffect","handleEffect","onFriends","handleFriends","onRank","handleRank","onCrafting","handleCrafting","Opcodes.Login","Guest","Register","postLoad","bufferData","atob","inflatedString","regions","forceRendering","hasCachedDate","fadeMenu","_step45","_iterator45","_this106","Spawns","ids","Set","known","newIds","clean","Who","Positions","positions","canRequestEntityList","lastEntityListRequest","Speed","_this107","currentPlayer","entitySprite","_this108","removeChest","removeNPC","despawn","playKillSound","Opcodes.Combat","Hit","currentPlayerTarget","currentPlayerAttacker","hit","isBurning","aoe","playHitSound","toggleHurt","_this$input$hud$updat","_this$input$hud","Opcodes.Network","Pong","Modules.RankTitles","withBubble","command","hasActiveEffect","removeAllEffects","getBank","batch","loadAbilities","Toggle","toggleAbility","loadQuests","setQuest","getQuests","loadAchievements","setAchievement","getAchievements","Opcodes.Notification","Text","Popup","getNotification","blink","Sync","Opcodes.Experience","_this109","minigame","newSong","playMusic","soundEffect","Opcodes.NPC","getEnchant","Trade$1","accept","Enchant$1","setGuild","setToPosition","setRelative","setPoison","getStore","updateDarkMask","removeAllLights","Opcodes.Overlay","Lamp","addLight","light","_opcode","Opcodes.Bubble","Opcodes.Skill","loadSkills","cleanDisplayInfo","_step46","_iterator46","_this$game","countdown","Score","redTeamKills","blueTeamKills","setScore","setStatus","End","Lobby","Opcodes.TeamWar","Exit","loadFriends","addFriend","setFriendStatus","getCrafting","_this110","Messages","Handshake","handshakeCallback","Welcome","welcomeCallback","Spawn","spawnCallback","equipmentCallback","entityListCallback","movementCallback","Teleport","teleportCallback","Despawn","despawnCallback","combatCallback","animationCallback","Points","pointsCallback","networkCallback","chatCallback","commandCallback","containerCallback","questCallback","achievementCallback","notificationCallback","Blink","blinkCallback","healCallback","experienceCallback","Death","deathCallback","Music","musicCallback","npcCallback","Respawn","tradeCallback","enchantCallback","guildCallback","pointerCallback","PVP","pvpCallback","storeCallback","mapCallback","overlayCallback","Camera","cameraCallback","bubbleCallback","skillCallback","Minigame","minigameCallback","effectCallback","friendsCallback","rankCallback","craftingCallback","_iterator47","_step47","handleData","Socket","_connect","_getServer","_callee9","_context11","_callee10","_ref4","_this111","_context12","getServer","connection","WebSocket","handleConnection","receive","handleConnectionError","handleDisconnection","createContext","_x11","listening","handleBulkData","handleUTF8","_this$connection","OPEN","gVer","MINIMUM_ZOOM","borderWidth","borderHeight","gridWidth","gridHeight","clamp","borderX","borderY","centered","nextX","nextY","lockX","lockY","zoneClip","zoomAmount","mobile","_y5","maxY","maxX","redTeam","blueTeam","redTeamScore","blueTeamScore","fog","overlay","currentOverlay","vertexShader","fragmentShader","program","getProgramParameter","ACTIVE_ATTRIBUTES","attribute","getActiveAttrib","getAttribLocation","ACTIVE_UNIFORMS","_i28","getActiveUniform","uniform","getUniformLocation","uniforms","compileShader","VERTEX_SHADER","glFragment","FRAGMENT_SHADER","createProgram","attachShader","glVertex","bindAttribLocation","linkProgram","LINK_STATUS","deleteShader","getProgramInfoLog","deleteProgram","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","ProgramData","Tileset","_step48","_iterator48","createTexture","texture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","textures","Layer","backgroundData","foregroundData","Tile","backgroundTexture","foreground","foregroundTexture","useProgram","flipped","textureData","isHighTile","dataIndex","getTilesetFromId","relativeId","tilesWidth","getFlippedFlag","d","animationInfo","animationIndex","mul","pow","sqrt","length2","_t4","clearRect","ctx","fillStyle","fillRect","_e$getImageData$data","WeakSet","_step49","_iterator49","globalCompositeOperation","restore","WeakMap","g","distance","diffuse","getVisibleMaskCache","_this$position","topLeft","bottomRight","createRadialGradient","addColorStop","M","C","R","S","E","_x13","T","_super39","_this112","samples","roughness","sin","_t$mul","_this$getVisibleMaskC","_t$mul2","getHashCache","u","_this$position2","getGradientCache","I","L","W","z","B","render","cast","_W3","_step50","bounds","forEachSample","_step51","_iterator51","_iterator50","beginPath","Renderer","isAppleTablet","isAndroidTablet","textCanvas","entitiesContext","overlayContext","textContext","cursorContext","isTablet","actualTileSize","loadSizes","loadStaticSprites","zoomIn","_this113","zoomOut","_this114","screenWidth","screenHeight","darkMask","compute","forEachCanvas","shadowSprite","sparksSprite","silverMedal","goldMedal","crownArtist","crownTier1","crownTier2","crownTier3","crownTier4","crownTier5","crownTier6","crownTier7","updateMinimumZoom","clearScreen","removeSmoothing","drawDebugging","drawOverlays","drawHoveringCell","drawSelectedCell","drawEntities","drawInfos","drawCursor","drawMinigameGUI","drawFPS","drawPathing","drawPosition","drawCollisions","_this115","hasOverlay","forEachLighting","lighting","inRadius","drawLighting","isSelectedCell","drawCellHighlight","targetColour","targetData","getTargetData","setCameraView","_this116","forEachVisibleEntity","_entity$sprite","drawEntity","_this117","globalAlpha","drawText","tablet","isMouseRendered","_this$game$input","saveMouse","calculateFPS","fps","frameCount","_this$game2","_this118","forEachVisiblePosition","_iterator52","_step52","_entity$animation","flipX","flipY","fadingAlpha","translate","rotate","getAngle","hasShadow","shadowOffsetY","drawEntityFore","drawHealth","drawName","drawSparks","drawWeapon","drawEffects","getWeaponSpriteName","weaponAnimations","weaponX","weaponY","weaponWidth","weaponHeight","_step53","_iterator53","SnowPotion","FirePotion","getEffect","sparksFrame","getMedal","healthX","barLength","healthY","healthWidth","healthHeight","strokeStyle","lineWidth","strokeRect","wanted","Modules.RankColours","font","nameY","hasMedal","drawMedal","getMedalKey","lightX","origX","lightY","origY","Vec2","drawCellRect","strokeColour","fontSize","strokeSize","textAlign","strokeText","fillText","getLightData","hasLighting","lightings","_step54","_iterator54","forAllContexts","imageSmoothingQuality","imageSmoothingEnabled","forEachContext","stopRendering","tileInfo","_this119","forEachVisibleTile","isAnimatedTile","getTileAnimation","_this120","_this$map","forEachVisibleIndex","_this121","indexData","_iterator55","_step55","_this122","_i29","_Object$values18","canvases","allContexts","_Renderer","WebGL","_super40","_this123","backContext","foreContext","Float32Array","createBuffer","aPosition","aTexture","WebGLRenderingContext","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","equation","FUNC_ADD","_this124","backShader","LayerVertex","getFragmentShader","tilesetCount","foreShader","tilesetIndices","tilesetTileSizeBuffer","tilesetOffsetBuffer","inverseTilesetTextureSizeBuffer","inverseTileCount","forEachDrawingContext","bindBuffer","bindTileShaders","clearTile","addTile","tileIndex","ARRAY_BUFFER","getQuadBuffer","quadVertices","STATIC_DRAW","_step56","_iterator56","layers","getShader","isBackgroundContext","uniform1i","uLayer","uniform2fv","uInverseLayerTileSize","inverseTileSize","uTilesetTileSize","uTilesetTileOffset","uInverseTilesetTextureSize","_this125","_this126","viewport","uViewportSize","viewPort","uniform1f","uInverseTileScale","draw","_this127","enable","BLEND","blendEquation","blendMode","blendFunc","enableVertexAttribArray","attributeIndices","vertexAttribPointer","FLOAT","forEachTexture","activeTexture","TEXTURE1","TEXTURE0","uAlpha","uRepeatTiles","uInverseLayerTileCount","uniform2f","uOffset","_iterator57","_step57","layer","drawArrays","TRIANGLES","layerIndex","_step58","_iterator58","backQuadBuffer","foreQuadBuffer","drawingContexts","Canvas","_Renderer2","_super41","_this128","cells","_this129","hasRenderedFrame","clearDrawing","saveDrawing","updateDrawingView","flips","getFlipped","isLightTile","drawTile","saveFrame","restoreDrawing","tiles","setWidth","relativeTileId","getX","cell","tempX","isLowPowerMode","renderedFrame","_this130","Updater","updateEntities","updateKeyboard","updateAnimations","updateInfos","updateBubbles","updateSounds","_this131","forEachEntity","_entity$sprite2","updateFading","_entity$animation2","mDistance","getTimeDiff","tDistance","impact","isLeft","isUp","isVertical","isHorizontal","moved","dt","_this$game3","hasKeyboardMovement","keyMove","sparks","_this$game$bubble","_this$game$pointer","updatePlayerListener","AStar","rows","cols","f2","endPos","diagonalSuccessors","diagonal","euclidean","manhattan","nothingToDo","diagonalSuccessorsFree","openF","_i31","successors","adj","$N","$S","$E","$W","N","_rows","_cols","_$N","_$S","_$E","_$W","_N","_S","_E","_W","_grid","f1","_f1","PathFinder","startX","startY","endX","endY","handleIgnore","_step59","fake","_iterator59","Game","Zoning","updater","onReady","onLogin","onResize","handlePlayerSync","_this132","Ready","pathfinder","setLeft","setRight","setUp","setDown","zone","getDirection","_step60","getEntitiesAround","_iterator60","clearHealthBar","isBuiltin","wat","isString","isThenable","isInstanceOf","_e","isGlobalObj","GLOBAL_OBJ","globalThis","getGlobalObject","getGlobalSingleton","creator","gbl","__SENTRY__","logger","PREFIX","CONSOLE_LEVELS","consoleSandbox","originalConsole","wrappedLevels","originalWrappedFunc","__sentry_original__","makeLogger","__SENTRY_DEBUG__","_key2","_GLOBAL_OBJ$console","replacementFactory","wrapped","addNonEnumerableProperty","markFunctionWrapped","_Oo","dropUndefinedKeys","inputValue","_dropUndefinedKeys","memoizationMap","memoVal","_i32","_Object$keys","_memoVal","defaultFunctionName","getFunctionName","WINDOW$3","supportsNativeFetch","Response","supportsFetch","isNativeFetch","WINDOW","sandbox","contentWindow","lastHref","WINDOW$2","instrumented","instrument","originalConsoleMethod","_len2","_key3","triggerHandlers","instrumentConsole","triggerDOMHandler","globalDOMEventHandler","makeDOMEventHandler","originalAddEventListener","__sentry_instrumentation_handlers__","handlerForType","refCount","originalRemoveEventListener","_handlers3","instrumentDOM","xhrproto","originalOpen","_this133","_len4","_key5","xhrInfo","__sentry_xhr__","__sentry_own_request__","onreadystatechangeHandler","status_code","endTimestamp","startTimestamp","readyStateArgs","_key6","originalSend","_len6","_key7","instrumentXHR","originalFetch","_len3","handlerData","fetchData","getFetchMethod","getFetchUrl","_objectSpread","instrumentFetch","chrome","isChromePackagedApp","runtime","hasHistoryApi","history","pushState","replaceState","oldOnPopState","onpopstate","originalHistoryFunction","_len8","_key9","_len7","_key8","_oO","historyReplacementFunction","instrumentHistory","_oldOnErrorHandler","line","column","_oldOnUnhandledRejectionHandler","onunhandledrejection","addInstrumentationHandler","_step61","_iterator61","fetchArgs","debounceTimerID","shouldShortcircuitPreviousDebounce","shouldSkipDOMEvent","tagName","isContentEditable","globalListener","lastCapturedEvent","States","uuid4","crypto","msCrypto","randomUUID","getRandomByte","getRandomValues","maybeArray","isNodeEnv","__SENTRY_BROWSER_BUNDLE__","mod","require","loadModule","moduleName","dynamicRequire","cwd","SyncPromise","executor","__init","__init2","__init3","__init4","__init5","__init6","_resolve","_reject","PENDING","_handlers","onfulfilled","onrejected","_this134","reason","_executeHandlers","onfinally","isRejected","_this136","_setResult","RESOLVED","_this137","REJECTED","_this138","_value","_this139","cachedHandlers","stripUrlQueryAndFragment","urlPath","getNumberOfUrlSegments","WINDOW$1","dateTimestampSource","nowSeconds","platformPerformance","performance","getNodePerformance","timeOrigin","getBrowserPerformance","dateTimestampInSeconds","timestampInSeconds","timestampSource","timestampWithMs","threshold","performanceNow","dateNow","timeOriginDelta","timeOriginIsReliable","timing","navigationStart","navigationStartDelta","DEFAULT_ENVIRONMENT","makeSession","startingTime","session","sid","errors","ignoreDuration","toJSON","sessionToJSON","toISOString","did","release","environment","ip_address","ipAddress","user_agent","updateSession","user","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_attachments","_user","_tags","_extra","_contexts","_sdkProcessingMetadata","_session","_notifyScopeListeners","_requestSession","requestSession","tags","extras","fingerprint","_fingerprint","_level","_transactionName","span","_span","getSpan","captureContext","updatedScope","breadcrumb","maxBreadcrumbs","maxCrumbs","_toConsumableArray","mergedBreadcrumb","attachment","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","sdkProcessingMetadata","_notifyEventProcessors","getGlobalEventProcessors","hint","newData","processors","processor","_this140","_this141","arrayify","newScope","Hub","client","API_VERSION","_version","_stack","bindClient","getStackTop","setupIntegrations","getScope","getStack","getClient","pushScope","popScope","eventId","_lastEventId","event_id","syntheticException","_withClient","captureException","originalException","captureMessage","captureEvent","_this$getStackTop","getOptions","beforeBreadcrumb","_ref5$beforeBreadcrum","DEFAULT_BREADCRUMBS","_ref5$maxBreadcrumbs","finalBreadcrumb","emit","addBreadcrumb","setUser","setTags","setExtras","setTag","setExtra","setContext","_this$getStackTop2","oldHub","makeMain","integration","getIntegration","customSamplingContext","_callExtensionMethod","endSession","_sendSessionUpdate","getSession","closeSession","setSession","_this$getStackTop3","_ref6","_ref6$environment","getUser","currentSession","Boolean","sendDefaultPii","_this$getStackTop4","captureSession","_this$getStackTop5","carrier","getMainCarrier","sentry","extensions","_len9","_key10","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","isOlderThan","activeDomain","domain","registryHubTopStack","errorsInstrumented","maybeHub","activeTransaction","getTransaction","SpanRecorder","maxlen","_maxlen","spans","spanRecorder","Transaction","_Span","_super42","transactionContext","_this142","_hub","metadata","spanMetadata","_trimEnd","trimEnd","incomingDynamicSamplingContext","dynamicSamplingContext","_frozenDynamicSamplingContext","_measurements","newName","setName","newMetadata","_this143","sampled","recordDroppedEvent","finishedSpans","reduce","start_timestamp","getDynamicSamplingContext","transaction_info","measurements","_ref8","public_key","getDsn","publicKey","maybeSampleRate","sampleRate","sample_rate","user_segment","segment","dsc","trace_id","traceId","Span","spanContext","__init7","spanId","parentSpanId","instrumenter","substring","childSpan","opStr","nameStr","logMessage","idStr","httpStatus","spanStatusfromHttpCode","spanStatus","sampledString","parent_span_id","span_id","TRACING_DEFAULTS","idleTimeout","finalTimeout","heartbeatInterval","traceHeaders","toTraceparent","samplingContext","maybeOptions","__SENTRY_TRACING__","enableTracing","hasTracingEnabled","setMetadata","Number","tracesSampler","parentSampled","tracesSampleRate","rate","isValidSampleRate","_startTransaction","configInstrumenter","transactionInstrumenter","sample","initSpanRecorder","_experiments","maxSpans","addTracingExtensions","startTransaction","_optionalChain","ops","lastAccessLHS","_len10","_key11","shouldDisableAutoInstrumentation","clientOptions","_2","_3","_4","_5","_6","Express","_router","router","_methods","methods","patchMiddleware","instrumentMiddlewares","appOrRouter","isApp","lazyrouter","routerProto","originalProcessParams","process_params","called","req","_reconstructedRoute","_getLayerRoutePathInf","lrp","_10","route","_11","isRegex","numExtraSegments","routesArray","accNumSegments","currentRoute","layerRoutePath","getLayerRoutePathString","getLayerRoutePathInfo","_hasParameters","finalPartialRoute","originalUrl","__sentry_transaction","finalRoute","customRoute","baseUrl","extractPathForTransaction","instrumentRouter","arity","startChild","_len11","_7","_8","_9","wrapMiddlewareArgs","originalCallback","_key14","__initStatic","Postgres","_usePgNative","usePgNative","pkg","native","Client","parentSpan","rv","_12","_13","_14","_15","Mysql","sql","fields","OPERATIONS","OPERATION_SIGNATURES","bulkWrite","countDocuments","createIndex","createIndexes","deleteMany","deleteOne","distinct","dropIndex","findOne","findOneAndDelete","findOneAndReplace","findOneAndUpdate","indexExists","insertMany","insertOne","mapReduce","rename","replaceOne","updateMany","updateOne","isCursor","maybeCursor","Mongo","_operations","operations","_describeOperations","describeOperations","_useMongoose","useMongoose","_instrumentOperations","Collection","operation","_this151","_patchOperation","getSpanContext","_getSpanContextFromOperationArguments","_this152","_len14","_key15","lastArg","maybePromiseOrCursor","_16","_17","collectionName","dbName","signature","shouldDescribe","_args12","isValidPrismaClient","possibleClient","Prisma","_client","$use","model","GraphQL","setSpan","_len15","_key16","Apollo","useNestjs","_useNest","GraphQLFactory","resolversExplorerService","instrumentResolvers","_key17","_pkg","ApolloServerBase","resolvers","schema","modules","resolverGroupName","resolverName","_len17","_key18","wrapResolver","DEFAULT_TRACE_PROPAGATION_TARGETS","defaultRequestInstrumentationOptions","traceFetch","traceXHR","tracingOrigins","tracePropagationTargets","markBackgroundTransactions","routingInstrumentation","customStartTransaction","startTransactionOnPageLoad","startTransactionOnLocationChange","startingUrl","pathname","_ref13","enableLongTask","packageToIntegrationMapping","mongodb","mongoose","mysql","pg","mappedPackages","integrations","_autoloadDatabaseIntegrations","Leaderboards$1","leaderboards2"],"mappings":"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"}